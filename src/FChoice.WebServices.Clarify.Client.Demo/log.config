<log4net>
		<appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender" >
			<param name="File" value="C:\\first\\product\\fcClient2\\pages\\logs\\fcsdk.log" />
			<param name="AppendToFile" value="true" />
			<param name="RollingStyle" value="Size" />
			<param name="MaxSizeRollBackups" value="100" />
			<param name="MaximumFileSize" value="1024KB" />
			<param name="StaticLogFileName" value="true" />
			
			<layout type="log4net.Layout.PatternLayout">
				<param name="ConversionPattern" value="%d [user: %X{user}] [fcsessionid: %X{session}] [%-5p] [%c]%n	%m%n%n" />
			</layout>
		</appender>

		<appender name="LargeQueryAppender" type="log4net.Appender.RollingFileAppender" >
				<param name="File" value="C:\\first\\product\\fcClient2\\pages\\logs\\largequery.log" />
				<param name="AppendToFile" value="true" />
				<param name="RollingStyle" value="Size" />
				<param name="MaxSizeRollBackups" value="100" />
				<param name="MaximumFileSize" value="1024KB" />
				<param name="StaticLogFileName" value="true" />
				
				<layout type="log4net.Layout.PatternLayout">
					 <param name="ConversionPattern" value="%d [user: %X{user}] [fcsessionid: %X{session}] [%-5p] [%c]%n	%m%n%n" />
				</layout>
				
				<!-- Only output large queries -->
				<filter type="log4net.Filter.StringMatchFilter">
					 <param name="StringToMatch" value="Large Query: True"/>
				</filter>
				<filter type="log4net.Filter.DenyAllFilter" />
		 </appender>


		<root>
			<level value="all" />			
			<appender-ref ref="RollingFileAppender" />
			<appender-ref ref="LargeQueryAppender" />
		</root>


</log4net>


<!--  valid conversionpattern values -->
<!--  %d   date & time -->
<!--  %-5p level       -->
<!--  %m   message     -->
<!--  %c   logger name -->
<!--  %n   newline     -->

<!-- valid levels: from most verbose to no logging: -->
<!--      all        -->
<!--      debug      -->
<!--      info       -->
<!--      warn       -->
<!--      error      -->
<!--      all        -->
<!--      fatal      -->
<!--      off        -->


