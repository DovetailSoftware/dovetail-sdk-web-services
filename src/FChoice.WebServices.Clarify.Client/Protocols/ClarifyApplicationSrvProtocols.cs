//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.2032.
// 
namespace FChoice.WebServices.Clarify.Client.Protocols.ClarifyApplicationSrv {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ClarifyApplicationSrvSoap", Namespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(HierarchicalStringElementProtocol))]
    public class ClarifyApplicationSrv : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public ClarifyApplicationSrv() {
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1/CreateSession", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1")]
        public string CreateSession(string userName, string password, ClarifyLoginType loginType) {
            object[] results = this.Invoke("CreateSession", new object[] {
                        userName,
                        password,
                        loginType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateSession(string userName, string password, ClarifyLoginType loginType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateSession", new object[] {
                        userName,
                        password,
                        loginType}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCreateSession(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1/IsSessionValid", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1")]
        public bool IsSessionValid(string sessionToken) {
            object[] results = this.Invoke("IsSessionValid", new object[] {
                        sessionToken});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsSessionValid(string sessionToken, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsSessionValid", new object[] {
                        sessionToken}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsSessionValid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1/GetDatabaseVersion", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1")]
        public string GetDatabaseVersion() {
            object[] results = this.Invoke("GetDatabaseVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDatabaseVersion(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDatabaseVersion", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetDatabaseVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1/GetClarifyVersion", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1")]
        public string GetClarifyVersion() {
            object[] results = this.Invoke("GetClarifyVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetClarifyVersion(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetClarifyVersion", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetClarifyVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1/GetServerTimezone", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1")]
        public TimeZoneProtocol GetServerTimezone() {
            object[] results = this.Invoke("GetServerTimezone", new object[0]);
            return ((TimeZoneProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetServerTimezone(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetServerTimezone", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public TimeZoneProtocol EndGetServerTimezone(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TimeZoneProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1/GetTimeZonesInCountry", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1")]
        public TimeZoneProtocol[] GetTimeZonesInCountry(string countryName) {
            object[] results = this.Invoke("GetTimeZonesInCountry", new object[] {
                        countryName});
            return ((TimeZoneProtocol[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTimeZonesInCountry(string countryName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTimeZonesInCountry", new object[] {
                        countryName}, callback, asyncState);
        }
        
        /// <remarks/>
        public TimeZoneProtocol[] EndGetTimeZonesInCountry(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TimeZoneProtocol[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1/GetDefaultTimeZone", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1")]
        public TimeZoneProtocol GetDefaultTimeZone() {
            object[] results = this.Invoke("GetDefaultTimeZone", new object[0]);
            return ((TimeZoneProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDefaultTimeZone(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDefaultTimeZone", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public TimeZoneProtocol EndGetDefaultTimeZone(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TimeZoneProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1/GetTimeZones", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1")]
        public TimeZoneProtocol[] GetTimeZones() {
            object[] results = this.Invoke("GetTimeZones", new object[0]);
            return ((TimeZoneProtocol[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTimeZones(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTimeZones", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public TimeZoneProtocol[] EndGetTimeZones(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TimeZoneProtocol[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1/GetTimeZoneObjid", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1")]
        public int GetTimeZoneObjid(string timezoneName, bool fullName) {
            object[] results = this.Invoke("GetTimeZoneObjid", new object[] {
                        timezoneName,
                        fullName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTimeZoneObjid(string timezoneName, bool fullName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTimeZoneObjid", new object[] {
                        timezoneName,
                        fullName}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetTimeZoneObjid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1/IsTimeZone", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1")]
        public bool IsTimeZone(string timezoneName) {
            object[] results = this.Invoke("IsTimeZone", new object[] {
                        timezoneName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsTimeZone(string timezoneName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsTimeZone", new object[] {
                        timezoneName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsTimeZone(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1/GetHgbstList", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1")]
        public HierarchicalStringElementProtocol[] GetHgbstList(string listName, string[] elementTitles) {
            object[] results = this.Invoke("GetHgbstList", new object[] {
                        listName,
                        elementTitles});
            return ((HierarchicalStringElementProtocol[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetHgbstList(string listName, string[] elementTitles, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetHgbstList", new object[] {
                        listName,
                        elementTitles}, callback, asyncState);
        }
        
        /// <remarks/>
        public HierarchicalStringElementProtocol[] EndGetHgbstList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((HierarchicalStringElementProtocol[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1/GetHgbstElmDefault", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1")]
        public string GetHgbstElmDefault(string listName, string[] elementTitles) {
            object[] results = this.Invoke("GetHgbstElmDefault", new object[] {
                        listName,
                        elementTitles});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetHgbstElmDefault(string listName, string[] elementTitles, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetHgbstElmDefault", new object[] {
                        listName,
                        elementTitles}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetHgbstElmDefault(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1/IsState", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1")]
        public bool IsState(string country, string state, bool isFullStateName) {
            object[] results = this.Invoke("IsState", new object[] {
                        country,
                        state,
                        isFullStateName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsState(string country, string state, bool isFullStateName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsState", new object[] {
                        country,
                        state,
                        isFullStateName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsState(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1/GetDefaultState", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1")]
        public StateProvinceProtocol GetDefaultState(string country) {
            object[] results = this.Invoke("GetDefaultState", new object[] {
                        country});
            return ((StateProvinceProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDefaultState(string country, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDefaultState", new object[] {
                        country}, callback, asyncState);
        }
        
        /// <remarks/>
        public StateProvinceProtocol EndGetDefaultState(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((StateProvinceProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1/GetStates", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1")]
        public StateProvinceProtocol[] GetStates(string country) {
            object[] results = this.Invoke("GetStates", new object[] {
                        country});
            return ((StateProvinceProtocol[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetStates(string country, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetStates", new object[] {
                        country}, callback, asyncState);
        }
        
        /// <remarks/>
        public StateProvinceProtocol[] EndGetStates(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((StateProvinceProtocol[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1/GetCountries", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1")]
        public CountryProtocol[] GetCountries() {
            object[] results = this.Invoke("GetCountries", new object[0]);
            return ((CountryProtocol[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCountries(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCountries", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public CountryProtocol[] EndGetCountries(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CountryProtocol[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1/IsCountry", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1")]
        public bool IsCountry(string country) {
            object[] results = this.Invoke("IsCountry", new object[] {
                        country});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsCountry(string country, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsCountry", new object[] {
                        country}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsCountry(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1/GetDefaultCountry", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1")]
        public CountryProtocol GetDefaultCountry() {
            object[] results = this.Invoke("GetDefaultCountry", new object[0]);
            return ((CountryProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDefaultCountry(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDefaultCountry", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public CountryProtocol EndGetDefaultCountry(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CountryProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1/GetGbstList", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1")]
        public GlobalStringListProtocol GetGbstList(string listTitle) {
            object[] results = this.Invoke("GetGbstList", new object[] {
                        listTitle});
            return ((GlobalStringListProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGbstList(string listTitle, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGbstList", new object[] {
                        listTitle}, callback, asyncState);
        }
        
        /// <remarks/>
        public GlobalStringListProtocol EndGetGbstList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GlobalStringListProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1/GetGbstDefault", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1")]
        public string GetGbstDefault(string listTitle) {
            object[] results = this.Invoke("GetGbstDefault", new object[] {
                        listTitle});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGbstDefault(string listTitle, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGbstDefault", new object[] {
                        listTitle}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetGbstDefault(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ClarifyLoginType", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1")]
    public enum ClarifyLoginType {
        
        /// <remarks/>
        Contact,
        
        /// <remarks/>
        User,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("TimeZoneProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1")]
    public class TimeZoneProtocol {
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public string FullName;
        
        /// <remarks/>
        public int UtcOffsetSeconds;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("GlobalStringElementProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1")]
    public class GlobalStringElementProtocol {
        
        /// <remarks/>
        public string AdditionalInfo;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public int ObjectID;
        
        /// <remarks/>
        public int Rank;
        
        /// <remarks/>
        public int State;
        
        /// <remarks/>
        public string Title;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("GlobalStringListProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1")]
    public class GlobalStringListProtocol {
        
        /// <remarks/>
        public string AdditionalInfo;
        
        /// <remarks/>
        public GlobalStringElementProtocol DefaultElement;
        
        /// <remarks/>
        public GlobalStringElementProtocol[] Elements;
        
        /// <remarks/>
        public int ListID;
        
        /// <remarks/>
        public int LocaleID;
        
        /// <remarks/>
        public int ObjectID;
        
        /// <remarks/>
        public string Title;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CountryProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1")]
    public class CountryProtocol {
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public StateProvinceProtocol DefaultState;
        
        /// <remarks/>
        public TimeZoneProtocol DefaultTimeZone;
        
        /// <remarks/>
        public int Code;
        
        /// <remarks/>
        public bool IsDefault;
        
        /// <remarks/>
        public int ObjectID;
        
        /// <remarks/>
        public StateProvinceProtocol[] States;
        
        /// <remarks/>
        public TimeZoneProtocol[] TimeZones;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("StateProvinceProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1")]
    public class StateProvinceProtocol {
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public string FullName;
        
        /// <remarks/>
        public bool IsDefault;
        
        /// <remarks/>
        public int ObjectID;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("HierarchicalStringElementProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ClarifyApplicationSrv_" +
"v1")]
    public class HierarchicalStringElementProtocol {
        
        /// <remarks/>
        public string Title;
        
        /// <remarks/>
        public int Rank;
        
        /// <remarks/>
        public string State;
        
        /// <remarks/>
        public int ObjectID;
        
        /// <remarks/>
        public bool IsActive;
        
        /// <remarks/>
        public HierarchicalStringElementProtocol[] Elements;
    }
}
