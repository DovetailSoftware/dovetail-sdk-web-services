//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.2032.
// 
namespace FChoice.WebServices.Clarify.Client.Protocols.SalesToolkitSrv {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SalesToolkitSrvSoap", Namespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(AdditionalFieldProtocol))]
    public class SalesToolkitSrv : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        public AuthenticationHeader AuthenticationHeaderValue;
        
        /// <remarks/>
        public SalesToolkitSrv() {
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Reo" +
"penOpportunity", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol ReopenOpportunity(string opportunityIDNum) {
            object[] results = this.Invoke("ReopenOpportunity", new object[] {
                        opportunityIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReopenOpportunity(string opportunityIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReopenOpportunity", new object[] {
                        opportunityIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndReopenOpportunity(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ReopenOpportunity1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Reo" +
"penOpportunity2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("ReopenOpportunity2Result")]
        public ToolkitResultProtocol ReopenOpportunity(ReopenOpportunitySetupProtocol setupParam) {
            object[] results = this.Invoke("ReopenOpportunity1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReopenOpportunity1(ReopenOpportunitySetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReopenOpportunity1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndReopenOpportunity1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Clo" +
"seOpportunity", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol CloseOpportunity(string opportunityIDNum) {
            object[] results = this.Invoke("CloseOpportunity", new object[] {
                        opportunityIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCloseOpportunity(string opportunityIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CloseOpportunity", new object[] {
                        opportunityIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCloseOpportunity(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CloseOpportunity1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Clo" +
"seOpportunity2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CloseOpportunity2Result")]
        public ToolkitResultProtocol CloseOpportunity(CloseOpportunitySetupProtocol setupParam) {
            object[] results = this.Invoke("CloseOpportunity1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCloseOpportunity1(CloseOpportunitySetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CloseOpportunity1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCloseOpportunity1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Log" +
"LeadPhone", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol LogLeadPhone(int leadObjid, string contactFirstName, string contactLastName, string contactPhone, int duration) {
            object[] results = this.Invoke("LogLeadPhone", new object[] {
                        leadObjid,
                        contactFirstName,
                        contactLastName,
                        contactPhone,
                        duration});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogLeadPhone(int leadObjid, string contactFirstName, string contactLastName, string contactPhone, int duration, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogLeadPhone", new object[] {
                        leadObjid,
                        contactFirstName,
                        contactLastName,
                        contactPhone,
                        duration}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogLeadPhone(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogLeadPhone1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Log" +
"LeadPhone2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogLeadPhone2Result")]
        public ToolkitResultProtocol LogLeadPhone(LogLeadPhoneSetupProtocol setupParam) {
            object[] results = this.Invoke("LogLeadPhone1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogLeadPhone1(LogLeadPhoneSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogLeadPhone1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogLeadPhone1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Log" +
"LeadNote", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol LogLeadNote(int leadObjid) {
            object[] results = this.Invoke("LogLeadNote", new object[] {
                        leadObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogLeadNote(int leadObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogLeadNote", new object[] {
                        leadObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogLeadNote(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogLeadNote1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Log" +
"LeadNote2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogLeadNote2Result")]
        public ToolkitResultProtocol LogLeadNote(LogLeadNoteSetupProtocol setupParam) {
            object[] results = this.Invoke("LogLeadNote1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogLeadNote1(LogLeadNoteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogLeadNote1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogLeadNote1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Ass" +
"ignLead", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol AssignLead(int leadObjid, string newOwner) {
            object[] results = this.Invoke("AssignLead", new object[] {
                        leadObjid,
                        newOwner});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAssignLead(int leadObjid, string newOwner, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AssignLead", new object[] {
                        leadObjid,
                        newOwner}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAssignLead(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AssignLead1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Ass" +
"ignLead2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("AssignLead2Result")]
        public ToolkitResultProtocol AssignLead(AssignLeadSetupProtocol setupParam) {
            object[] results = this.Invoke("AssignLead1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAssignLead1(AssignLeadSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AssignLead1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAssignLead1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Cre" +
"ateLead", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol CreateLead(string state, string country, string timeZone, LeadSiteType siteType, string leadSource) {
            object[] results = this.Invoke("CreateLead", new object[] {
                        state,
                        country,
                        timeZone,
                        siteType,
                        leadSource});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateLead(string state, string country, string timeZone, LeadSiteType siteType, string leadSource, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateLead", new object[] {
                        state,
                        country,
                        timeZone,
                        siteType,
                        leadSource}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateLead(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateLead1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Cre" +
"ateLead2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateLead2Result")]
        public ToolkitResultProtocol CreateLead(CreateLeadSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateLead1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateLead1(CreateLeadSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateLead1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateLead1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Upd" +
"ateLead", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol UpdateLead(int leadObjid) {
            object[] results = this.Invoke("UpdateLead", new object[] {
                        leadObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateLead(int leadObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateLead", new object[] {
                        leadObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateLead(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateLead1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Upd" +
"ateLead2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdateLead2Result")]
        public ToolkitResultProtocol UpdateLead(UpdateLeadSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdateLead1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateLead1(UpdateLeadSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateLead1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateLead1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Cre" +
"ateQuoteLineItem", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol CreateQuoteLineItem(string contractIDNum, string partNumber, string partDomain, string partRevision, int quantity, string priceSchedule, int parentLineItemObjid) {
            object[] results = this.Invoke("CreateQuoteLineItem", new object[] {
                        contractIDNum,
                        partNumber,
                        partDomain,
                        partRevision,
                        quantity,
                        priceSchedule,
                        parentLineItemObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateQuoteLineItem(string contractIDNum, string partNumber, string partDomain, string partRevision, int quantity, string priceSchedule, int parentLineItemObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateQuoteLineItem", new object[] {
                        contractIDNum,
                        partNumber,
                        partDomain,
                        partRevision,
                        quantity,
                        priceSchedule,
                        parentLineItemObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateQuoteLineItem(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateQuoteLineItem1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Cre" +
"ateQuoteLineItem2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateQuoteLineItem2Result")]
        public ToolkitResultProtocol CreateQuoteLineItem(string contractIDNum, string partNumber, string partDomain, string partRevision, string priceSchedule, string serialNumber, int parentLineItemObjid) {
            object[] results = this.Invoke("CreateQuoteLineItem1", new object[] {
                        contractIDNum,
                        partNumber,
                        partDomain,
                        partRevision,
                        priceSchedule,
                        serialNumber,
                        parentLineItemObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateQuoteLineItem1(string contractIDNum, string partNumber, string partDomain, string partRevision, string priceSchedule, string serialNumber, int parentLineItemObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateQuoteLineItem1", new object[] {
                        contractIDNum,
                        partNumber,
                        partDomain,
                        partRevision,
                        priceSchedule,
                        serialNumber,
                        parentLineItemObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateQuoteLineItem1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateQuoteLineItem2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Cre" +
"ateQuoteLineItem3", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateQuoteLineItem3Result")]
        public ToolkitResultProtocol CreateQuoteLineItem(CreateQuoteLineItemSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateQuoteLineItem2", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateQuoteLineItem2(CreateQuoteLineItemSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateQuoteLineItem2", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateQuoteLineItem2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Cre" +
"ateQuote", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol CreateQuote(string quoteTitle) {
            object[] results = this.Invoke("CreateQuote", new object[] {
                        quoteTitle});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateQuote(string quoteTitle, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateQuote", new object[] {
                        quoteTitle}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateQuote(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateQuote1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Cre" +
"ateQuote2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateQuote2Result")]
        public ToolkitResultProtocol CreateQuote(CreateQuoteSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateQuote1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateQuote1(CreateQuoteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateQuote1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateQuote1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Cha" +
"ngeQuoteStatus", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol ChangeQuoteStatus(string quoteIDNum) {
            object[] results = this.Invoke("ChangeQuoteStatus", new object[] {
                        quoteIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeQuoteStatus(string quoteIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeQuoteStatus", new object[] {
                        quoteIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndChangeQuoteStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ChangeQuoteStatus1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Cha" +
"ngeQuoteStatus2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("ChangeQuoteStatus2Result")]
        public ToolkitResultProtocol ChangeQuoteStatus(ChangeQuoteStatusSetupProtocol setupParam) {
            object[] results = this.Invoke("ChangeQuoteStatus1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeQuoteStatus1(ChangeQuoteStatusSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeQuoteStatus1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndChangeQuoteStatus1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Cha" +
"ngeOpportunityStatus", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol ChangeOpportunityStatus(string opportunityIDNum) {
            object[] results = this.Invoke("ChangeOpportunityStatus", new object[] {
                        opportunityIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeOpportunityStatus(string opportunityIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeOpportunityStatus", new object[] {
                        opportunityIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndChangeOpportunityStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ChangeOpportunityStatus1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Cha" +
"ngeOpportunityStatus2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("ChangeOpportunityStatus2Result")]
        public ToolkitResultProtocol ChangeOpportunityStatus(ChangeOpportunityStatusSetupProtocol setupParam) {
            object[] results = this.Invoke("ChangeOpportunityStatus1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeOpportunityStatus1(ChangeOpportunityStatusSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeOpportunityStatus1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndChangeOpportunityStatus1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Cha" +
"ngeActionItemStatus", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol ChangeActionItemStatus(string actionItemIDNum) {
            object[] results = this.Invoke("ChangeActionItemStatus", new object[] {
                        actionItemIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeActionItemStatus(string actionItemIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeActionItemStatus", new object[] {
                        actionItemIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndChangeActionItemStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ChangeActionItemStatus1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Cha" +
"ngeActionItemStatus2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("ChangeActionItemStatus2Result")]
        public ToolkitResultProtocol ChangeActionItemStatus(ChangeActionItemStatusSetupProtocol setupParam) {
            object[] results = this.Invoke("ChangeActionItemStatus1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeActionItemStatus1(ChangeActionItemStatusSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeActionItemStatus1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndChangeActionItemStatus1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Mov" +
"eQuote", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol MoveQuote(string quoteIDNum, string newWipBin) {
            object[] results = this.Invoke("MoveQuote", new object[] {
                        quoteIDNum,
                        newWipBin});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveQuote(string quoteIDNum, string newWipBin, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveQuote", new object[] {
                        quoteIDNum,
                        newWipBin}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndMoveQuote(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="MoveQuote1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Mov" +
"eQuote2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("MoveQuote2Result")]
        public ToolkitResultProtocol MoveQuote(MoveQuoteSetupProtocol setupParam) {
            object[] results = this.Invoke("MoveQuote1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveQuote1(MoveQuoteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveQuote1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndMoveQuote1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Mov" +
"eOpportunity", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol MoveOpportunity(string opportunityIDNum, string newWipBin) {
            object[] results = this.Invoke("MoveOpportunity", new object[] {
                        opportunityIDNum,
                        newWipBin});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveOpportunity(string opportunityIDNum, string newWipBin, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveOpportunity", new object[] {
                        opportunityIDNum,
                        newWipBin}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndMoveOpportunity(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="MoveOpportunity1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Mov" +
"eOpportunity2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("MoveOpportunity2Result")]
        public ToolkitResultProtocol MoveOpportunity(MoveOpportunitySetupProtocol setupParam) {
            object[] results = this.Invoke("MoveOpportunity1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveOpportunity1(MoveOpportunitySetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveOpportunity1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndMoveOpportunity1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Mov" +
"eActionItem", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol MoveActionItem(string actionItemIDNum, string newWipBin) {
            object[] results = this.Invoke("MoveActionItem", new object[] {
                        actionItemIDNum,
                        newWipBin});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveActionItem(string actionItemIDNum, string newWipBin, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveActionItem", new object[] {
                        actionItemIDNum,
                        newWipBin}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndMoveActionItem(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="MoveActionItem1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Mov" +
"eActionItem2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("MoveActionItem2Result")]
        public ToolkitResultProtocol MoveActionItem(MoveActionItemSetupProtocol setupParam) {
            object[] results = this.Invoke("MoveActionItem1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveActionItem1(MoveActionItemSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveActionItem1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndMoveActionItem1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Ass" +
"ignQuote", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol AssignQuote(string quoteIDNum) {
            object[] results = this.Invoke("AssignQuote", new object[] {
                        quoteIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAssignQuote(string quoteIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AssignQuote", new object[] {
                        quoteIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAssignQuote(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AssignQuote1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Ass" +
"ignQuote2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("AssignQuote2Result")]
        public ToolkitResultProtocol AssignQuote(AssignQuoteSetupProtocol setupParam) {
            object[] results = this.Invoke("AssignQuote1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAssignQuote1(AssignQuoteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AssignQuote1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAssignQuote1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Ass" +
"ignOpportunity", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol AssignOpportunity(string opportunityIDNum) {
            object[] results = this.Invoke("AssignOpportunity", new object[] {
                        opportunityIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAssignOpportunity(string opportunityIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AssignOpportunity", new object[] {
                        opportunityIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAssignOpportunity(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AssignOpportunity1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Ass" +
"ignOpportunity2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("AssignOpportunity2Result")]
        public ToolkitResultProtocol AssignOpportunity(AssignOpportunitySetupProtocol setupParam) {
            object[] results = this.Invoke("AssignOpportunity1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAssignOpportunity1(AssignOpportunitySetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AssignOpportunity1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAssignOpportunity1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Ass" +
"ignActionItem", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol AssignActionItem(string actionItemIDNum) {
            object[] results = this.Invoke("AssignActionItem", new object[] {
                        actionItemIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAssignActionItem(string actionItemIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AssignActionItem", new object[] {
                        actionItemIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAssignActionItem(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AssignActionItem1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Ass" +
"ignActionItem2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("AssignActionItem2Result")]
        public ToolkitResultProtocol AssignActionItem(AssignActionItemSetupProtocol setupParam) {
            object[] results = this.Invoke("AssignActionItem1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAssignActionItem1(AssignActionItemSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AssignActionItem1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAssignActionItem1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Yan" +
"kQuote", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol YankQuote(string quoteIDNum) {
            object[] results = this.Invoke("YankQuote", new object[] {
                        quoteIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginYankQuote(string quoteIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("YankQuote", new object[] {
                        quoteIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndYankQuote(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="YankQuote1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Yan" +
"kQuote2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("YankQuote2Result")]
        public ToolkitResultProtocol YankQuote(YankQuoteSetupProtocol setupParam) {
            object[] results = this.Invoke("YankQuote1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginYankQuote1(YankQuoteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("YankQuote1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndYankQuote1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Yan" +
"kOpportunity", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol YankOpportunity(string opportunityIDNum) {
            object[] results = this.Invoke("YankOpportunity", new object[] {
                        opportunityIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginYankOpportunity(string opportunityIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("YankOpportunity", new object[] {
                        opportunityIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndYankOpportunity(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="YankOpportunity1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Yan" +
"kOpportunity2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("YankOpportunity2Result")]
        public ToolkitResultProtocol YankOpportunity(YankOpportunitySetupProtocol setupParam) {
            object[] results = this.Invoke("YankOpportunity1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginYankOpportunity1(YankOpportunitySetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("YankOpportunity1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndYankOpportunity1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Yan" +
"kActionItem", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol YankActionItem(string actionItemIDNum) {
            object[] results = this.Invoke("YankActionItem", new object[] {
                        actionItemIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginYankActionItem(string actionItemIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("YankActionItem", new object[] {
                        actionItemIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndYankActionItem(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="YankActionItem1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Yan" +
"kActionItem2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("YankActionItem2Result")]
        public ToolkitResultProtocol YankActionItem(YankActionItemSetupProtocol setupParam) {
            object[] results = this.Invoke("YankActionItem1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginYankActionItem1(YankActionItemSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("YankActionItem1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndYankActionItem1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/For" +
"wardQuote", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol ForwardQuote(string quoteIDNum, string newQueue) {
            object[] results = this.Invoke("ForwardQuote", new object[] {
                        quoteIDNum,
                        newQueue});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginForwardQuote(string quoteIDNum, string newQueue, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ForwardQuote", new object[] {
                        quoteIDNum,
                        newQueue}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndForwardQuote(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ForwardQuote1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/For" +
"wardQuote2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("ForwardQuote2Result")]
        public ToolkitResultProtocol ForwardQuote(ForwardQuoteSetupProtocol setupParam) {
            object[] results = this.Invoke("ForwardQuote1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginForwardQuote1(ForwardQuoteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ForwardQuote1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndForwardQuote1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/For" +
"wardOpportunity", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol ForwardOpportunity(string opportunityIDNum, string newQueue) {
            object[] results = this.Invoke("ForwardOpportunity", new object[] {
                        opportunityIDNum,
                        newQueue});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginForwardOpportunity(string opportunityIDNum, string newQueue, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ForwardOpportunity", new object[] {
                        opportunityIDNum,
                        newQueue}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndForwardOpportunity(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ForwardOpportunity1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/For" +
"wardOpportunity2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("ForwardOpportunity2Result")]
        public ToolkitResultProtocol ForwardOpportunity(ForwardOpportunitySetupProtocol setupParam) {
            object[] results = this.Invoke("ForwardOpportunity1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginForwardOpportunity1(ForwardOpportunitySetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ForwardOpportunity1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndForwardOpportunity1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/For" +
"wardActionItem", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol ForwardActionItem(string actionItemIDNum, string newQueue) {
            object[] results = this.Invoke("ForwardActionItem", new object[] {
                        actionItemIDNum,
                        newQueue});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginForwardActionItem(string actionItemIDNum, string newQueue, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ForwardActionItem", new object[] {
                        actionItemIDNum,
                        newQueue}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndForwardActionItem(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ForwardActionItem1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/For" +
"wardActionItem2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("ForwardActionItem2Result")]
        public ToolkitResultProtocol ForwardActionItem(ForwardActionItemSetupProtocol setupParam) {
            object[] results = this.Invoke("ForwardActionItem1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginForwardActionItem1(ForwardActionItemSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ForwardActionItem1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndForwardActionItem1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Acc" +
"eptQuote", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol AcceptQuote(string quoteIDNum) {
            object[] results = this.Invoke("AcceptQuote", new object[] {
                        quoteIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAcceptQuote(string quoteIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AcceptQuote", new object[] {
                        quoteIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAcceptQuote(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AcceptQuote1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Acc" +
"eptQuote2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("AcceptQuote2Result")]
        public ToolkitResultProtocol AcceptQuote(AcceptQuoteSetupProtocol setupParam) {
            object[] results = this.Invoke("AcceptQuote1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAcceptQuote1(AcceptQuoteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AcceptQuote1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAcceptQuote1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Acc" +
"eptOpportunity", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol AcceptOpportunity(string opportunityIDNum) {
            object[] results = this.Invoke("AcceptOpportunity", new object[] {
                        opportunityIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAcceptOpportunity(string opportunityIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AcceptOpportunity", new object[] {
                        opportunityIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAcceptOpportunity(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AcceptOpportunity1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Acc" +
"eptOpportunity2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("AcceptOpportunity2Result")]
        public ToolkitResultProtocol AcceptOpportunity(AcceptOpportunitySetupProtocol setupParam) {
            object[] results = this.Invoke("AcceptOpportunity1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAcceptOpportunity1(AcceptOpportunitySetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AcceptOpportunity1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAcceptOpportunity1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Acc" +
"eptActionItem", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol AcceptActionItem(string actionItemIDNum) {
            object[] results = this.Invoke("AcceptActionItem", new object[] {
                        actionItemIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAcceptActionItem(string actionItemIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AcceptActionItem", new object[] {
                        actionItemIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAcceptActionItem(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AcceptActionItem1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Acc" +
"eptActionItem2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("AcceptActionItem2Result")]
        public ToolkitResultProtocol AcceptActionItem(AcceptActionItemSetupProtocol setupParam) {
            object[] results = this.Invoke("AcceptActionItem1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAcceptActionItem1(AcceptActionItemSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AcceptActionItem1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAcceptActionItem1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Rej" +
"ectQuote", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol RejectQuote(string quoteIDNum) {
            object[] results = this.Invoke("RejectQuote", new object[] {
                        quoteIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRejectQuote(string quoteIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RejectQuote", new object[] {
                        quoteIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndRejectQuote(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="RejectQuote1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Rej" +
"ectQuote2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("RejectQuote2Result")]
        public ToolkitResultProtocol RejectQuote(RejectQuoteSetupProtocol setupParam) {
            object[] results = this.Invoke("RejectQuote1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRejectQuote1(RejectQuoteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RejectQuote1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndRejectQuote1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Rej" +
"ectOpportunity", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol RejectOpportunity(string opportunityIDNum) {
            object[] results = this.Invoke("RejectOpportunity", new object[] {
                        opportunityIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRejectOpportunity(string opportunityIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RejectOpportunity", new object[] {
                        opportunityIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndRejectOpportunity(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="RejectOpportunity1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Rej" +
"ectOpportunity2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("RejectOpportunity2Result")]
        public ToolkitResultProtocol RejectOpportunity(RejectOpportunitySetupProtocol setupParam) {
            object[] results = this.Invoke("RejectOpportunity1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRejectOpportunity1(RejectOpportunitySetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RejectOpportunity1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndRejectOpportunity1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Rej" +
"ectActionItem", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol RejectActionItem(string actionItemIDNum) {
            object[] results = this.Invoke("RejectActionItem", new object[] {
                        actionItemIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRejectActionItem(string actionItemIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RejectActionItem", new object[] {
                        actionItemIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndRejectActionItem(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="RejectActionItem1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Rej" +
"ectActionItem2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("RejectActionItem2Result")]
        public ToolkitResultProtocol RejectActionItem(RejectActionItemSetupProtocol setupParam) {
            object[] results = this.Invoke("RejectActionItem1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRejectActionItem1(RejectActionItemSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RejectActionItem1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndRejectActionItem1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Dis" +
"patchQuote", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol DispatchQuote(string quoteIDNum, string queue) {
            object[] results = this.Invoke("DispatchQuote", new object[] {
                        quoteIDNum,
                        queue});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDispatchQuote(string quoteIDNum, string queue, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DispatchQuote", new object[] {
                        quoteIDNum,
                        queue}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDispatchQuote(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="DispatchQuote1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Dis" +
"patchQuote2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("DispatchQuote2Result")]
        public ToolkitResultProtocol DispatchQuote(DispatchQuoteSetupProtocol setupParam) {
            object[] results = this.Invoke("DispatchQuote1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDispatchQuote1(DispatchQuoteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DispatchQuote1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDispatchQuote1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Dis" +
"patchOpportunity", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol DispatchOpportunity(string opportunityIDNum, string queue) {
            object[] results = this.Invoke("DispatchOpportunity", new object[] {
                        opportunityIDNum,
                        queue});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDispatchOpportunity(string opportunityIDNum, string queue, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DispatchOpportunity", new object[] {
                        opportunityIDNum,
                        queue}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDispatchOpportunity(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="DispatchOpportunity1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Dis" +
"patchOpportunity2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("DispatchOpportunity2Result")]
        public ToolkitResultProtocol DispatchOpportunity(DispatchOpportunitySetupProtocol setupParam) {
            object[] results = this.Invoke("DispatchOpportunity1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDispatchOpportunity1(DispatchOpportunitySetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DispatchOpportunity1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDispatchOpportunity1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Dis" +
"patchActionItem", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol DispatchActionItem(string actionItemIDNum, string queue) {
            object[] results = this.Invoke("DispatchActionItem", new object[] {
                        actionItemIDNum,
                        queue});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDispatchActionItem(string actionItemIDNum, string queue, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DispatchActionItem", new object[] {
                        actionItemIDNum,
                        queue}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDispatchActionItem(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="DispatchActionItem1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Dis" +
"patchActionItem2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("DispatchActionItem2Result")]
        public ToolkitResultProtocol DispatchActionItem(DispatchActionItemSetupProtocol setupParam) {
            object[] results = this.Invoke("DispatchActionItem1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDispatchActionItem1(DispatchActionItemSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DispatchActionItem1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDispatchActionItem1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Cre" +
"ateOpportunity", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol CreateOpportunity(string opportunityName, string salesStage, System.Single probability) {
            object[] results = this.Invoke("CreateOpportunity", new object[] {
                        opportunityName,
                        salesStage,
                        probability});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateOpportunity(string opportunityName, string salesStage, System.Single probability, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateOpportunity", new object[] {
                        opportunityName,
                        salesStage,
                        probability}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateOpportunity(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateOpportunity1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Cre" +
"ateOpportunity2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateOpportunity2Result")]
        public ToolkitResultProtocol CreateOpportunity(CreateOpportunitySetupProtocol setupParam) {
            object[] results = this.Invoke("CreateOpportunity1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateOpportunity1(CreateOpportunitySetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateOpportunity1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateOpportunity1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Upd" +
"ateOpportunity", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol UpdateOpportunity(string opportunityIDNum) {
            object[] results = this.Invoke("UpdateOpportunity", new object[] {
                        opportunityIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateOpportunity(string opportunityIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateOpportunity", new object[] {
                        opportunityIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateOpportunity(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateOpportunity1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Upd" +
"ateOpportunity2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdateOpportunity2Result")]
        public ToolkitResultProtocol UpdateOpportunity(UpdateOpportunitySetupProtocol setupParam) {
            object[] results = this.Invoke("UpdateOpportunity1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateOpportunity1(UpdateOpportunitySetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateOpportunity1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateOpportunity1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Cha" +
"ngeActionItemCondition", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol ChangeActionItemCondition(string actionItemIDNum, string newcondition) {
            object[] results = this.Invoke("ChangeActionItemCondition", new object[] {
                        actionItemIDNum,
                        newcondition});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeActionItemCondition(string actionItemIDNum, string newcondition, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeActionItemCondition", new object[] {
                        actionItemIDNum,
                        newcondition}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndChangeActionItemCondition(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ChangeActionItemCondition1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Cha" +
"ngeActionItemCondition2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("ChangeActionItemCondition2Result")]
        public ToolkitResultProtocol ChangeActionItemCondition(ChangeActionItemConditionSetupProtocol setupParam) {
            object[] results = this.Invoke("ChangeActionItemCondition1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeActionItemCondition1(ChangeActionItemConditionSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeActionItemCondition1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndChangeActionItemCondition1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Cre" +
"ateActionItem", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol CreateActionItem() {
            object[] results = this.Invoke("CreateActionItem", new object[0]);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateActionItem(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateActionItem", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateActionItem(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateActionItem1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Cre" +
"ateActionItem2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateActionItem2Result")]
        public ToolkitResultProtocol CreateActionItem(CreateActionItemSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateActionItem1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateActionItem1(CreateActionItemSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateActionItem1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateActionItem1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Upd" +
"ateActionItem", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol UpdateActionItem(string actionItemIDNum) {
            object[] results = this.Invoke("UpdateActionItem", new object[] {
                        actionItemIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateActionItem(string actionItemIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateActionItem", new object[] {
                        actionItemIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateActionItem(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateActionItem1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Upd" +
"ateActionItem2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdateActionItem2Result")]
        public ToolkitResultProtocol UpdateActionItem(UpdateActionItemSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdateActionItem1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateActionItem1(UpdateActionItemSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateActionItem1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateActionItem1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Cha" +
"ngeOpportunityStage", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        public ToolkitResultProtocol ChangeOpportunityStage(string opportunityIDNum, OpportunityStage stage) {
            object[] results = this.Invoke("ChangeOpportunityStage", new object[] {
                        opportunityIDNum,
                        stage});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeOpportunityStage(string opportunityIDNum, OpportunityStage stage, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeOpportunityStage", new object[] {
                        opportunityIDNum,
                        stage}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndChangeOpportunityStage(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ChangeOpportunityStage1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1/Cha" +
"ngeOpportunityStage2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("ChangeOpportunityStage2Result")]
        public ToolkitResultProtocol ChangeOpportunityStage(ChangeOpportunityStageSetupProtocol setupParam) {
            object[] results = this.Invoke("ChangeOpportunityStage1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeOpportunityStage1(ChangeOpportunityStageSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeOpportunityStage1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndChangeOpportunityStage1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AuthenticationHeader", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class AuthenticationHeader : SoapHeader {
        
        /// <remarks/>
        public string SessionID;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ChangeOpportunityStageSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class ChangeOpportunityStageSetupProtocol {
        
        /// <remarks/>
        public string OpportunityIDNum;
        
        /// <remarks/>
        public string NewStatus;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime ChangeDate;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public OpportunityStage Stage;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("OpportunityStage", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public enum OpportunityStage {
        
        /// <remarks/>
        Lead,
        
        /// <remarks/>
        Lose,
        
        /// <remarks/>
        Opportunity,
        
        /// <remarks/>
        Win,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdateActionItemSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class UpdateActionItemSetupProtocol {
        
        /// <remarks/>
        public string ActionItemIDNum;
        
        /// <remarks/>
        public string Title;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string ContactFirstName;
        
        /// <remarks/>
        public string ContactLastName;
        
        /// <remarks/>
        public string ContactPhone;
        
        /// <remarks/>
        public string AccountName;
        
        /// <remarks/>
        public string LeadFirstName;
        
        /// <remarks/>
        public string LeadLastName;
        
        /// <remarks/>
        public string OpportunityIDNum;
        
        /// <remarks/>
        public string TaskType;
        
        /// <remarks/>
        public string Priority;
        
        /// <remarks/>
        public System.DateTime StartDate;
        
        /// <remarks/>
        public System.DateTime DueDate;
        
        /// <remarks/>
        public System.DateTime CompleteDate;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public System.DateTime UpdateDate;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AdditionalFieldProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class AdditionalFieldProtocol {
        
        /// <remarks/>
        public string FieldName;
        
        /// <remarks/>
        public AdditionalFieldType FieldType;
        
        /// <remarks/>
        public string FieldValue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AdditionalFieldType", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public enum AdditionalFieldType {
        
        /// <remarks/>
        String,
        
        /// <remarks/>
        Long,
        
        /// <remarks/>
        Double,
        
        /// <remarks/>
        Date,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateActionItemSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class CreateActionItemSetupProtocol {
        
        /// <remarks/>
        public string Title;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string ContactFirstName;
        
        /// <remarks/>
        public string ContactLastName;
        
        /// <remarks/>
        public string ContactPhone;
        
        /// <remarks/>
        public string AccountName;
        
        /// <remarks/>
        public string LeadFirstName;
        
        /// <remarks/>
        public string LeadLastName;
        
        /// <remarks/>
        public string OpportunityIDNum;
        
        /// <remarks/>
        public string TaskType;
        
        /// <remarks/>
        public string Priority;
        
        /// <remarks/>
        public System.DateTime StartDate;
        
        /// <remarks/>
        public System.DateTime DueDate;
        
        /// <remarks/>
        public System.DateTime CompleteDate;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ChangeActionItemConditionSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class ChangeActionItemConditionSetupProtocol {
        
        /// <remarks/>
        public string ActionItemIDNum;
        
        /// <remarks/>
        public string NewCondition;
        
        /// <remarks/>
        public string NewStatus;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime ChangeDate;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdateOpportunitySetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class UpdateOpportunitySetupProtocol {
        
        /// <remarks/>
        public string OpportunityIDNum;
        
        /// <remarks/>
        public string OpportunityName;
        
        /// <remarks/>
        public string AccountIDNum;
        
        /// <remarks/>
        public string ContactFirstName;
        
        /// <remarks/>
        public string ContactLastName;
        
        /// <remarks/>
        public string ContactPhone;
        
        /// <remarks/>
        public string Territory;
        
        /// <remarks/>
        public System.Decimal Amount;
        
        /// <remarks/>
        public System.DateTime CloseDate;
        
        /// <remarks/>
        public string LeadSource;
        
        /// <remarks/>
        public string Currency;
        
        /// <remarks/>
        public System.Single Probability;
        
        /// <remarks/>
        public string Process;
        
        /// <remarks/>
        public System.DateTime UpdateDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateOpportunitySetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class CreateOpportunitySetupProtocol {
        
        /// <remarks/>
        public string OpportunityName;
        
        /// <remarks/>
        public string AccountIDNum;
        
        /// <remarks/>
        public string ContactFirstName;
        
        /// <remarks/>
        public string ContactLastName;
        
        /// <remarks/>
        public string ContactPhone;
        
        /// <remarks/>
        public string Territory;
        
        /// <remarks/>
        public System.Decimal Amount;
        
        /// <remarks/>
        public System.DateTime CloseDate;
        
        /// <remarks/>
        public string SalesStage;
        
        /// <remarks/>
        public string LeadSource;
        
        /// <remarks/>
        public string Currency;
        
        /// <remarks/>
        public System.Single Probability;
        
        /// <remarks/>
        public string Process;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("DispatchActionItemSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class DispatchActionItemSetupProtocol {
        
        /// <remarks/>
        public string ActionItemIDNum;
        
        /// <remarks/>
        public string Queue;
        
        /// <remarks/>
        public System.DateTime DispatchDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("DispatchOpportunitySetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class DispatchOpportunitySetupProtocol {
        
        /// <remarks/>
        public string OpportunityIDNum;
        
        /// <remarks/>
        public string Queue;
        
        /// <remarks/>
        public System.DateTime DispatchDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("DispatchQuoteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class DispatchQuoteSetupProtocol {
        
        /// <remarks/>
        public string QuoteIDNum;
        
        /// <remarks/>
        public string Queue;
        
        /// <remarks/>
        public System.DateTime DispatchDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RejectActionItemSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class RejectActionItemSetupProtocol {
        
        /// <remarks/>
        public string ActionItemIDNum;
        
        /// <remarks/>
        public System.DateTime RejectDate;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RejectOpportunitySetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class RejectOpportunitySetupProtocol {
        
        /// <remarks/>
        public string OpportunityIDNum;
        
        /// <remarks/>
        public System.DateTime RejectDate;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RejectQuoteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class RejectQuoteSetupProtocol {
        
        /// <remarks/>
        public string QuoteIDNum;
        
        /// <remarks/>
        public System.DateTime RejectDate;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AcceptActionItemSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class AcceptActionItemSetupProtocol {
        
        /// <remarks/>
        public string ActionItemIDNum;
        
        /// <remarks/>
        public System.DateTime AcceptDate;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AcceptOpportunitySetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class AcceptOpportunitySetupProtocol {
        
        /// <remarks/>
        public string OpportunityIDNum;
        
        /// <remarks/>
        public System.DateTime AcceptDate;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AcceptQuoteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class AcceptQuoteSetupProtocol {
        
        /// <remarks/>
        public string QuoteIDNum;
        
        /// <remarks/>
        public System.DateTime AcceptDate;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ForwardActionItemSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class ForwardActionItemSetupProtocol {
        
        /// <remarks/>
        public string ActionItemIDNum;
        
        /// <remarks/>
        public string NewQueue;
        
        /// <remarks/>
        public System.DateTime ForwardDate;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ForwardOpportunitySetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class ForwardOpportunitySetupProtocol {
        
        /// <remarks/>
        public string OpportunityIDNum;
        
        /// <remarks/>
        public string NewQueue;
        
        /// <remarks/>
        public System.DateTime ForwardDate;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ForwardQuoteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class ForwardQuoteSetupProtocol {
        
        /// <remarks/>
        public string QuoteIDNum;
        
        /// <remarks/>
        public string NewQueue;
        
        /// <remarks/>
        public System.DateTime ForwardDate;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("YankActionItemSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class YankActionItemSetupProtocol {
        
        /// <remarks/>
        public string ActionItemIDNum;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public System.DateTime YankDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("YankOpportunitySetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class YankOpportunitySetupProtocol {
        
        /// <remarks/>
        public string OpportunityIDNum;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public System.DateTime YankDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("YankQuoteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class YankQuoteSetupProtocol {
        
        /// <remarks/>
        public string QuoteIDNum;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public System.DateTime YankDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AssignActionItemSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class AssignActionItemSetupProtocol {
        
        /// <remarks/>
        public string ActionItemIDNum;
        
        /// <remarks/>
        public string NewUser;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public System.DateTime AssignDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AssignOpportunitySetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class AssignOpportunitySetupProtocol {
        
        /// <remarks/>
        public string OpportunityIDNum;
        
        /// <remarks/>
        public string NewUser;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public System.DateTime AssignDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AssignQuoteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class AssignQuoteSetupProtocol {
        
        /// <remarks/>
        public string QuoteIDNum;
        
        /// <remarks/>
        public string NewUser;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public System.DateTime AssignDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("MoveActionItemSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class MoveActionItemSetupProtocol {
        
        /// <remarks/>
        public string ActionItemIDNum;
        
        /// <remarks/>
        public string NewWipBin;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("MoveOpportunitySetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class MoveOpportunitySetupProtocol {
        
        /// <remarks/>
        public string OpportunityIDNum;
        
        /// <remarks/>
        public string NewWipBin;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("MoveQuoteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class MoveQuoteSetupProtocol {
        
        /// <remarks/>
        public string QuoteIDNum;
        
        /// <remarks/>
        public string NewWipBin;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ChangeActionItemStatusSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class ChangeActionItemStatusSetupProtocol {
        
        /// <remarks/>
        public string ActionItemIDNum;
        
        /// <remarks/>
        public string NewStatus;
        
        /// <remarks/>
        public System.DateTime ChangeDate;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ChangeOpportunityStatusSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class ChangeOpportunityStatusSetupProtocol {
        
        /// <remarks/>
        public string OpportunityIDNum;
        
        /// <remarks/>
        public string NewStatus;
        
        /// <remarks/>
        public System.DateTime ChangeDate;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ChangeQuoteStatusSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class ChangeQuoteStatusSetupProtocol {
        
        /// <remarks/>
        public string QuoteIDNum;
        
        /// <remarks/>
        public string NewStatus;
        
        /// <remarks/>
        public System.DateTime ChangeDate;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateQuoteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class CreateQuoteSetupProtocol {
        
        /// <remarks/>
        public string QuoteTitle;
        
        /// <remarks/>
        public string AccountIDNum;
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public string OpportunityIDNum;
        
        /// <remarks/>
        public string ContactFirstName;
        
        /// <remarks/>
        public string ContactLastName;
        
        /// <remarks/>
        public string ContactPhone;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public string BillToSiteIDNum;
        
        /// <remarks/>
        public string ShipToSiteIDNum;
        
        /// <remarks/>
        public string Currency;
        
        /// <remarks/>
        public string PriceProgram;
        
        /// <remarks/>
        public string Queue;
        
        /// <remarks/>
        public string AdminUserName;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public short QuoteLengthInDays;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateQuoteLineItemSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class CreateQuoteLineItemSetupProtocol {
        
        /// <remarks/>
        public string ContractIDNum;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public System.DateTime StartDate;
        
        /// <remarks/>
        public System.DateTime EndDate;
        
        /// <remarks/>
        public string PartNumber;
        
        /// <remarks/>
        public string PartDomain;
        
        /// <remarks/>
        public string PartRevision;
        
        /// <remarks/>
        public int Quantity;
        
        /// <remarks/>
        public string PriceSchedule;
        
        /// <remarks/>
        public System.Double OverridePrice;
        
        /// <remarks/>
        public System.Double UnitsUsed;
        
        /// <remarks/>
        public string SerialNumber;
        
        /// <remarks/>
        public bool IsTaxable;
        
        /// <remarks/>
        public bool AutoInstall;
        
        /// <remarks/>
        public string Comments;
        
        /// <remarks/>
        public string QuotedSiteIDNum;
        
        /// <remarks/>
        public string ServicedAtSiteIDNum;
        
        /// <remarks/>
        public int ParentLineItemObjid;
        
        /// <remarks/>
        public string POIDNum;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdateLeadSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class UpdateLeadSetupProtocol {
        
        /// <remarks/>
        public int LeadObjid;
        
        /// <remarks/>
        public string ContactFirstName;
        
        /// <remarks/>
        public string ContactLastName;
        
        /// <remarks/>
        public string ContactPhone;
        
        /// <remarks/>
        public string Fax;
        
        /// <remarks/>
        public string Address;
        
        /// <remarks/>
        public string Address2;
        
        /// <remarks/>
        public string City;
        
        /// <remarks/>
        public string State;
        
        /// <remarks/>
        public string PostalCode;
        
        /// <remarks/>
        public string Country;
        
        /// <remarks/>
        public string TimeZone;
        
        /// <remarks/>
        public string Email;
        
        /// <remarks/>
        public string Title;
        
        /// <remarks/>
        public string CompanyName;
        
        /// <remarks/>
        public string SiteName;
        
        /// <remarks/>
        public LeadSiteType SiteType;
        
        /// <remarks/>
        public string Rating;
        
        /// <remarks/>
        public string ContactRole;
        
        /// <remarks/>
        public string LeadSource;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LeadSiteType", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public enum LeadSiteType {
        
        /// <remarks/>
        Business,
        
        /// <remarks/>
        Individual,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateLeadSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class CreateLeadSetupProtocol {
        
        /// <remarks/>
        public int LeadObjid;
        
        /// <remarks/>
        public string ContactFirstName;
        
        /// <remarks/>
        public string ContactLastName;
        
        /// <remarks/>
        public string ContactPhone;
        
        /// <remarks/>
        public string Fax;
        
        /// <remarks/>
        public string Address;
        
        /// <remarks/>
        public string Address2;
        
        /// <remarks/>
        public string City;
        
        /// <remarks/>
        public string State;
        
        /// <remarks/>
        public string PostalCode;
        
        /// <remarks/>
        public string Country;
        
        /// <remarks/>
        public string TimeZone;
        
        /// <remarks/>
        public string Email;
        
        /// <remarks/>
        public string Title;
        
        /// <remarks/>
        public string CompanyName;
        
        /// <remarks/>
        public string SiteName;
        
        /// <remarks/>
        public LeadSiteType SiteType;
        
        /// <remarks/>
        public string Rating;
        
        /// <remarks/>
        public string ContactRole;
        
        /// <remarks/>
        public string LeadSource;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AssignLeadSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class AssignLeadSetupProtocol {
        
        /// <remarks/>
        public int LeadObjid;
        
        /// <remarks/>
        public string NewOwner;
        
        /// <remarks/>
        public System.DateTime AssignDate;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LogLeadNoteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class LogLeadNoteSetupProtocol {
        
        /// <remarks/>
        public int LeadObjid;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string InternalUseOnlyNotes;
        
        /// <remarks/>
        public System.DateTime LogDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LogLeadPhoneSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class LogLeadPhoneSetupProtocol {
        
        /// <remarks/>
        public int LeadObjid;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string InternalUseOnlyNotes;
        
        /// <remarks/>
        public string ContactFirstName;
        
        /// <remarks/>
        public string ContactLastName;
        
        /// <remarks/>
        public string ContactPhone;
        
        /// <remarks/>
        public string ActionType;
        
        /// <remarks/>
        public System.DateTime LogDate;
        
        /// <remarks/>
        public int Duration;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CloseOpportunitySetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class CloseOpportunitySetupProtocol {
        
        /// <remarks/>
        public string OpportunityIDNum;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public System.DateTime CloseDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ReopenOpportunitySetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class ReopenOpportunitySetupProtocol {
        
        /// <remarks/>
        public string OpportunityIDNum;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public System.DateTime ReopenDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ToolkitResultProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SalesToolkitSrv_v1")]
    public class ToolkitResultProtocol {
        
        /// <remarks/>
        public short ReturnCode;
        
        /// <remarks/>
        public string IDNum;
        
        /// <remarks/>
        public int Objid;
    }
}
