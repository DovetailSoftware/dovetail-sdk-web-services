//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.2032.
// 
namespace FChoice.WebServices.Clarify.Client.Protocols.FieldOpsToolkitSrv {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FieldOpsToolkitSrvSoap", Namespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(AdditionalFieldProtocol))]
    public class FieldOpsToolkitSrv : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        public AuthenticationHeader AuthenticationHeaderValue;
        
        /// <remarks/>
        public FieldOpsToolkitSrv() {
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"LogPartsUsedExchange", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        public ToolkitResultProtocol LogPartsUsedExchange(string partRequestDetailIDNum, int removeSitePartObjid, string installPartNumber, string installPartRevision, string installPartDomain, string installSerialNumber) {
            object[] results = this.Invoke("LogPartsUsedExchange", new object[] {
                        partRequestDetailIDNum,
                        removeSitePartObjid,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installSerialNumber});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogPartsUsedExchange(string partRequestDetailIDNum, int removeSitePartObjid, string installPartNumber, string installPartRevision, string installPartDomain, string installSerialNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogPartsUsedExchange", new object[] {
                        partRequestDetailIDNum,
                        removeSitePartObjid,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installSerialNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogPartsUsedExchange(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogPartsUsedExchange1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"LogPartsUsedExchange2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogPartsUsedExchange2Result")]
        public ToolkitResultProtocol LogPartsUsedExchange(string partRequestDetailIDNum, int removeSitePartObjid, string installPartNumber, string installPartRevision, string installPartDomain, int installQuantity) {
            object[] results = this.Invoke("LogPartsUsedExchange1", new object[] {
                        partRequestDetailIDNum,
                        removeSitePartObjid,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installQuantity});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogPartsUsedExchange1(string partRequestDetailIDNum, int removeSitePartObjid, string installPartNumber, string installPartRevision, string installPartDomain, int installQuantity, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogPartsUsedExchange1", new object[] {
                        partRequestDetailIDNum,
                        removeSitePartObjid,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installQuantity}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogPartsUsedExchange1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogPartsUsedExchange2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"LogPartsUsedExchange3", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogPartsUsedExchange3Result")]
        public ToolkitResultProtocol LogPartsUsedExchange(string partRequestDetailIDNum, string caseIDNum, int removeSitePartObjid, string installPartNumber, string installPartRevision, string installPartDomain, string installSerialNumber) {
            object[] results = this.Invoke("LogPartsUsedExchange2", new object[] {
                        partRequestDetailIDNum,
                        caseIDNum,
                        removeSitePartObjid,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installSerialNumber});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogPartsUsedExchange2(string partRequestDetailIDNum, string caseIDNum, int removeSitePartObjid, string installPartNumber, string installPartRevision, string installPartDomain, string installSerialNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogPartsUsedExchange2", new object[] {
                        partRequestDetailIDNum,
                        caseIDNum,
                        removeSitePartObjid,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installSerialNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogPartsUsedExchange2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogPartsUsedExchange3")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"LogPartsUsedExchange4", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogPartsUsedExchange4Result")]
        public ToolkitResultProtocol LogPartsUsedExchange(string partRequestDetailIDNum, string caseIDNum, int removeSitePartObjid, string installPartNumber, string installPartRevision, string installPartDomain, int installQuantity) {
            object[] results = this.Invoke("LogPartsUsedExchange3", new object[] {
                        partRequestDetailIDNum,
                        caseIDNum,
                        removeSitePartObjid,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installQuantity});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogPartsUsedExchange3(string partRequestDetailIDNum, string caseIDNum, int removeSitePartObjid, string installPartNumber, string installPartRevision, string installPartDomain, int installQuantity, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogPartsUsedExchange3", new object[] {
                        partRequestDetailIDNum,
                        caseIDNum,
                        removeSitePartObjid,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installQuantity}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogPartsUsedExchange3(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogPartsUsedExchange4")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"LogPartsUsedExchange5", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogPartsUsedExchange5Result")]
        public ToolkitResultProtocol LogPartsUsedExchange(LogPartsUsedExchangeSetupProtocol setupParam) {
            object[] results = this.Invoke("LogPartsUsedExchange4", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogPartsUsedExchange4(LogPartsUsedExchangeSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogPartsUsedExchange4", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogPartsUsedExchange4(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"LogPartsUsedConsume", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        public ToolkitResultProtocol LogPartsUsedConsume(string partRequestDetailIDNum, string installPartNumber, string installPartRevision, string installPartDomain, string installSerialNumber) {
            object[] results = this.Invoke("LogPartsUsedConsume", new object[] {
                        partRequestDetailIDNum,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installSerialNumber});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogPartsUsedConsume(string partRequestDetailIDNum, string installPartNumber, string installPartRevision, string installPartDomain, string installSerialNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogPartsUsedConsume", new object[] {
                        partRequestDetailIDNum,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installSerialNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogPartsUsedConsume(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogPartsUsedConsume1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"LogPartsUsedConsume2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogPartsUsedConsume2Result")]
        public ToolkitResultProtocol LogPartsUsedConsume(string partRequestDetailIDNum, string installPartNumber, string installPartRevision, string installPartDomain, int installQuantity) {
            object[] results = this.Invoke("LogPartsUsedConsume1", new object[] {
                        partRequestDetailIDNum,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installQuantity});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogPartsUsedConsume1(string partRequestDetailIDNum, string installPartNumber, string installPartRevision, string installPartDomain, int installQuantity, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogPartsUsedConsume1", new object[] {
                        partRequestDetailIDNum,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installQuantity}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogPartsUsedConsume1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogPartsUsedConsume2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"LogPartsUsedConsume3", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogPartsUsedConsume3Result")]
        public ToolkitResultProtocol LogPartsUsedConsume(string partRequestDetailIDNum, string caseIDNum, string installPartNumber, string installPartRevision, string installPartDomain, string installSerialNumber) {
            object[] results = this.Invoke("LogPartsUsedConsume2", new object[] {
                        partRequestDetailIDNum,
                        caseIDNum,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installSerialNumber});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogPartsUsedConsume2(string partRequestDetailIDNum, string caseIDNum, string installPartNumber, string installPartRevision, string installPartDomain, string installSerialNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogPartsUsedConsume2", new object[] {
                        partRequestDetailIDNum,
                        caseIDNum,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installSerialNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogPartsUsedConsume2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogPartsUsedConsume3")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"LogPartsUsedConsume4", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogPartsUsedConsume4Result")]
        public ToolkitResultProtocol LogPartsUsedConsume(string partRequestDetailIDNum, string caseIDNum, string installPartNumber, string installPartRevision, string installPartDomain, int installQuantity) {
            object[] results = this.Invoke("LogPartsUsedConsume3", new object[] {
                        partRequestDetailIDNum,
                        caseIDNum,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installQuantity});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogPartsUsedConsume3(string partRequestDetailIDNum, string caseIDNum, string installPartNumber, string installPartRevision, string installPartDomain, int installQuantity, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogPartsUsedConsume3", new object[] {
                        partRequestDetailIDNum,
                        caseIDNum,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installQuantity}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogPartsUsedConsume3(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogPartsUsedConsume4")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"LogPartsUsedConsume5", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogPartsUsedConsume5Result")]
        public ToolkitResultProtocol LogPartsUsedConsume(LogPartsUsedConsumeSetupProtocol setupParam) {
            object[] results = this.Invoke("LogPartsUsedConsume4", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogPartsUsedConsume4(LogPartsUsedConsumeSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogPartsUsedConsume4", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogPartsUsedConsume4(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"LogPartsUsedInstall", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        public ToolkitResultProtocol LogPartsUsedInstall(string partRequestDetailIDNum, string installPartNumber, string installPartRevision, string installPartDomain, string installSerialNumber) {
            object[] results = this.Invoke("LogPartsUsedInstall", new object[] {
                        partRequestDetailIDNum,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installSerialNumber});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogPartsUsedInstall(string partRequestDetailIDNum, string installPartNumber, string installPartRevision, string installPartDomain, string installSerialNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogPartsUsedInstall", new object[] {
                        partRequestDetailIDNum,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installSerialNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogPartsUsedInstall(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogPartsUsedInstall1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"LogPartsUsedInstall2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogPartsUsedInstall2Result")]
        public ToolkitResultProtocol LogPartsUsedInstall(string partRequestDetailIDNum, string installPartNumber, string installPartRevision, string installPartDomain, int installQuantity) {
            object[] results = this.Invoke("LogPartsUsedInstall1", new object[] {
                        partRequestDetailIDNum,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installQuantity});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogPartsUsedInstall1(string partRequestDetailIDNum, string installPartNumber, string installPartRevision, string installPartDomain, int installQuantity, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogPartsUsedInstall1", new object[] {
                        partRequestDetailIDNum,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installQuantity}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogPartsUsedInstall1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogPartsUsedInstall2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"LogPartsUsedInstall3", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogPartsUsedInstall3Result")]
        public ToolkitResultProtocol LogPartsUsedInstall(string partRequestDetailIDNum, string caseIDNum, string installPartNumber, string installPartRevision, string installPartDomain, string installSerialNumber) {
            object[] results = this.Invoke("LogPartsUsedInstall2", new object[] {
                        partRequestDetailIDNum,
                        caseIDNum,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installSerialNumber});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogPartsUsedInstall2(string partRequestDetailIDNum, string caseIDNum, string installPartNumber, string installPartRevision, string installPartDomain, string installSerialNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogPartsUsedInstall2", new object[] {
                        partRequestDetailIDNum,
                        caseIDNum,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installSerialNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogPartsUsedInstall2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogPartsUsedInstall3")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"LogPartsUsedInstall4", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogPartsUsedInstall4Result")]
        public ToolkitResultProtocol LogPartsUsedInstall(string partRequestDetailIDNum, string caseIDNum, string installPartNumber, string installPartRevision, string installPartDomain, int installQuantity) {
            object[] results = this.Invoke("LogPartsUsedInstall3", new object[] {
                        partRequestDetailIDNum,
                        caseIDNum,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installQuantity});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogPartsUsedInstall3(string partRequestDetailIDNum, string caseIDNum, string installPartNumber, string installPartRevision, string installPartDomain, int installQuantity, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogPartsUsedInstall3", new object[] {
                        partRequestDetailIDNum,
                        caseIDNum,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installQuantity}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogPartsUsedInstall3(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogPartsUsedInstall4")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"LogPartsUsedInstall5", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogPartsUsedInstall5Result")]
        public ToolkitResultProtocol LogPartsUsedInstall(LogPartsUsedInstallSetupProtocol setupParam) {
            object[] results = this.Invoke("LogPartsUsedInstall4", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogPartsUsedInstall4(LogPartsUsedInstallSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogPartsUsedInstall4", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogPartsUsedInstall4(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"LogPartsUsedRemove", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        public ToolkitResultProtocol LogPartsUsedRemove(string partRequestDetailIDNum, int removeSitePartObjid) {
            object[] results = this.Invoke("LogPartsUsedRemove", new object[] {
                        partRequestDetailIDNum,
                        removeSitePartObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogPartsUsedRemove(string partRequestDetailIDNum, int removeSitePartObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogPartsUsedRemove", new object[] {
                        partRequestDetailIDNum,
                        removeSitePartObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogPartsUsedRemove(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogPartsUsedRemove1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"LogPartsUsedRemove2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogPartsUsedRemove2Result")]
        public ToolkitResultProtocol LogPartsUsedRemove(string partRequestDetailIDNum, string caseIDNum, int removeSitePartObjid) {
            object[] results = this.Invoke("LogPartsUsedRemove1", new object[] {
                        partRequestDetailIDNum,
                        caseIDNum,
                        removeSitePartObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogPartsUsedRemove1(string partRequestDetailIDNum, string caseIDNum, int removeSitePartObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogPartsUsedRemove1", new object[] {
                        partRequestDetailIDNum,
                        caseIDNum,
                        removeSitePartObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogPartsUsedRemove1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogPartsUsedRemove2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"LogPartsUsedRemove3", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogPartsUsedRemove3Result")]
        public ToolkitResultProtocol LogPartsUsedRemove(LogPartsUsedRemoveSetupProtocol setupParam) {
            object[] results = this.Invoke("LogPartsUsedRemove2", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogPartsUsedRemove2(LogPartsUsedRemoveSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogPartsUsedRemove2", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogPartsUsedRemove2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"LogPartsUsedUpgrade", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        public ToolkitResultProtocol LogPartsUsedUpgrade(string partRequestDetailIDNum, int removeSitePartObjid, string installPartNumber, string installPartRevision, string installPartDomain, string installSerialNumber) {
            object[] results = this.Invoke("LogPartsUsedUpgrade", new object[] {
                        partRequestDetailIDNum,
                        removeSitePartObjid,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installSerialNumber});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogPartsUsedUpgrade(string partRequestDetailIDNum, int removeSitePartObjid, string installPartNumber, string installPartRevision, string installPartDomain, string installSerialNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogPartsUsedUpgrade", new object[] {
                        partRequestDetailIDNum,
                        removeSitePartObjid,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installSerialNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogPartsUsedUpgrade(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogPartsUsedUpgrade1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"LogPartsUsedUpgrade2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogPartsUsedUpgrade2Result")]
        public ToolkitResultProtocol LogPartsUsedUpgrade(string partRequestDetailIDNum, int removeSitePartObjid, string installPartNumber, string installPartRevision, string installPartDomain, int installQuantity) {
            object[] results = this.Invoke("LogPartsUsedUpgrade1", new object[] {
                        partRequestDetailIDNum,
                        removeSitePartObjid,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installQuantity});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogPartsUsedUpgrade1(string partRequestDetailIDNum, int removeSitePartObjid, string installPartNumber, string installPartRevision, string installPartDomain, int installQuantity, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogPartsUsedUpgrade1", new object[] {
                        partRequestDetailIDNum,
                        removeSitePartObjid,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installQuantity}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogPartsUsedUpgrade1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogPartsUsedUpgrade2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"LogPartsUsedUpgrade3", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogPartsUsedUpgrade3Result")]
        public ToolkitResultProtocol LogPartsUsedUpgrade(string partRequestDetailIDNum, string caseIDNum, int removeSitePartObjid, string installPartNumber, string installPartRevision, string installPartDomain, string installSerialNumber) {
            object[] results = this.Invoke("LogPartsUsedUpgrade2", new object[] {
                        partRequestDetailIDNum,
                        caseIDNum,
                        removeSitePartObjid,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installSerialNumber});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogPartsUsedUpgrade2(string partRequestDetailIDNum, string caseIDNum, int removeSitePartObjid, string installPartNumber, string installPartRevision, string installPartDomain, string installSerialNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogPartsUsedUpgrade2", new object[] {
                        partRequestDetailIDNum,
                        caseIDNum,
                        removeSitePartObjid,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installSerialNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogPartsUsedUpgrade2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogPartsUsedUpgrade3")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"LogPartsUsedUpgrade4", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogPartsUsedUpgrade4Result")]
        public ToolkitResultProtocol LogPartsUsedUpgrade(string partRequestDetailIDNum, string caseIDNum, int removeSitePartObjid, string installPartNumber, string installPartRevision, string installPartDomain, int installQuantity) {
            object[] results = this.Invoke("LogPartsUsedUpgrade3", new object[] {
                        partRequestDetailIDNum,
                        caseIDNum,
                        removeSitePartObjid,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installQuantity});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogPartsUsedUpgrade3(string partRequestDetailIDNum, string caseIDNum, int removeSitePartObjid, string installPartNumber, string installPartRevision, string installPartDomain, int installQuantity, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogPartsUsedUpgrade3", new object[] {
                        partRequestDetailIDNum,
                        caseIDNum,
                        removeSitePartObjid,
                        installPartNumber,
                        installPartRevision,
                        installPartDomain,
                        installQuantity}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogPartsUsedUpgrade3(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogPartsUsedUpgrade4")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"LogPartsUsedUpgrade5", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogPartsUsedUpgrade5Result")]
        public ToolkitResultProtocol LogPartsUsedUpgrade(LogPartsUsedUpgradeSetupProtocol setupParam) {
            object[] results = this.Invoke("LogPartsUsedUpgrade4", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogPartsUsedUpgrade4(LogPartsUsedUpgradeSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogPartsUsedUpgrade4", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogPartsUsedUpgrade4(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"PartTransfer", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        public PartTransferResultProtocol PartTransfer(string partNumber, string partRevision, string partDomain, int quantity, LocationProtocol fromlocation, LocationProtocol tolocation) {
            object[] results = this.Invoke("PartTransfer", new object[] {
                        partNumber,
                        partRevision,
                        partDomain,
                        quantity,
                        fromlocation,
                        tolocation});
            return ((PartTransferResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPartTransfer(string partNumber, string partRevision, string partDomain, int quantity, LocationProtocol fromlocation, LocationProtocol tolocation, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PartTransfer", new object[] {
                        partNumber,
                        partRevision,
                        partDomain,
                        quantity,
                        fromlocation,
                        tolocation}, callback, asyncState);
        }
        
        /// <remarks/>
        public PartTransferResultProtocol EndPartTransfer(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PartTransferResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="PartTransfer1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"PartTransfer2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("PartTransfer2Result")]
        public PartTransferResultProtocol PartTransfer(string partNumber, string partRevision, string partDomain, string serialNumber, LocationProtocol fromlocation, LocationProtocol tolocation) {
            object[] results = this.Invoke("PartTransfer1", new object[] {
                        partNumber,
                        partRevision,
                        partDomain,
                        serialNumber,
                        fromlocation,
                        tolocation});
            return ((PartTransferResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPartTransfer1(string partNumber, string partRevision, string partDomain, string serialNumber, LocationProtocol fromlocation, LocationProtocol tolocation, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PartTransfer1", new object[] {
                        partNumber,
                        partRevision,
                        partDomain,
                        serialNumber,
                        fromlocation,
                        tolocation}, callback, asyncState);
        }
        
        /// <remarks/>
        public PartTransferResultProtocol EndPartTransfer1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PartTransferResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="PartTransfer2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"PartTransfer3", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("PartTransfer3Result")]
        public PartTransferResultProtocol PartTransfer(PartTransferSetupProtocol setupParam) {
            object[] results = this.Invoke("PartTransfer2", new object[] {
                        setupParam});
            return ((PartTransferResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPartTransfer2(PartTransferSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PartTransfer2", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public PartTransferResultProtocol EndPartTransfer2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PartTransferResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"MoveSitePartToBin", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        public ToolkitResultProtocol MoveSitePartToBin(int sitePartObjid, int parentBinObjid) {
            object[] results = this.Invoke("MoveSitePartToBin", new object[] {
                        sitePartObjid,
                        parentBinObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveSitePartToBin(int sitePartObjid, int parentBinObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveSitePartToBin", new object[] {
                        sitePartObjid,
                        parentBinObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndMoveSitePartToBin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="MoveSitePartToBin1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"MoveSitePartToBin2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("MoveSitePartToBin2Result")]
        public ToolkitResultProtocol MoveSitePartToBin(MoveSitePartToBinSetupProtocol setupParam) {
            object[] results = this.Invoke("MoveSitePartToBin1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveSitePartToBin1(MoveSitePartToBinSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveSitePartToBin1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndMoveSitePartToBin1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"MoveSitePartToSite", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        public ToolkitResultProtocol MoveSitePartToSite(int sitePartObjid, string siteIDNum) {
            object[] results = this.Invoke("MoveSitePartToSite", new object[] {
                        sitePartObjid,
                        siteIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveSitePartToSite(int sitePartObjid, string siteIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveSitePartToSite", new object[] {
                        sitePartObjid,
                        siteIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndMoveSitePartToSite(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="MoveSitePartToSite1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"MoveSitePartToSite2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("MoveSitePartToSite2Result")]
        public ToolkitResultProtocol MoveSitePartToSite(MoveSitePartToSiteSetupProtocol setupParam) {
            object[] results = this.Invoke("MoveSitePartToSite1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveSitePartToSite1(MoveSitePartToSiteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveSitePartToSite1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndMoveSitePartToSite1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"MoveSitePartToPart", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        public ToolkitResultProtocol MoveSitePartToPart(int sitePartObjid, int parentSitePartObjid) {
            object[] results = this.Invoke("MoveSitePartToPart", new object[] {
                        sitePartObjid,
                        parentSitePartObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveSitePartToPart(int sitePartObjid, int parentSitePartObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveSitePartToPart", new object[] {
                        sitePartObjid,
                        parentSitePartObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndMoveSitePartToPart(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="MoveSitePartToPart1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"MoveSitePartToPart2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("MoveSitePartToPart2Result")]
        public ToolkitResultProtocol MoveSitePartToPart(MoveSitePartToPartSetupProtocol setupParam) {
            object[] results = this.Invoke("MoveSitePartToPart1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveSitePartToPart1(MoveSitePartToPartSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveSitePartToPart1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndMoveSitePartToPart1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"ReinstallSitePart", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        public ToolkitResultProtocol ReinstallSitePart(int sitePartObjid, string siteIDNum) {
            object[] results = this.Invoke("ReinstallSitePart", new object[] {
                        sitePartObjid,
                        siteIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReinstallSitePart(int sitePartObjid, string siteIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReinstallSitePart", new object[] {
                        sitePartObjid,
                        siteIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndReinstallSitePart(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ReinstallSitePart1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"ReinstallSitePart2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("ReinstallSitePart2Result")]
        public ToolkitResultProtocol ReinstallSitePart(ReinstallSitePartSetupProtocol setupParam) {
            object[] results = this.Invoke("ReinstallSitePart1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReinstallSitePart1(ReinstallSitePartSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReinstallSitePart1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndReinstallSitePart1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"DeinstallSitePart", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        public ToolkitResultProtocol DeinstallSitePart(int sitePartObjid) {
            object[] results = this.Invoke("DeinstallSitePart", new object[] {
                        sitePartObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeinstallSitePart(int sitePartObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeinstallSitePart", new object[] {
                        sitePartObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDeinstallSitePart(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="DeinstallSitePart1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"DeinstallSitePart2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("DeinstallSitePart2Result")]
        public ToolkitResultProtocol DeinstallSitePart(DeinstallSitePartSetupProtocol setupParam) {
            object[] results = this.Invoke("DeinstallSitePart1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeinstallSitePart1(DeinstallSitePartSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeinstallSitePart1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDeinstallSitePart1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"UpdateSitePart", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        public ToolkitResultProtocol UpdateSitePart(int sitePartObjid) {
            object[] results = this.Invoke("UpdateSitePart", new object[] {
                        sitePartObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateSitePart(int sitePartObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateSitePart", new object[] {
                        sitePartObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateSitePart(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateSitePart1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"UpdateSitePart2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdateSitePart2Result")]
        public ToolkitResultProtocol UpdateSitePart(UpdateSitePartSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdateSitePart1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateSitePart1(UpdateSitePartSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateSitePart1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateSitePart1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"InstallSitePart", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        public ToolkitResultProtocol InstallSitePart(string siteIDNum, string partNumber, string partrevision, string partdomain, int quantity) {
            object[] results = this.Invoke("InstallSitePart", new object[] {
                        siteIDNum,
                        partNumber,
                        partrevision,
                        partdomain,
                        quantity});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInstallSitePart(string siteIDNum, string partNumber, string partrevision, string partdomain, int quantity, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InstallSitePart", new object[] {
                        siteIDNum,
                        partNumber,
                        partrevision,
                        partdomain,
                        quantity}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndInstallSitePart(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="InstallSitePart1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"InstallSitePart2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("InstallSitePart2Result")]
        public ToolkitResultProtocol InstallSitePart(string siteIDNum, string partNumber, string partrevision, string partdomain, string serialNumber) {
            object[] results = this.Invoke("InstallSitePart1", new object[] {
                        siteIDNum,
                        partNumber,
                        partrevision,
                        partdomain,
                        serialNumber});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInstallSitePart1(string siteIDNum, string partNumber, string partrevision, string partdomain, string serialNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InstallSitePart1", new object[] {
                        siteIDNum,
                        partNumber,
                        partrevision,
                        partdomain,
                        serialNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndInstallSitePart1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="InstallSitePart2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"InstallSitePart3", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("InstallSitePart3Result")]
        public ToolkitResultProtocol InstallSitePart(InstallSitePartSetupProtocol setupParam) {
            object[] results = this.Invoke("InstallSitePart2", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInstallSitePart2(InstallSitePartSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InstallSitePart2", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndInstallSitePart2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"DeleteServiceInterruption", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        public ToolkitResultProtocol DeleteServiceInterruption(int appointmentObjid) {
            object[] results = this.Invoke("DeleteServiceInterruption", new object[] {
                        appointmentObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteServiceInterruption(int appointmentObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteServiceInterruption", new object[] {
                        appointmentObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDeleteServiceInterruption(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="DeleteServiceInterruption1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"DeleteServiceInterruption2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("DeleteServiceInterruption2Result")]
        public ToolkitResultProtocol DeleteServiceInterruption(DeleteServiceInterruptionSetupProtocol setupParam) {
            object[] results = this.Invoke("DeleteServiceInterruption1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteServiceInterruption1(DeleteServiceInterruptionSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteServiceInterruption1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDeleteServiceInterruption1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"UpdateServiceInterruption", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        public ToolkitResultProtocol UpdateServiceInterruption(int appointmentObjid) {
            object[] results = this.Invoke("UpdateServiceInterruption", new object[] {
                        appointmentObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateServiceInterruption(int appointmentObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateServiceInterruption", new object[] {
                        appointmentObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateServiceInterruption(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateServiceInterruption1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"UpdateServiceInterruption2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdateServiceInterruption2Result")]
        public ToolkitResultProtocol UpdateServiceInterruption(UpdateServiceInterruptionSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdateServiceInterruption1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateServiceInterruption1(UpdateServiceInterruptionSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateServiceInterruption1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateServiceInterruption1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"AddServiceInterruption", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        public AddServiceInterruptionResultProtocol AddServiceInterruption(string caseIDNum) {
            object[] results = this.Invoke("AddServiceInterruption", new object[] {
                        caseIDNum});
            return ((AddServiceInterruptionResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddServiceInterruption(string caseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddServiceInterruption", new object[] {
                        caseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public AddServiceInterruptionResultProtocol EndAddServiceInterruption(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AddServiceInterruptionResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AddServiceInterruption1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"AddServiceInterruption2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("AddServiceInterruption2Result")]
        public AddServiceInterruptionResultProtocol AddServiceInterruption(AddServiceInterruptionSetupProtocol setupParam) {
            object[] results = this.Invoke("AddServiceInterruption1", new object[] {
                        setupParam});
            return ((AddServiceInterruptionResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddServiceInterruption1(AddServiceInterruptionSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddServiceInterruption1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public AddServiceInterruptionResultProtocol EndAddServiceInterruption1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AddServiceInterruptionResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"DeleteExpenseLog", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        public ToolkitResultProtocol DeleteExpenseLog(int expenseLogObjid) {
            object[] results = this.Invoke("DeleteExpenseLog", new object[] {
                        expenseLogObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteExpenseLog(int expenseLogObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteExpenseLog", new object[] {
                        expenseLogObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDeleteExpenseLog(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="DeleteExpenseLog1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"DeleteExpenseLog2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("DeleteExpenseLog2Result")]
        public ToolkitResultProtocol DeleteExpenseLog(DeleteExpenseLogSetupProtocol setupParam) {
            object[] results = this.Invoke("DeleteExpenseLog1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteExpenseLog1(DeleteExpenseLogSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteExpenseLog1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDeleteExpenseLog1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"UpdateExpenseLog", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        public ToolkitResultProtocol UpdateExpenseLog(int expenseLogObjid, System.Double quantity, System.Double rate) {
            object[] results = this.Invoke("UpdateExpenseLog", new object[] {
                        expenseLogObjid,
                        quantity,
                        rate});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateExpenseLog(int expenseLogObjid, System.Double quantity, System.Double rate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateExpenseLog", new object[] {
                        expenseLogObjid,
                        quantity,
                        rate}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateExpenseLog(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateExpenseLog1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"UpdateExpenseLog2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdateExpenseLog2Result")]
        public ToolkitResultProtocol UpdateExpenseLog(UpdateExpenseLogSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdateExpenseLog1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateExpenseLog1(UpdateExpenseLogSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateExpenseLog1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateExpenseLog1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"CreateExpenseLog", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        public CreateExpenseLogResultProtocol CreateExpenseLog(int onsiteLogObjid) {
            object[] results = this.Invoke("CreateExpenseLog", new object[] {
                        onsiteLogObjid});
            return ((CreateExpenseLogResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateExpenseLog(int onsiteLogObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateExpenseLog", new object[] {
                        onsiteLogObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public CreateExpenseLogResultProtocol EndCreateExpenseLog(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CreateExpenseLogResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateExpenseLog1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"CreateExpenseLog2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateExpenseLog2Result")]
        public CreateExpenseLogResultProtocol CreateExpenseLog(CreateExpenseLogSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateExpenseLog1", new object[] {
                        setupParam});
            return ((CreateExpenseLogResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateExpenseLog1(CreateExpenseLogSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateExpenseLog1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public CreateExpenseLogResultProtocol EndCreateExpenseLog1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CreateExpenseLogResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"DeleteTimeLog", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        public ToolkitResultProtocol DeleteTimeLog(int timeLogObjid) {
            object[] results = this.Invoke("DeleteTimeLog", new object[] {
                        timeLogObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteTimeLog(int timeLogObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteTimeLog", new object[] {
                        timeLogObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDeleteTimeLog(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="DeleteTimeLog1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"DeleteTimeLog2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("DeleteTimeLog2Result")]
        public ToolkitResultProtocol DeleteTimeLog(DeleteTimeLogSetupProtocol setupParam) {
            object[] results = this.Invoke("DeleteTimeLog1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteTimeLog1(DeleteTimeLogSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteTimeLog1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDeleteTimeLog1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"UpdateTimeLog", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        public ToolkitResultProtocol UpdateTimeLog(int timeLogObjid) {
            object[] results = this.Invoke("UpdateTimeLog", new object[] {
                        timeLogObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateTimeLog(int timeLogObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateTimeLog", new object[] {
                        timeLogObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateTimeLog(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateTimeLog1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"UpdateTimeLog2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdateTimeLog2Result")]
        public ToolkitResultProtocol UpdateTimeLog(UpdateTimeLogSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdateTimeLog1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateTimeLog1(UpdateTimeLogSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateTimeLog1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateTimeLog1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"CreateTimeLog", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        public CreateTimeLogResultProtocol CreateTimeLog(int onsiteLogObjid, System.DateTime startDate, int duration) {
            object[] results = this.Invoke("CreateTimeLog", new object[] {
                        onsiteLogObjid,
                        startDate,
                        duration});
            return ((CreateTimeLogResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateTimeLog(int onsiteLogObjid, System.DateTime startDate, int duration, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateTimeLog", new object[] {
                        onsiteLogObjid,
                        startDate,
                        duration}, callback, asyncState);
        }
        
        /// <remarks/>
        public CreateTimeLogResultProtocol EndCreateTimeLog(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CreateTimeLogResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateTimeLog1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"CreateTimeLog2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateTimeLog2Result")]
        public CreateTimeLogResultProtocol CreateTimeLog(CreateTimeLogSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateTimeLog1", new object[] {
                        setupParam});
            return ((CreateTimeLogResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateTimeLog1(CreateTimeLogSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateTimeLog1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public CreateTimeLogResultProtocol EndCreateTimeLog1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CreateTimeLogResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"DeleteOnsiteLog", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        public ToolkitResultProtocol DeleteOnsiteLog(int onsiteLogObjid) {
            object[] results = this.Invoke("DeleteOnsiteLog", new object[] {
                        onsiteLogObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteOnsiteLog(int onsiteLogObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteOnsiteLog", new object[] {
                        onsiteLogObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDeleteOnsiteLog(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="DeleteOnsiteLog1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"DeleteOnsiteLog2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("DeleteOnsiteLog2Result")]
        public ToolkitResultProtocol DeleteOnsiteLog(DeleteOnsiteLogSetupProtocol setupParam) {
            object[] results = this.Invoke("DeleteOnsiteLog1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteOnsiteLog1(DeleteOnsiteLogSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteOnsiteLog1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDeleteOnsiteLog1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"CreateOnsiteLog", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        public ToolkitResultProtocol CreateOnsiteLog(CaseObjectType objectType, string objectIDNum) {
            object[] results = this.Invoke("CreateOnsiteLog", new object[] {
                        objectType,
                        objectIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateOnsiteLog(CaseObjectType objectType, string objectIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateOnsiteLog", new object[] {
                        objectType,
                        objectIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateOnsiteLog(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateOnsiteLog1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"CreateOnsiteLog2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateOnsiteLog2Result")]
        public ToolkitResultProtocol CreateOnsiteLog(CreateOnsiteLogSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateOnsiteLog1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateOnsiteLog1(CreateOnsiteLogSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateOnsiteLog1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateOnsiteLog1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"DeleteAppointment", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        public ToolkitResultProtocol DeleteAppointment(int appointmentObjid) {
            object[] results = this.Invoke("DeleteAppointment", new object[] {
                        appointmentObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteAppointment(int appointmentObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteAppointment", new object[] {
                        appointmentObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDeleteAppointment(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="DeleteAppointment1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"DeleteAppointment2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("DeleteAppointment2Result")]
        public ToolkitResultProtocol DeleteAppointment(DeleteAppointmentSetupProtocol setupParam) {
            object[] results = this.Invoke("DeleteAppointment1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteAppointment1(DeleteAppointmentSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteAppointment1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDeleteAppointment1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"UpdateAppointment", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        public ToolkitResultProtocol UpdateAppointment(int appointmentObjid) {
            object[] results = this.Invoke("UpdateAppointment", new object[] {
                        appointmentObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateAppointment(int appointmentObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateAppointment", new object[] {
                        appointmentObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateAppointment(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateAppointment1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"UpdateAppointment2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdateAppointment2Result")]
        public ToolkitResultProtocol UpdateAppointment(UpdateAppointmentSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdateAppointment1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateAppointment1(UpdateAppointmentSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateAppointment1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateAppointment1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"CreateAppointment", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        public CreateAppointmentResultProtocol CreateAppointment(System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("CreateAppointment", new object[] {
                        startDate,
                        endDate});
            return ((CreateAppointmentResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateAppointment(System.DateTime startDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateAppointment", new object[] {
                        startDate,
                        endDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public CreateAppointmentResultProtocol EndCreateAppointment(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CreateAppointmentResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateAppointment1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"CreateAppointment2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateAppointment2Result")]
        public CreateAppointmentResultProtocol CreateAppointment(System.DateTime startDate, int duration) {
            object[] results = this.Invoke("CreateAppointment1", new object[] {
                        startDate,
                        duration});
            return ((CreateAppointmentResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateAppointment1(System.DateTime startDate, int duration, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateAppointment1", new object[] {
                        startDate,
                        duration}, callback, asyncState);
        }
        
        /// <remarks/>
        public CreateAppointmentResultProtocol EndCreateAppointment1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CreateAppointmentResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateAppointment2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"CreateAppointment3", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateAppointment3Result")]
        public CreateAppointmentResultProtocol CreateAppointment(int duration, System.DateTime endDate) {
            object[] results = this.Invoke("CreateAppointment2", new object[] {
                        duration,
                        endDate});
            return ((CreateAppointmentResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateAppointment2(int duration, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateAppointment2", new object[] {
                        duration,
                        endDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public CreateAppointmentResultProtocol EndCreateAppointment2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CreateAppointmentResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateAppointment3")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"CreateAppointment4", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateAppointment4Result")]
        public CreateAppointmentResultProtocol CreateAppointment(CreateAppointmentSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateAppointment3", new object[] {
                        setupParam});
            return ((CreateAppointmentResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateAppointment3(CreateAppointmentSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateAppointment3", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public CreateAppointmentResultProtocol EndCreateAppointment3(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CreateAppointmentResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"DispatchFieldEngineer", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        public ToolkitResultProtocol DispatchFieldEngineer(string caseIDNum) {
            object[] results = this.Invoke("DispatchFieldEngineer", new object[] {
                        caseIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDispatchFieldEngineer(string caseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DispatchFieldEngineer", new object[] {
                        caseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDispatchFieldEngineer(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="DispatchFieldEngineer1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1/" +
"DispatchFieldEngineer2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("DispatchFieldEngineer2Result")]
        public ToolkitResultProtocol DispatchFieldEngineer(DispatchFieldEngineerSetupProtocol setupParam) {
            object[] results = this.Invoke("DispatchFieldEngineer1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDispatchFieldEngineer1(DispatchFieldEngineerSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DispatchFieldEngineer1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDispatchFieldEngineer1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AuthenticationHeader", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class AuthenticationHeader : SoapHeader {
        
        /// <remarks/>
        public string SessionID;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("DispatchFieldEngineerSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class DispatchFieldEngineerSetupProtocol {
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime DispatchDate;
        
        /// <remarks/>
        public string WorkOrder;
        
        /// <remarks/>
        public System.DateTime AppointmentDate;
        
        /// <remarks/>
        public int Duration;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public string ContactFirstName;
        
        /// <remarks/>
        public string ContactLastName;
        
        /// <remarks/>
        public string Address1;
        
        /// <remarks/>
        public string Address2;
        
        /// <remarks/>
        public string City;
        
        /// <remarks/>
        public string State;
        
        /// <remarks/>
        public string ZipCode;
        
        /// <remarks/>
        public string MainPhone;
        
        /// <remarks/>
        public string AlternatePhone;
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public string PaymentMethod;
        
        /// <remarks/>
        public string ReferenceNumber;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public System.DateTime RequestedETADate;
        
        /// <remarks/>
        public int AppointmentConfirmed;
        
        /// <remarks/>
        public string CellText;
        
        /// <remarks/>
        public string Proxy;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateAppointmentSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class CreateAppointmentSetupProtocol {
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public System.DateTime StartDate;
        
        /// <remarks/>
        public System.DateTime EndDate;
        
        /// <remarks/>
        public int Duration;
        
        /// <remarks/>
        public string CellText;
        
        /// <remarks/>
        public string EmployeeFirstName;
        
        /// <remarks/>
        public string EmployeeLastName;
        
        /// <remarks/>
        public int SitePartObjid;
        
        /// <remarks/>
        public string AppointmentClass;
        
        /// <remarks/>
        public string AppointmentType;
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateAppointmentResultProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class CreateAppointmentResultProtocol {
        
        /// <remarks/>
        public int ScheduleObjid;
        
        /// <remarks/>
        public short ReturnCode;
        
        /// <remarks/>
        public string IDNum;
        
        /// <remarks/>
        public int Objid;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdateAppointmentSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class UpdateAppointmentSetupProtocol {
        
        /// <remarks/>
        public int AppointmentObjid;
        
        /// <remarks/>
        public System.DateTime StartDate;
        
        /// <remarks/>
        public System.DateTime EndDate;
        
        /// <remarks/>
        public int Duration;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public string CellText;
        
        /// <remarks/>
        public string AppointmentClass;
        
        /// <remarks/>
        public string AppointmentType;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("DeleteAppointmentSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class DeleteAppointmentSetupProtocol {
        
        /// <remarks/>
        public int AppointmentObjid;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateOnsiteLogSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class CreateOnsiteLogSetupProtocol {
        
        /// <remarks/>
        public CaseObjectType ObjectType;
        
        /// <remarks/>
        public string ObjectIDNum;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public System.DateTime LastModifiedDate;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string Resolution;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public string PerformedByUserName;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CaseObjectType", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public enum CaseObjectType {
        
        /// <remarks/>
        Case,
        
        /// <remarks/>
        Subcase,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("DeleteOnsiteLogSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class DeleteOnsiteLogSetupProtocol {
        
        /// <remarks/>
        public int OnsiteLogObjid;
        
        /// <remarks/>
        public System.DateTime NoteDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateTimeLogSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class CreateTimeLogSetupProtocol {
        
        /// <remarks/>
        public int OnsiteLogObjid;
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string PerformedByUserName;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public string TimeType;
        
        /// <remarks/>
        public System.DateTime StartDate;
        
        /// <remarks/>
        public int Duration;
        
        /// <remarks/>
        public bool IsBillable;
        
        /// <remarks/>
        public string BillTo;
        
        /// <remarks/>
        public string WorkCenter;
        
        /// <remarks/>
        public string Resolution;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateTimeLogResultProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class CreateTimeLogResultProtocol {
        
        /// <remarks/>
        public int OnsiteLogObjid;
        
        /// <remarks/>
        public short ReturnCode;
        
        /// <remarks/>
        public string IDNum;
        
        /// <remarks/>
        public int Objid;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdateTimeLogSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class UpdateTimeLogSetupProtocol {
        
        /// <remarks/>
        public int TimeLogObjid;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public string PerformedByUserName;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public string TimeType;
        
        /// <remarks/>
        public int Duration;
        
        /// <remarks/>
        public bool IsBillable;
        
        /// <remarks/>
        public string BillTo;
        
        /// <remarks/>
        public string WorkCenter;
        
        /// <remarks/>
        public string Resolution;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("DeleteTimeLogSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class DeleteTimeLogSetupProtocol {
        
        /// <remarks/>
        public int TimeLogObjid;
        
        /// <remarks/>
        public System.DateTime LastModifiedDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateExpenseLogSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class CreateExpenseLogSetupProtocol {
        
        /// <remarks/>
        public int OnsiteLogObjid;
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string PerformedByUserName;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public string ExpenseType;
        
        /// <remarks/>
        public System.Double Quantity;
        
        /// <remarks/>
        public System.Double Rate;
        
        /// <remarks/>
        public bool IsBillable;
        
        /// <remarks/>
        public string BillTo;
        
        /// <remarks/>
        public string Resolution;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateExpenseLogResultProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class CreateExpenseLogResultProtocol {
        
        /// <remarks/>
        public int OnsiteLogObjid;
        
        /// <remarks/>
        public short ReturnCode;
        
        /// <remarks/>
        public string IDNum;
        
        /// <remarks/>
        public int Objid;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdateExpenseLogSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class UpdateExpenseLogSetupProtocol {
        
        /// <remarks/>
        public int ExpenseLogObjid;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public string PerformedByUserName;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public string ExpenseType;
        
        /// <remarks/>
        public System.Double Quantity;
        
        /// <remarks/>
        public System.Double Rate;
        
        /// <remarks/>
        public bool IsBillable;
        
        /// <remarks/>
        public string BillTo;
        
        /// <remarks/>
        public string Resolution;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("DeleteExpenseLogSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class DeleteExpenseLogSetupProtocol {
        
        /// <remarks/>
        public int ExpenseLogObjid;
        
        /// <remarks/>
        public System.DateTime LastModifiedDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AddServiceInterruptionSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class AddServiceInterruptionSetupProtocol {
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public int SitePartObjid;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public System.DateTime StartDate;
        
        /// <remarks/>
        public System.DateTime EndDate;
        
        /// <remarks/>
        public int Duration;
        
        /// <remarks/>
        public string ServiceClass;
        
        /// <remarks/>
        public string ServiceType;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AddServiceInterruptionResultProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class AddServiceInterruptionResultProtocol {
        
        /// <remarks/>
        public int ScheduleObjid;
        
        /// <remarks/>
        public short ReturnCode;
        
        /// <remarks/>
        public string IDNum;
        
        /// <remarks/>
        public int Objid;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdateServiceInterruptionSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class UpdateServiceInterruptionSetupProtocol {
        
        /// <remarks/>
        public int AppointmentObjid;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public System.DateTime StartDate;
        
        /// <remarks/>
        public System.DateTime EndDate;
        
        /// <remarks/>
        public int Duration;
        
        /// <remarks/>
        public string ServiceClass;
        
        /// <remarks/>
        public string ServiceType;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("DeleteServiceInterruptionSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class DeleteServiceInterruptionSetupProtocol {
        
        /// <remarks/>
        public int AppointmentObjid;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("InstallSitePartSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class InstallSitePartSetupProtocol {
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public string PartNumber;
        
        /// <remarks/>
        public string PartRevision;
        
        /// <remarks/>
        public string PartDomain;
        
        /// <remarks/>
        public int Quantity;
        
        /// <remarks/>
        public string SerialNumber;
        
        /// <remarks/>
        public int ParentBinObjid;
        
        /// <remarks/>
        public int ParentSitePartObjid;
        
        /// <remarks/>
        public string InstanceName;
        
        /// <remarks/>
        public string Comments;
        
        /// <remarks/>
        public string PartStatus;
        
        /// <remarks/>
        public string InvoiceNumber;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime InstallDate;
        
        /// <remarks/>
        public System.DateTime ShipDate;
        
        /// <remarks/>
        public bool AddActivityLog;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AdditionalFieldProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class AdditionalFieldProtocol {
        
        /// <remarks/>
        public string FieldName;
        
        /// <remarks/>
        public AdditionalFieldType FieldType;
        
        /// <remarks/>
        public string FieldValue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AdditionalFieldType", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public enum AdditionalFieldType {
        
        /// <remarks/>
        String,
        
        /// <remarks/>
        Long,
        
        /// <remarks/>
        Double,
        
        /// <remarks/>
        Date,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdateSitePartSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class UpdateSitePartSetupProtocol {
        
        /// <remarks/>
        public int SitePartObjid;
        
        /// <remarks/>
        public string InstanceName;
        
        /// <remarks/>
        public string SerialNumber;
        
        /// <remarks/>
        public string InvoiceNumber;
        
        /// <remarks/>
        public System.DateTime ShipDate;
        
        /// <remarks/>
        public System.DateTime InstallDate;
        
        /// <remarks/>
        public System.DateTime WarrantyDate;
        
        /// <remarks/>
        public int Quantity;
        
        /// <remarks/>
        public string PartStatus;
        
        /// <remarks/>
        public string Comments;
        
        /// <remarks/>
        public System.DateTime ServiceEndDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public string PartRevision;
        
        /// <remarks/>
        public bool AddActivityLog;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("DeinstallSitePartSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class DeinstallSitePartSetupProtocol {
        
        /// <remarks/>
        public int SitePartObjid;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime DeinstallDate;
        
        /// <remarks/>
        public bool UseRemove;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ReinstallSitePartSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class ReinstallSitePartSetupProtocol {
        
        /// <remarks/>
        public int SitePartObjid;
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public int ParentBinObjid;
        
        /// <remarks/>
        public int ParentSitePartObjid;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime ReinstallDate;
        
        /// <remarks/>
        public bool AddActivityLog;
        
        /// <remarks/>
        public bool UseInstall;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("MoveSitePartToPartSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class MoveSitePartToPartSetupProtocol {
        
        /// <remarks/>
        public int SitePartObjid;
        
        /// <remarks/>
        public System.DateTime MoveDate;
        
        /// <remarks/>
        public int ParentSitePartObjid;
        
        /// <remarks/>
        public bool AddActivityLog;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool InstallAndMove;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("MoveSitePartToSiteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class MoveSitePartToSiteSetupProtocol {
        
        /// <remarks/>
        public int SitePartObjid;
        
        /// <remarks/>
        public System.DateTime MoveDate;
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public bool AddActivityLog;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool InstallAndMove;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("MoveSitePartToBinSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class MoveSitePartToBinSetupProtocol {
        
        /// <remarks/>
        public int SitePartObjid;
        
        /// <remarks/>
        public System.DateTime MoveDate;
        
        /// <remarks/>
        public int ParentBinObjid;
        
        /// <remarks/>
        public bool AddActivityLog;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool InstallAndMove;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("PartTransferSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class PartTransferSetupProtocol {
        
        /// <remarks/>
        public string PartNumber;
        
        /// <remarks/>
        public string PartRevision;
        
        /// <remarks/>
        public string PartDomain;
        
        /// <remarks/>
        public int Quantity;
        
        /// <remarks/>
        public string SerialNumber;
        
        /// <remarks/>
        public bool FromGood;
        
        /// <remarks/>
        public bool ToGood;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime TransferDate;
        
        /// <remarks/>
        public string ReferenceIDNum;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public LocationProtocol FromLocation;
        
        /// <remarks/>
        public LocationProtocol ToLocation;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LocationProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class LocationProtocol {
        
        /// <remarks/>
        public bool IsPrimaryBinSuggestion;
        
        /// <remarks/>
        public string LocationName;
        
        /// <remarks/>
        public string BinName;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("PartTransferResultProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class PartTransferResultProtocol {
        
        /// <remarks/>
        public string TransactionIDNum;
        
        /// <remarks/>
        public System.Decimal StandardCost;
        
        /// <remarks/>
        public short ReturnCode;
        
        /// <remarks/>
        public string IDNum;
        
        /// <remarks/>
        public int Objid;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LogPartsUsedUpgradeSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class LogPartsUsedUpgradeSetupProtocol {
        
        /// <remarks/>
        public string PartRequestDetailIDNum;
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public int ParentSitePartObjid;
        
        /// <remarks/>
        public bool InstallAtSite;
        
        /// <remarks/>
        public int RemoveSitePartObjid;
        
        /// <remarks/>
        public string ToLocation;
        
        /// <remarks/>
        public string ToBin;
        
        /// <remarks/>
        public string ToContainer;
        
        /// <remarks/>
        public bool ToGood;
        
        /// <remarks/>
        public string FailureCode;
        
        /// <remarks/>
        public string InstallPartNumber;
        
        /// <remarks/>
        public string InstallPartRevision;
        
        /// <remarks/>
        public string InstallPartDomain;
        
        /// <remarks/>
        public string InstallSerialNumber;
        
        /// <remarks/>
        public int InstallQuantity;
        
        /// <remarks/>
        public string InstallPrice;
        
        /// <remarks/>
        public string FromLocation;
        
        /// <remarks/>
        public string FromBin;
        
        /// <remarks/>
        public string FromContainer;
        
        /// <remarks/>
        public bool FromGood;
        
        /// <remarks/>
        public string EngineerUserName;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool AllowMove;
        
        /// <remarks/>
        public System.DateTime LogDate;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LogPartsUsedRemoveSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class LogPartsUsedRemoveSetupProtocol {
        
        /// <remarks/>
        public string PartRequestDetailIDNum;
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public int ParentSitePartObjid;
        
        /// <remarks/>
        public bool InstallAtSite;
        
        /// <remarks/>
        public int RemoveSitePartObjid;
        
        /// <remarks/>
        public string ToLocation;
        
        /// <remarks/>
        public string ToBin;
        
        /// <remarks/>
        public string ToContainer;
        
        /// <remarks/>
        public bool ToGood;
        
        /// <remarks/>
        public string FailureCode;
        
        /// <remarks/>
        public string EngineerUserName;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool AllowMove;
        
        /// <remarks/>
        public System.DateTime LogDate;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;

    	public int RemoveQuantity;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LogPartsUsedInstallSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class LogPartsUsedInstallSetupProtocol {
        
        /// <remarks/>
        public string PartRequestDetailIDNum;
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public int ParentSitePartObjid;
        
        /// <remarks/>
        public bool InstallAtSite;
        
        /// <remarks/>
        public string InstallPartNumber;
        
        /// <remarks/>
        public string InstallPartRevision;
        
        /// <remarks/>
        public string InstallPartDomain;
        
        /// <remarks/>
        public string InstallSerialNumber;
        
        /// <remarks/>
        public int InstallQuantity;
        
        /// <remarks/>
        public string InstallPrice;
        
        /// <remarks/>
        public string FromLocation;
        
        /// <remarks/>
        public string FromBin;
        
        /// <remarks/>
        public string FromContainer;
        
        /// <remarks/>
        public bool FromGood;
        
        /// <remarks/>
        public string EngineerUserName;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool AllowMove;
        
        /// <remarks/>
        public System.DateTime LogDate;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LogPartsUsedConsumeSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class LogPartsUsedConsumeSetupProtocol {
        
        /// <remarks/>
        public string PartRequestDetailIDNum;
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public int ParentSitePartObjid;
        
        /// <remarks/>
        public bool InstallAtSite;
        
        /// <remarks/>
        public string InstallPartNumber;
        
        /// <remarks/>
        public string InstallPartRevision;
        
        /// <remarks/>
        public string InstallPartDomain;
        
        /// <remarks/>
        public string InstallSerialNumber;
        
        /// <remarks/>
        public int InstallQuantity;
        
        /// <remarks/>
        public string InstallPrice;
        
        /// <remarks/>
        public string FromLocation;
        
        /// <remarks/>
        public string FromBin;
        
        /// <remarks/>
        public string FromContainer;
        
        /// <remarks/>
        public bool FromGood;
        
        /// <remarks/>
        public string EngineerUserName;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool AllowMove;
        
        /// <remarks/>
        public System.DateTime LogDate;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LogPartsUsedExchangeSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class LogPartsUsedExchangeSetupProtocol {
        
        /// <remarks/>
        public string PartRequestDetailIDNum;
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public int ParentSitePartObjid;
        
        /// <remarks/>
        public bool InstallAtSite;
        
        /// <remarks/>
        public int RemoveSitePartObjid;
        
        /// <remarks/>
        public string ToLocation;
        
        /// <remarks/>
        public string ToBin;
        
        /// <remarks/>
        public string ToContainer;
        
        /// <remarks/>
        public bool ToGood;
        
        /// <remarks/>
        public string FailureCode;
        
        /// <remarks/>
        public string InstallPartNumber;
        
        /// <remarks/>
        public string InstallPartRevision;
        
        /// <remarks/>
        public string InstallPartDomain;
        
        /// <remarks/>
        public string InstallSerialNumber;
        
        /// <remarks/>
        public int InstallQuantity;
        
        /// <remarks/>
        public string InstallPrice;
        
        /// <remarks/>
        public string FromLocation;
        
        /// <remarks/>
        public string FromBin;
        
        /// <remarks/>
        public string FromContainer;
        
        /// <remarks/>
        public bool FromGood;
        
        /// <remarks/>
        public string EngineerUserName;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool AllowMove;
        
        /// <remarks/>
        public System.DateTime LogDate;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ToolkitResultProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.FieldOpsToolkitSrv_v1")]
    public class ToolkitResultProtocol {
        
        /// <remarks/>
        public short ReturnCode;
        
        /// <remarks/>
        public string IDNum;
        
        /// <remarks/>
        public int Objid;
    }
}
