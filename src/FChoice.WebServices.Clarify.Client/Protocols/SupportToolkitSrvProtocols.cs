//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.2032.
// 
namespace FChoice.WebServices.Clarify.Client.Protocols.SupportToolkitSrv {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SupportToolkitSrvSoap", Namespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(AdditionalFieldProtocol))]
    public class SupportToolkitSrv : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        public AuthenticationHeader AuthenticationHeaderValue;
        
        /// <remarks/>
        public SupportToolkitSrv() {
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/G" +
"etSubcaseTimeAndExpenses", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public GetSubcaseTimeAndExpensesResultProtocol GetSubcaseTimeAndExpenses(string subcaseIDNum) {
            object[] results = this.Invoke("GetSubcaseTimeAndExpenses", new object[] {
                        subcaseIDNum});
            return ((GetSubcaseTimeAndExpensesResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSubcaseTimeAndExpenses(string subcaseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSubcaseTimeAndExpenses", new object[] {
                        subcaseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public GetSubcaseTimeAndExpensesResultProtocol EndGetSubcaseTimeAndExpenses(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GetSubcaseTimeAndExpensesResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="GetSubcaseTimeAndExpenses1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/G" +
"etSubcaseTimeAndExpenses2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("GetSubcaseTimeAndExpenses2Result")]
        public GetSubcaseTimeAndExpensesResultProtocol GetSubcaseTimeAndExpenses(GetSubcaseTimeAndExpensesSetupProtocol setupParam) {
            object[] results = this.Invoke("GetSubcaseTimeAndExpenses1", new object[] {
                        setupParam});
            return ((GetSubcaseTimeAndExpensesResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSubcaseTimeAndExpenses1(GetSubcaseTimeAndExpensesSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSubcaseTimeAndExpenses1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public GetSubcaseTimeAndExpensesResultProtocol EndGetSubcaseTimeAndExpenses1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GetSubcaseTimeAndExpensesResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/G" +
"etCaseTimeAndExpenses", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public GetCaseTimeAndExpensesResultProtocol GetCaseTimeAndExpenses(string caseIDNum) {
            object[] results = this.Invoke("GetCaseTimeAndExpenses", new object[] {
                        caseIDNum});
            return ((GetCaseTimeAndExpensesResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCaseTimeAndExpenses(string caseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCaseTimeAndExpenses", new object[] {
                        caseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public GetCaseTimeAndExpensesResultProtocol EndGetCaseTimeAndExpenses(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GetCaseTimeAndExpensesResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="GetCaseTimeAndExpenses1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/G" +
"etCaseTimeAndExpenses2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("GetCaseTimeAndExpenses2Result")]
        public GetCaseTimeAndExpensesResultProtocol GetCaseTimeAndExpenses(GetCaseTimeAndExpensesSetupProtocol setupParam) {
            object[] results = this.Invoke("GetCaseTimeAndExpenses1", new object[] {
                        setupParam});
            return ((GetCaseTimeAndExpensesResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCaseTimeAndExpenses1(GetCaseTimeAndExpensesSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCaseTimeAndExpenses1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public GetCaseTimeAndExpensesResultProtocol EndGetCaseTimeAndExpenses1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GetCaseTimeAndExpensesResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/L" +
"ogSubcaseEmail", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public LogSubcaseEmailResultProtocol LogSubcaseEmail(string subcaseIDNum) {
            object[] results = this.Invoke("LogSubcaseEmail", new object[] {
                        subcaseIDNum});
            return ((LogSubcaseEmailResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogSubcaseEmail(string subcaseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogSubcaseEmail", new object[] {
                        subcaseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public LogSubcaseEmailResultProtocol EndLogSubcaseEmail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LogSubcaseEmailResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogSubcaseEmail1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/L" +
"ogSubcaseEmail2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogSubcaseEmail2Result")]
        public LogSubcaseEmailResultProtocol LogSubcaseEmail(LogSubcaseEmailSetupProtocol setupParam) {
            object[] results = this.Invoke("LogSubcaseEmail1", new object[] {
                        setupParam});
            return ((LogSubcaseEmailResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogSubcaseEmail1(LogSubcaseEmailSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogSubcaseEmail1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public LogSubcaseEmailResultProtocol EndLogSubcaseEmail1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LogSubcaseEmailResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/L" +
"ogCaseEmail", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public LogCaseEmailResultProtocol LogCaseEmail(string caseIDNum) {
            object[] results = this.Invoke("LogCaseEmail", new object[] {
                        caseIDNum});
            return ((LogCaseEmailResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogCaseEmail(string caseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogCaseEmail", new object[] {
                        caseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public LogCaseEmailResultProtocol EndLogCaseEmail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LogCaseEmailResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogCaseEmail1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/L" +
"ogCaseEmail2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogCaseEmail2Result")]
        public LogCaseEmailResultProtocol LogCaseEmail(LogCaseEmailSetupProtocol setupParam) {
            object[] results = this.Invoke("LogCaseEmail1", new object[] {
                        setupParam});
            return ((LogCaseEmailResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogCaseEmail1(LogCaseEmailSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogCaseEmail1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public LogCaseEmailResultProtocol EndLogCaseEmail1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LogCaseEmailResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/U" +
"nrelateCaseFromParentCase", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol UnrelateCaseFromParentCase(string caseIDNum) {
            object[] results = this.Invoke("UnrelateCaseFromParentCase", new object[] {
                        caseIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnrelateCaseFromParentCase(string caseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UnrelateCaseFromParentCase", new object[] {
                        caseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUnrelateCaseFromParentCase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UnrelateCaseFromParentCase1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/U" +
"nrelateCaseFromParentCase2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UnrelateCaseFromParentCase2Result")]
        public ToolkitResultProtocol UnrelateCaseFromParentCase(UnrelateCaseFromParentCaseSetupProtocol setupParam) {
            object[] results = this.Invoke("UnrelateCaseFromParentCase1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnrelateCaseFromParentCase1(UnrelateCaseFromParentCaseSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UnrelateCaseFromParentCase1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUnrelateCaseFromParentCase1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/R" +
"elateCaseToParentCase", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol RelateCaseToParentCase(string caseIDNum, string parentCaseIDNum) {
            object[] results = this.Invoke("RelateCaseToParentCase", new object[] {
                        caseIDNum,
                        parentCaseIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRelateCaseToParentCase(string caseIDNum, string parentCaseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RelateCaseToParentCase", new object[] {
                        caseIDNum,
                        parentCaseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndRelateCaseToParentCase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="RelateCaseToParentCase1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/R" +
"elateCaseToParentCase2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("RelateCaseToParentCase2Result")]
        public ToolkitResultProtocol RelateCaseToParentCase(RelateCaseToParentCaseSetupProtocol setupParam) {
            object[] results = this.Invoke("RelateCaseToParentCase1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRelateCaseToParentCase1(RelateCaseToParentCaseSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RelateCaseToParentCase1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndRelateCaseToParentCase1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/L" +
"ogSubcaseNote", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public LogSubcaseNoteResultProtocol LogSubcaseNote(string subcaseIDNum) {
            object[] results = this.Invoke("LogSubcaseNote", new object[] {
                        subcaseIDNum});
            return ((LogSubcaseNoteResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogSubcaseNote(string subcaseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogSubcaseNote", new object[] {
                        subcaseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public LogSubcaseNoteResultProtocol EndLogSubcaseNote(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LogSubcaseNoteResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogSubcaseNote1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/L" +
"ogSubcaseNote2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogSubcaseNote2Result")]
        public LogSubcaseNoteResultProtocol LogSubcaseNote(LogSubcaseNoteSetupProtocol setupParam) {
            object[] results = this.Invoke("LogSubcaseNote1", new object[] {
                        setupParam});
            return ((LogSubcaseNoteResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogSubcaseNote1(LogSubcaseNoteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogSubcaseNote1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public LogSubcaseNoteResultProtocol EndLogSubcaseNote1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LogSubcaseNoteResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/L" +
"ogCaseNote", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public LogCaseNoteResultProtocol LogCaseNote(string caseIDNum) {
            object[] results = this.Invoke("LogCaseNote", new object[] {
                        caseIDNum});
            return ((LogCaseNoteResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogCaseNote(string caseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogCaseNote", new object[] {
                        caseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public LogCaseNoteResultProtocol EndLogCaseNote(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LogCaseNoteResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogCaseNote1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/L" +
"ogCaseNote2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogCaseNote2Result")]
        public LogCaseNoteResultProtocol LogCaseNote(LogCaseNoteSetupProtocol setupParam) {
            object[] results = this.Invoke("LogCaseNote1", new object[] {
                        setupParam});
            return ((LogCaseNoteResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogCaseNote1(LogCaseNoteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogCaseNote1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public LogCaseNoteResultProtocol EndLogCaseNote1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LogCaseNoteResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/L" +
"ogSubcaseResearch", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public LogSubcaseResearchResultProtocol LogSubcaseResearch(string subcaseIDNum, int researchDuration) {
            object[] results = this.Invoke("LogSubcaseResearch", new object[] {
                        subcaseIDNum,
                        researchDuration});
            return ((LogSubcaseResearchResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogSubcaseResearch(string subcaseIDNum, int researchDuration, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogSubcaseResearch", new object[] {
                        subcaseIDNum,
                        researchDuration}, callback, asyncState);
        }
        
        /// <remarks/>
        public LogSubcaseResearchResultProtocol EndLogSubcaseResearch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LogSubcaseResearchResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogSubcaseResearch1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/L" +
"ogSubcaseResearch2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogSubcaseResearch2Result")]
        public LogSubcaseResearchResultProtocol LogSubcaseResearch(LogSubcaseResearchSetupProtocol setupParam) {
            object[] results = this.Invoke("LogSubcaseResearch1", new object[] {
                        setupParam});
            return ((LogSubcaseResearchResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogSubcaseResearch1(LogSubcaseResearchSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogSubcaseResearch1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public LogSubcaseResearchResultProtocol EndLogSubcaseResearch1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LogSubcaseResearchResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/L" +
"ogCaseResearch", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public LogCaseResearchResultProtocol LogCaseResearch(string caseIDNum, int researchDuration) {
            object[] results = this.Invoke("LogCaseResearch", new object[] {
                        caseIDNum,
                        researchDuration});
            return ((LogCaseResearchResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogCaseResearch(string caseIDNum, int researchDuration, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogCaseResearch", new object[] {
                        caseIDNum,
                        researchDuration}, callback, asyncState);
        }
        
        /// <remarks/>
        public LogCaseResearchResultProtocol EndLogCaseResearch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LogCaseResearchResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogCaseResearch1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/L" +
"ogCaseResearch2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogCaseResearch2Result")]
        public LogCaseResearchResultProtocol LogCaseResearch(LogCaseResearchSetupProtocol setupParam) {
            object[] results = this.Invoke("LogCaseResearch1", new object[] {
                        setupParam});
            return ((LogCaseResearchResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogCaseResearch1(LogCaseResearchSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogCaseResearch1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public LogCaseResearchResultProtocol EndLogCaseResearch1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LogCaseResearchResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/L" +
"ogSubcasePhone", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public LogSubcasePhoneResultProtocol LogSubcasePhone(string subcaseIDNum, string contactFirstName, string contactLastName, string contactPhone) {
            object[] results = this.Invoke("LogSubcasePhone", new object[] {
                        subcaseIDNum,
                        contactFirstName,
                        contactLastName,
                        contactPhone});
            return ((LogSubcasePhoneResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogSubcasePhone(string subcaseIDNum, string contactFirstName, string contactLastName, string contactPhone, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogSubcasePhone", new object[] {
                        subcaseIDNum,
                        contactFirstName,
                        contactLastName,
                        contactPhone}, callback, asyncState);
        }
        
        /// <remarks/>
        public LogSubcasePhoneResultProtocol EndLogSubcasePhone(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LogSubcasePhoneResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogSubcasePhone1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/L" +
"ogSubcasePhone2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogSubcasePhone2Result")]
        public LogSubcasePhoneResultProtocol LogSubcasePhone(LogSubcasePhoneSetupProtocol setupParam) {
            object[] results = this.Invoke("LogSubcasePhone1", new object[] {
                        setupParam});
            return ((LogSubcasePhoneResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogSubcasePhone1(LogSubcasePhoneSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogSubcasePhone1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public LogSubcasePhoneResultProtocol EndLogSubcasePhone1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LogSubcasePhoneResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/L" +
"ogCasePhone", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public LogCasePhoneResultProtocol LogCasePhone(string caseIDNum, string contactFirstName, string contactLastName, string contactPhone) {
            object[] results = this.Invoke("LogCasePhone", new object[] {
                        caseIDNum,
                        contactFirstName,
                        contactLastName,
                        contactPhone});
            return ((LogCasePhoneResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogCasePhone(string caseIDNum, string contactFirstName, string contactLastName, string contactPhone, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogCasePhone", new object[] {
                        caseIDNum,
                        contactFirstName,
                        contactLastName,
                        contactPhone}, callback, asyncState);
        }
        
        /// <remarks/>
        public LogCasePhoneResultProtocol EndLogCasePhone(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LogCasePhoneResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogCasePhone1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/L" +
"ogCasePhone2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogCasePhone2Result")]
        public LogCasePhoneResultProtocol LogCasePhone(LogCasePhoneSetupProtocol setupParam) {
            object[] results = this.Invoke("LogCasePhone1", new object[] {
                        setupParam});
            return ((LogCasePhoneResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogCasePhone1(LogCasePhoneSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogCasePhone1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public LogCasePhoneResultProtocol EndLogCasePhone1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LogCasePhoneResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/R" +
"eopenSubcase", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol ReopenSubcase(string subcaseIDNum) {
            object[] results = this.Invoke("ReopenSubcase", new object[] {
                        subcaseIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReopenSubcase(string subcaseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReopenSubcase", new object[] {
                        subcaseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndReopenSubcase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ReopenSubcase1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/R" +
"eopenSubcase2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("ReopenSubcase2Result")]
        public ToolkitResultProtocol ReopenSubcase(ReopenSubcaseSetupProtocol setupParam) {
            object[] results = this.Invoke("ReopenSubcase1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReopenSubcase1(ReopenSubcaseSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReopenSubcase1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndReopenSubcase1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/R" +
"eopenCase", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol ReopenCase(string caseIDNum) {
            object[] results = this.Invoke("ReopenCase", new object[] {
                        caseIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReopenCase(string caseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReopenCase", new object[] {
                        caseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndReopenCase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ReopenCase1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/R" +
"eopenCase2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("ReopenCase2Result")]
        public ToolkitResultProtocol ReopenCase(ReopenCaseSetupProtocol setupParam) {
            object[] results = this.Invoke("ReopenCase1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReopenCase1(ReopenCaseSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReopenCase1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndReopenCase1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/U" +
"pdateSubcase", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol UpdateSubcase(string subcaseIDNum) {
            object[] results = this.Invoke("UpdateSubcase", new object[] {
                        subcaseIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateSubcase(string subcaseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateSubcase", new object[] {
                        subcaseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateSubcase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateSubcase1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/U" +
"pdateSubcase2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdateSubcase2Result")]
        public ToolkitResultProtocol UpdateSubcase(UpdateSubcaseSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdateSubcase1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateSubcase1(UpdateSubcaseSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateSubcase1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateSubcase1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/U" +
"pdateCase", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol UpdateCase(string caseIDNum) {
            object[] results = this.Invoke("UpdateCase", new object[] {
                        caseIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateCase(string caseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateCase", new object[] {
                        caseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateCase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateCase1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/U" +
"pdateCase2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdateCase2Result")]
        public ToolkitResultProtocol UpdateCase(UpdateCaseSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdateCase1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateCase1(UpdateCaseSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateCase1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateCase1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/A" +
"ssignSubcase", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol AssignSubcase(string subcaseIDNum) {
            object[] results = this.Invoke("AssignSubcase", new object[] {
                        subcaseIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAssignSubcase(string subcaseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AssignSubcase", new object[] {
                        subcaseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAssignSubcase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AssignSubcase1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/A" +
"ssignSubcase2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("AssignSubcase2Result")]
        public ToolkitResultProtocol AssignSubcase(AssignSubcaseSetupProtocol setupParam) {
            object[] results = this.Invoke("AssignSubcase1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAssignSubcase1(AssignSubcaseSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AssignSubcase1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAssignSubcase1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/A" +
"ssignCase", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol AssignCase(string caseIDNum) {
            object[] results = this.Invoke("AssignCase", new object[] {
                        caseIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAssignCase(string caseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AssignCase", new object[] {
                        caseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAssignCase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AssignCase1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/A" +
"ssignCase2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("AssignCase2Result")]
        public ToolkitResultProtocol AssignCase(AssignCaseSetupProtocol setupParam) {
            object[] results = this.Invoke("AssignCase1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAssignCase1(AssignCaseSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AssignCase1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAssignCase1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/R" +
"ejectSubcase", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol RejectSubcase(string subcaseIDNum) {
            object[] results = this.Invoke("RejectSubcase", new object[] {
                        subcaseIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRejectSubcase(string subcaseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RejectSubcase", new object[] {
                        subcaseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndRejectSubcase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="RejectSubcase1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/R" +
"ejectSubcase2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("RejectSubcase2Result")]
        public ToolkitResultProtocol RejectSubcase(RejectSubcaseSetupProtocol setupParam) {
            object[] results = this.Invoke("RejectSubcase1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRejectSubcase1(RejectSubcaseSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RejectSubcase1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndRejectSubcase1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/R" +
"ejectCase", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol RejectCase(string caseIDNum) {
            object[] results = this.Invoke("RejectCase", new object[] {
                        caseIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRejectCase(string caseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RejectCase", new object[] {
                        caseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndRejectCase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="RejectCase1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/R" +
"ejectCase2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("RejectCase2Result")]
        public ToolkitResultProtocol RejectCase(RejectCaseSetupProtocol setupParam) {
            object[] results = this.Invoke("RejectCase1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRejectCase1(RejectCaseSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RejectCase1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndRejectCase1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/A" +
"cceptSubcase", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol AcceptSubcase(string subcaseIDNum) {
            object[] results = this.Invoke("AcceptSubcase", new object[] {
                        subcaseIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAcceptSubcase(string subcaseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AcceptSubcase", new object[] {
                        subcaseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAcceptSubcase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AcceptSubcase1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/A" +
"cceptSubcase2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("AcceptSubcase2Result")]
        public ToolkitResultProtocol AcceptSubcase(AcceptSubcaseSetupProtocol setupParam) {
            object[] results = this.Invoke("AcceptSubcase1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAcceptSubcase1(AcceptSubcaseSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AcceptSubcase1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAcceptSubcase1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/A" +
"cceptCase", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol AcceptCase(string caseIDNum) {
            object[] results = this.Invoke("AcceptCase", new object[] {
                        caseIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAcceptCase(string caseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AcceptCase", new object[] {
                        caseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAcceptCase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AcceptCase1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/A" +
"cceptCase2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("AcceptCase2Result")]
        public ToolkitResultProtocol AcceptCase(AcceptCaseSetupProtocol setupParam) {
            object[] results = this.Invoke("AcceptCase1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAcceptCase1(AcceptCaseSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AcceptCase1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAcceptCase1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/M" +
"oveSubcase", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol MoveSubcase(string subcaseIDNum, string newWipBin) {
            object[] results = this.Invoke("MoveSubcase", new object[] {
                        subcaseIDNum,
                        newWipBin});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveSubcase(string subcaseIDNum, string newWipBin, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveSubcase", new object[] {
                        subcaseIDNum,
                        newWipBin}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndMoveSubcase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="MoveSubcase1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/M" +
"oveSubcase2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("MoveSubcase2Result")]
        public ToolkitResultProtocol MoveSubcase(MoveSubcaseSetupProtocol setupParam) {
            object[] results = this.Invoke("MoveSubcase1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveSubcase1(MoveSubcaseSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveSubcase1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndMoveSubcase1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/M" +
"oveCase", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol MoveCase(string caseIDNum, string newWipBin) {
            object[] results = this.Invoke("MoveCase", new object[] {
                        caseIDNum,
                        newWipBin});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveCase(string caseIDNum, string newWipBin, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveCase", new object[] {
                        caseIDNum,
                        newWipBin}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndMoveCase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="MoveCase1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/M" +
"oveCase2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("MoveCase2Result")]
        public ToolkitResultProtocol MoveCase(MoveCaseSetupProtocol setupParam) {
            object[] results = this.Invoke("MoveCase1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveCase1(MoveCaseSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveCase1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndMoveCase1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/F" +
"ulfillCommitment", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol FulfillCommitment(int logObjid) {
            object[] results = this.Invoke("FulfillCommitment", new object[] {
                        logObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFulfillCommitment(int logObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FulfillCommitment", new object[] {
                        logObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndFulfillCommitment(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="FulfillCommitment1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/F" +
"ulfillCommitment2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("FulfillCommitment2Result")]
        public ToolkitResultProtocol FulfillCommitment(FulfillCommitmentSetupProtocol setupParam) {
            object[] results = this.Invoke("FulfillCommitment1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFulfillCommitment1(FulfillCommitmentSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FulfillCommitment1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndFulfillCommitment1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/U" +
"pdateSubcaseCommitment", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol UpdateSubcaseCommitment(string subcaseIDNum, System.DateTime commitmentDate, int commitmentObjid) {
            object[] results = this.Invoke("UpdateSubcaseCommitment", new object[] {
                        subcaseIDNum,
                        commitmentDate,
                        commitmentObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateSubcaseCommitment(string subcaseIDNum, System.DateTime commitmentDate, int commitmentObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateSubcaseCommitment", new object[] {
                        subcaseIDNum,
                        commitmentDate,
                        commitmentObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateSubcaseCommitment(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateSubcaseCommitment1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/U" +
"pdateSubcaseCommitment2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdateSubcaseCommitment2Result")]
        public ToolkitResultProtocol UpdateSubcaseCommitment(UpdateSubcaseCommitmentSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdateSubcaseCommitment1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateSubcaseCommitment1(UpdateSubcaseCommitmentSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateSubcaseCommitment1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateSubcaseCommitment1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/U" +
"pdateCaseCommitment", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol UpdateCaseCommitment(string caseIDNum, System.DateTime commitmentDate, int commitmentObjid) {
            object[] results = this.Invoke("UpdateCaseCommitment", new object[] {
                        caseIDNum,
                        commitmentDate,
                        commitmentObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateCaseCommitment(string caseIDNum, System.DateTime commitmentDate, int commitmentObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateCaseCommitment", new object[] {
                        caseIDNum,
                        commitmentDate,
                        commitmentObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateCaseCommitment(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateCaseCommitment1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/U" +
"pdateCaseCommitment2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdateCaseCommitment2Result")]
        public ToolkitResultProtocol UpdateCaseCommitment(UpdateCaseCommitmentSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdateCaseCommitment1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateCaseCommitment1(UpdateCaseCommitmentSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateCaseCommitment1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateCaseCommitment1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/L" +
"ogSubcaseCommitment", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol LogSubcaseCommitment(string subcaseIDNum, string title, int priorWarning, string contactFirstName, string contactLastName, string contactPhone) {
            object[] results = this.Invoke("LogSubcaseCommitment", new object[] {
                        subcaseIDNum,
                        title,
                        priorWarning,
                        contactFirstName,
                        contactLastName,
                        contactPhone});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogSubcaseCommitment(string subcaseIDNum, string title, int priorWarning, string contactFirstName, string contactLastName, string contactPhone, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogSubcaseCommitment", new object[] {
                        subcaseIDNum,
                        title,
                        priorWarning,
                        contactFirstName,
                        contactLastName,
                        contactPhone}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogSubcaseCommitment(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogSubcaseCommitment1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/L" +
"ogSubcaseCommitment2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogSubcaseCommitment2Result")]
        public ToolkitResultProtocol LogSubcaseCommitment(LogSubcaseCommitmentSetupProtocol setupParam) {
            object[] results = this.Invoke("LogSubcaseCommitment1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogSubcaseCommitment1(LogSubcaseCommitmentSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogSubcaseCommitment1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogSubcaseCommitment1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/L" +
"ogCaseCommitment", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol LogCaseCommitment(string caseIDNum, string title, int priorWarning, string contactFirstName, string contactLastName, string contactPhone) {
            object[] results = this.Invoke("LogCaseCommitment", new object[] {
                        caseIDNum,
                        title,
                        priorWarning,
                        contactFirstName,
                        contactLastName,
                        contactPhone});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogCaseCommitment(string caseIDNum, string title, int priorWarning, string contactFirstName, string contactLastName, string contactPhone, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogCaseCommitment", new object[] {
                        caseIDNum,
                        title,
                        priorWarning,
                        contactFirstName,
                        contactLastName,
                        contactPhone}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogCaseCommitment(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogCaseCommitment1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/L" +
"ogCaseCommitment2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogCaseCommitment2Result")]
        public ToolkitResultProtocol LogCaseCommitment(LogCaseCommitmentSetupProtocol setupParam) {
            object[] results = this.Invoke("LogCaseCommitment1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogCaseCommitment1(LogCaseCommitmentSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogCaseCommitment1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogCaseCommitment1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/Y" +
"ankSubcase", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol YankSubcase(string subcaseIDNum) {
            object[] results = this.Invoke("YankSubcase", new object[] {
                        subcaseIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginYankSubcase(string subcaseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("YankSubcase", new object[] {
                        subcaseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndYankSubcase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="YankSubcase1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/Y" +
"ankSubcase2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("YankSubcase2Result")]
        public ToolkitResultProtocol YankSubcase(YankSubcaseSetupProtocol setupParam) {
            object[] results = this.Invoke("YankSubcase1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginYankSubcase1(YankSubcaseSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("YankSubcase1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndYankSubcase1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/Y" +
"ankCase", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol YankCase(string caseIDNum) {
            object[] results = this.Invoke("YankCase", new object[] {
                        caseIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginYankCase(string caseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("YankCase", new object[] {
                        caseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndYankCase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="YankCase1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/Y" +
"ankCase2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("YankCase2Result")]
        public ToolkitResultProtocol YankCase(YankCaseSetupProtocol setupParam) {
            object[] results = this.Invoke("YankCase1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginYankCase1(YankCaseSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("YankCase1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndYankCase1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/I" +
"nitialResponse", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol InitialResponse(string caseIDNum) {
            object[] results = this.Invoke("InitialResponse", new object[] {
                        caseIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInitialResponse(string caseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InitialResponse", new object[] {
                        caseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndInitialResponse(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="InitialResponse1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/I" +
"nitialResponse2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("InitialResponse2Result")]
        public ToolkitResultProtocol InitialResponse(InitialResponseSetupProtocol setupParam) {
            object[] results = this.Invoke("InitialResponse1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInitialResponse1(InitialResponseSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InitialResponse1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndInitialResponse1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/F" +
"orwardSubcase", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol ForwardSubcase(string subcaseIDNum, string newQueue) {
            object[] results = this.Invoke("ForwardSubcase", new object[] {
                        subcaseIDNum,
                        newQueue});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginForwardSubcase(string subcaseIDNum, string newQueue, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ForwardSubcase", new object[] {
                        subcaseIDNum,
                        newQueue}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndForwardSubcase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ForwardSubcase1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/F" +
"orwardSubcase2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("ForwardSubcase2Result")]
        public ToolkitResultProtocol ForwardSubcase(ForwardSubcaseSetupProtocol setupParam) {
            object[] results = this.Invoke("ForwardSubcase1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginForwardSubcase1(ForwardSubcaseSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ForwardSubcase1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndForwardSubcase1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/F" +
"orwardCase", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol ForwardCase(string caseIDNum, string newQueue) {
            object[] results = this.Invoke("ForwardCase", new object[] {
                        caseIDNum,
                        newQueue});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginForwardCase(string caseIDNum, string newQueue, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ForwardCase", new object[] {
                        caseIDNum,
                        newQueue}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndForwardCase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ForwardCase1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/F" +
"orwardCase2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("ForwardCase2Result")]
        public ToolkitResultProtocol ForwardCase(ForwardCaseSetupProtocol setupParam) {
            object[] results = this.Invoke("ForwardCase1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginForwardCase1(ForwardCaseSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ForwardCase1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndForwardCase1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/D" +
"ispatchSubcase", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol DispatchSubcase(string subcaseIDNum, string queue) {
            object[] results = this.Invoke("DispatchSubcase", new object[] {
                        subcaseIDNum,
                        queue});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDispatchSubcase(string subcaseIDNum, string queue, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DispatchSubcase", new object[] {
                        subcaseIDNum,
                        queue}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDispatchSubcase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="DispatchSubcase1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/D" +
"ispatchSubcase2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("DispatchSubcase2Result")]
        public ToolkitResultProtocol DispatchSubcase(DispatchSubcaseSetupProtocol setupParam) {
            object[] results = this.Invoke("DispatchSubcase1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDispatchSubcase1(DispatchSubcaseSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DispatchSubcase1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDispatchSubcase1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/D" +
"ispatchCase", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol DispatchCase(string caseIDNum, string queue) {
            object[] results = this.Invoke("DispatchCase", new object[] {
                        caseIDNum,
                        queue});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDispatchCase(string caseIDNum, string queue, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DispatchCase", new object[] {
                        caseIDNum,
                        queue}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDispatchCase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="DispatchCase1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/D" +
"ispatchCase2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("DispatchCase2Result")]
        public ToolkitResultProtocol DispatchCase(DispatchCaseSetupProtocol setupParam) {
            object[] results = this.Invoke("DispatchCase1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDispatchCase1(DispatchCaseSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DispatchCase1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDispatchCase1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/C" +
"reateSubcase", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol CreateSubcase(string caseIDNum) {
            object[] results = this.Invoke("CreateSubcase", new object[] {
                        caseIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateSubcase(string caseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateSubcase", new object[] {
                        caseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateSubcase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateSubcase1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/C" +
"reateSubcase2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateSubcase2Result")]
        public ToolkitResultProtocol CreateSubcase(CreateSubcaseSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateSubcase1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateSubcase1(CreateSubcaseSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateSubcase1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateSubcase1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/C" +
"reateCase", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol CreateCase(string siteIDNum, string contactFirstName, string contactLastName, string contactPhone) {
            object[] results = this.Invoke("CreateCase", new object[] {
                        siteIDNum,
                        contactFirstName,
                        contactLastName,
                        contactPhone});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateCase(string siteIDNum, string contactFirstName, string contactLastName, string contactPhone, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateCase", new object[] {
                        siteIDNum,
                        contactFirstName,
                        contactLastName,
                        contactPhone}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateCase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateCase1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/C" +
"reateCase2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateCase2Result")]
        public ToolkitResultProtocol CreateCase(CreateCaseSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateCase1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateCase1(CreateCaseSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateCase1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateCase1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/C" +
"reateCaseObjid", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol CreateCaseObjid() {
            object[] results = this.Invoke("CreateCaseObjid", new object[0]);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateCaseObjid(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateCaseObjid", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateCaseObjid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateCaseObjid1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/C" +
"reateCaseObjid2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateCaseObjid2Result")]
        public ToolkitResultProtocol CreateCaseObjid(CreateCaseObjidSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateCaseObjid1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateCaseObjid1(CreateCaseObjidSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateCaseObjid1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateCaseObjid1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/C" +
"loseSubcase", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol CloseSubcase(string subcaseIDNum) {
            object[] results = this.Invoke("CloseSubcase", new object[] {
                        subcaseIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCloseSubcase(string subcaseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CloseSubcase", new object[] {
                        subcaseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCloseSubcase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CloseSubcase1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/C" +
"loseSubcase2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CloseSubcase2Result")]
        public ToolkitResultProtocol CloseSubcase(CloseSubcaseSetupProtocol setupParam) {
            object[] results = this.Invoke("CloseSubcase1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCloseSubcase1(CloseSubcaseSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CloseSubcase1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCloseSubcase1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/C" +
"loseCase", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol CloseCase(string caseIDNum) {
            object[] results = this.Invoke("CloseCase", new object[] {
                        caseIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCloseCase(string caseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CloseCase", new object[] {
                        caseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCloseCase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CloseCase1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/C" +
"loseCase2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CloseCase2Result")]
        public ToolkitResultProtocol CloseCase(CloseCaseSetupProtocol setupParam) {
            object[] results = this.Invoke("CloseCase1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCloseCase1(CloseCaseSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CloseCase1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCloseCase1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/C" +
"hangeSubcaseStatus", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol ChangeSubcaseStatus(string subcaseIDNum) {
            object[] results = this.Invoke("ChangeSubcaseStatus", new object[] {
                        subcaseIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeSubcaseStatus(string subcaseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeSubcaseStatus", new object[] {
                        subcaseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndChangeSubcaseStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ChangeSubcaseStatus1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/C" +
"hangeSubcaseStatus2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("ChangeSubcaseStatus2Result")]
        public ToolkitResultProtocol ChangeSubcaseStatus(ChangeSubcaseStatusSetupProtocol setupParam) {
            object[] results = this.Invoke("ChangeSubcaseStatus1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeSubcaseStatus1(ChangeSubcaseStatusSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeSubcaseStatus1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndChangeSubcaseStatus1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/C" +
"hangeCaseStatus", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol ChangeCaseStatus(string caseIDNum) {
            object[] results = this.Invoke("ChangeCaseStatus", new object[] {
                        caseIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeCaseStatus(string caseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeCaseStatus", new object[] {
                        caseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndChangeCaseStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ChangeCaseStatus1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/C" +
"hangeCaseStatus2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("ChangeCaseStatus2Result")]
        public ToolkitResultProtocol ChangeCaseStatus(ChangeCaseStatusSetupProtocol setupParam) {
            object[] results = this.Invoke("ChangeCaseStatus1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeCaseStatus1(ChangeCaseStatusSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeCaseStatus1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndChangeCaseStatus1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/C" +
"hangeCaseSite", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol ChangeCaseSite(string caseIDNum, string siteIDNum) {
            object[] results = this.Invoke("ChangeCaseSite", new object[] {
                        caseIDNum,
                        siteIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeCaseSite(string caseIDNum, string siteIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeCaseSite", new object[] {
                        caseIDNum,
                        siteIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndChangeCaseSite(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ChangeCaseSite1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/C" +
"hangeCaseSite2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("ChangeCaseSite2Result")]
        public ToolkitResultProtocol ChangeCaseSite(ChangeCaseSiteSetupProtocol setupParam) {
            object[] results = this.Invoke("ChangeCaseSite1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeCaseSite1(ChangeCaseSiteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeCaseSite1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndChangeCaseSite1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/C" +
"hangeCaseContact", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        public ToolkitResultProtocol ChangeCaseContact(string caseIDNum, string contactFirstName, string contactLastName, string contactPhone) {
            object[] results = this.Invoke("ChangeCaseContact", new object[] {
                        caseIDNum,
                        contactFirstName,
                        contactLastName,
                        contactPhone});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeCaseContact(string caseIDNum, string contactFirstName, string contactLastName, string contactPhone, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeCaseContact", new object[] {
                        caseIDNum,
                        contactFirstName,
                        contactLastName,
                        contactPhone}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndChangeCaseContact(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ChangeCaseContact1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1/C" +
"hangeCaseContact2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
        [return: System.Xml.Serialization.SoapElementAttribute("ChangeCaseContact2Result")]
        public ToolkitResultProtocol ChangeCaseContact(ChangeCaseContactSetupProtocol setupParam) {
            object[] results = this.Invoke("ChangeCaseContact1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeCaseContact1(ChangeCaseContactSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeCaseContact1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndChangeCaseContact1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AuthenticationHeader", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class AuthenticationHeader : SoapHeader {
        
        /// <remarks/>
        public string SessionID;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ChangeCaseContactSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class ChangeCaseContactSetupProtocol {
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public string ContactFirstName;
        
        /// <remarks/>
        public string ContactLastName;
        
        /// <remarks/>
        public string ContactPhone;
        
        /// <remarks/>
        public System.DateTime ChangeDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ChangeCaseSiteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class ChangeCaseSiteSetupProtocol {
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public string ContactFirstName;
        
        /// <remarks/>
        public string ContactLastName;
        
        /// <remarks/>
        public string ContactPhone;
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public System.DateTime ChangeDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ChangeCaseStatusSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class ChangeCaseStatusSetupProtocol {
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public string NewStatus;
        
        /// <remarks/>
        public System.DateTime ChangeDate;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ChangeSubcaseStatusSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class ChangeSubcaseStatusSetupProtocol {
        
        /// <remarks/>
        public string SubcaseIDNum;
        
        /// <remarks/>
        public string NewStatus;
        
        /// <remarks/>
        public System.DateTime ChangeDate;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CloseCaseSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class CloseCaseSetupProtocol {
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public string Resolution;
        
        /// <remarks/>
        public string Summary;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime CloseDate;
        
        /// <remarks/>
        public System.Double UnitsUsed;
        
        /// <remarks/>
        public CaseTimeAndExpensesProtocol CaseTimeAndExpenses;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CaseTimeAndExpensesProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class CaseTimeAndExpensesProtocol {
        
        /// <remarks/>
        public int TotalPhoneTime;
        
        /// <remarks/>
        public int TotalActualPhoneTime;
        
        /// <remarks/>
        public int CasePhoneTime;
        
        /// <remarks/>
        public int CaseActualPhoneTime;
        
        /// <remarks/>
        public int TotalResearchTime;
        
        /// <remarks/>
        public int TotalActualResearchTime;
        
        /// <remarks/>
        public int CaseResearchTime;
        
        /// <remarks/>
        public int CaseActualResearchTime;
        
        /// <remarks/>
        public int TotalNonBillableTime;
        
        /// <remarks/>
        public int CaseNonBillableTime;
        
        /// <remarks/>
        public int TotalBillableTime;
        
        /// <remarks/>
        public int CaseBillableTime;
        
        /// <remarks/>
        public System.Decimal TotalNonBillableExpenses;
        
        /// <remarks/>
        public System.Decimal CaseNonBillableExpenses;
        
        /// <remarks/>
        public System.Decimal TotalBillableExpenses;
        
        /// <remarks/>
        public System.Decimal CaseBillableExpenses;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AdditionalFieldProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class AdditionalFieldProtocol {
        
        /// <remarks/>
        public string FieldName;
        
        /// <remarks/>
        public AdditionalFieldType FieldType;
        
        /// <remarks/>
        public string FieldValue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AdditionalFieldType", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public enum AdditionalFieldType {
        
        /// <remarks/>
        String,
        
        /// <remarks/>
        Long,
        
        /// <remarks/>
        Double,
        
        /// <remarks/>
        Date,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CloseSubcaseSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class CloseSubcaseSetupProtocol {
        
        /// <remarks/>
        public string SubcaseIDNum;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public string Resolution;
        
        /// <remarks/>
        public string Summary;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime CloseDate;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateCaseObjidSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class CreateCaseObjidSetupProtocol {
        
        /// <remarks/>
        public string ContactFirstName;
        
        /// <remarks/>
        public string ContactLastName;
        
        /// <remarks/>
        public string ContactPhone;
        
        /// <remarks/>
        public int SitePartObjid;
        
        /// <remarks/>
        public string Title;
        
        /// <remarks/>
        public string CaseType;
        
        /// <remarks/>
        public string Priority;
        
        /// <remarks/>
        public string Serverity;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public string PhoneLogNotes;
        
        /// <remarks/>
        public string Queue;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public System.DateTime PhoneEndDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int ContactObjid;
        
        /// <remarks/>
        public int SiteObjid;
        
        /// <remarks/>
        public int PartRevisionObjid;
        
        /// <remarks/>
        public int ContractObjid;
        
        /// <remarks/>
        public int AddressObjid;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateCaseSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class CreateCaseSetupProtocol {
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public string ContactFirstName;
        
        /// <remarks/>
        public string ContactLastName;
        
        /// <remarks/>
        public string ContactPhone;
        
        /// <remarks/>
        public string PartNumber;
        
        /// <remarks/>
        public string PartRevision;
        
        /// <remarks/>
        public string PartDomain;
        
        /// <remarks/>
        public string SerialNumber;
        
        /// <remarks/>
        public int SitePartObjid;
        
        /// <remarks/>
        public string ContractIDNum;
        
        /// <remarks/>
        public string Title;
        
        /// <remarks/>
        public string CaseType;
        
        /// <remarks/>
        public string Priority;
        
        /// <remarks/>
        public string Severity;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public string PhoneLogNotes;
        
        /// <remarks/>
        public string Queue;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public System.DateTime PhoneEndDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateSubcaseSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class CreateSubcaseSetupProtocol {
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public string Title;
        
        /// <remarks/>
        public bool IsGeneral;
        
        /// <remarks/>
        public string Priority;
        
        /// <remarks/>
        public string Severity;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string Queue;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public System.DateTime DueDate;
        
        /// <remarks/>
        public int PriorWarning;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("DispatchCaseSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class DispatchCaseSetupProtocol {
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public string Queue;
        
        /// <remarks/>
        public System.DateTime DispatchDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("DispatchSubcaseSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class DispatchSubcaseSetupProtocol {
        
        /// <remarks/>
        public string SubcaseIDNum;
        
        /// <remarks/>
        public string Queue;
        
        /// <remarks/>
        public System.DateTime DispatchDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ForwardCaseSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class ForwardCaseSetupProtocol {
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public string NewQueue;
        
        /// <remarks/>
        public System.DateTime ForwardDate;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ForwardSubcaseSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class ForwardSubcaseSetupProtocol {
        
        /// <remarks/>
        public string SubcaseIDNum;
        
        /// <remarks/>
        public string NewQueue;
        
        /// <remarks/>
        public System.DateTime ForwardDate;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("InitialResponseSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class InitialResponseSetupProtocol {
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public System.DateTime ResponseDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool IsVIAPhone;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("YankCaseSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class YankCaseSetupProtocol {
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public System.DateTime YankDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("YankSubcaseSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class YankSubcaseSetupProtocol {
        
        /// <remarks/>
        public string SubcaseIDNum;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public System.DateTime YankDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LogCaseCommitmentSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class LogCaseCommitmentSetupProtocol {
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public string Title;
        
        /// <remarks/>
        public string ActionType;
        
        /// <remarks/>
        public System.DateTime LogDate;
        
        /// <remarks/>
        public System.DateTime CommitmentDate;
        
        /// <remarks/>
        public int PriorWarning;
        
        /// <remarks/>
        public bool IsMadeToCustomer;
        
        /// <remarks/>
        public string ContactFirstName;
        
        /// <remarks/>
        public string ContactLastName;
        
        /// <remarks/>
        public string ContactPhone;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public bool GenerateCommitmentEmail;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LogSubcaseCommitmentSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class LogSubcaseCommitmentSetupProtocol {
        
        /// <remarks/>
        public string SubcaseIDNum;
        
        /// <remarks/>
        public string Title;
        
        /// <remarks/>
        public string ActionType;
        
        /// <remarks/>
        public System.DateTime LogDate;
        
        /// <remarks/>
        public System.DateTime CommitmentDate;
        
        /// <remarks/>
        public int PriorWarning;
        
        /// <remarks/>
        public bool IsMadeToCustomer;
        
        /// <remarks/>
        public string ContactFirstName;
        
        /// <remarks/>
        public string ContactLastName;
        
        /// <remarks/>
        public string ContactPhone;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public bool GenerateCommitmentEmail;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdateCaseCommitmentSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class UpdateCaseCommitmentSetupProtocol {
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public string Title;
        
        /// <remarks/>
        public string ActionType;
        
        /// <remarks/>
        public System.DateTime CommitmentDate;
        
        /// <remarks/>
        public int CommitmentObjid;
        
        /// <remarks/>
        public int PriorWarning;
        
        /// <remarks/>
        public bool IsMadeToCustomer;
        
        /// <remarks/>
        public string ContactFirstName;
        
        /// <remarks/>
        public string ContactLastName;
        
        /// <remarks/>
        public string ContactPhone;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public System.DateTime UpdateDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdateSubcaseCommitmentSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class UpdateSubcaseCommitmentSetupProtocol {
        
        /// <remarks/>
        public string SubcaseIDNum;
        
        /// <remarks/>
        public string Title;
        
        /// <remarks/>
        public string ActionType;
        
        /// <remarks/>
        public System.DateTime CommitmentDate;
        
        /// <remarks/>
        public int CommitmentObjid;
        
        /// <remarks/>
        public int PriorWarning;
        
        /// <remarks/>
        public bool IsMadeToCustomer;
        
        /// <remarks/>
        public string ContactFirstName;
        
        /// <remarks/>
        public string ContactLastName;
        
        /// <remarks/>
        public string ContactPhone;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public System.DateTime UpdateDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("FulfillCommitmentSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class FulfillCommitmentSetupProtocol {
        
        /// <remarks/>
        public int LogObjid;
        
        /// <remarks/>
        public System.DateTime FulfillDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("MoveCaseSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class MoveCaseSetupProtocol {
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public string NewWipBin;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("MoveSubcaseSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class MoveSubcaseSetupProtocol {
        
        /// <remarks/>
        public string SubcaseIDNum;
        
        /// <remarks/>
        public string NewWipBin;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AcceptCaseSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class AcceptCaseSetupProtocol {
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public System.DateTime AcceptDate;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AcceptSubcaseSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class AcceptSubcaseSetupProtocol {
        
        /// <remarks/>
        public string SubcaseIDNum;
        
        /// <remarks/>
        public System.DateTime AcceptDate;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RejectCaseSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class RejectCaseSetupProtocol {
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public System.DateTime RejectDate;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RejectSubcaseSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class RejectSubcaseSetupProtocol {
        
        /// <remarks/>
        public string SubcaseIDNum;
        
        /// <remarks/>
        public System.DateTime RejectDate;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AssignCaseSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class AssignCaseSetupProtocol {
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public string NewUser;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public System.DateTime AssignDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AssignSubcaseSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class AssignSubcaseSetupProtocol {
        
        /// <remarks/>
        public string SubcaseIDNum;
        
        /// <remarks/>
        public string NewUser;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public System.DateTime AssignDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdateCaseSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class UpdateCaseSetupProtocol {
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public string Priority;
        
        /// <remarks/>
        public string Severity;
        
        /// <remarks/>
        public string CaseType;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime UpdateDate;
        
        /// <remarks/>
        public bool OnlyOwner;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public string Title;
        
        /// <remarks/>
        public int PartRevisionObjid;
        
        /// <remarks/>
        public int SitePartObjid;
        
        /// <remarks/>
        public int ContractObjid;
        
        /// <remarks/>
        public bool ClearSitePartRelation;
        
        /// <remarks/>
        public bool ClearContractRelation;
        
        /// <remarks/>
        public bool ClearPartRevisionRelation;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdateSubcaseSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class UpdateSubcaseSetupProtocol {
        
        /// <remarks/>
        public string SubcaseIDNum;
        
        /// <remarks/>
        public string Priority;
        
        /// <remarks/>
        public string Severity;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime UpdateDate;
        
        /// <remarks/>
        public bool OnlyOwner;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ReopenCaseSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class ReopenCaseSetupProtocol {
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public System.DateTime ReopenDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ReopenSubcaseSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class ReopenSubcaseSetupProtocol {
        
        /// <remarks/>
        public string SubcaseIDNum;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public System.DateTime ReopenDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LogCasePhoneSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class LogCasePhoneSetupProtocol {
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public string ContactFirstName;
        
        /// <remarks/>
        public string ContactLastName;
        
        /// <remarks/>
        public string ContactPhone;
        
        /// <remarks/>
        public string ActionType;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string InternalUseOnlyNotes;
        
        /// <remarks/>
        public System.DateTime LogDate;
        
        /// <remarks/>
        public System.DateTime LogEndDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public string NewStatus;
        
        /// <remarks/>
        public string CommitmentTitle;
        
        /// <remarks/>
        public string CommitmentNotes;
        
        /// <remarks/>
        public System.DateTime CommitmentDueDate;
        
        /// <remarks/>
        public int CommitmentPriorWarning;
        
        /// <remarks/>
        public bool IsCommitmentToCustomer;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LogCasePhoneResultProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class LogCasePhoneResultProtocol {
        
        /// <remarks/>
        public int StatusChangeObjid;
        
        /// <remarks/>
        public int CommitmentObjid;
        
        /// <remarks/>
        public short ReturnCode;
        
        /// <remarks/>
        public string IDNum;
        
        /// <remarks/>
        public int Objid;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LogSubcasePhoneSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class LogSubcasePhoneSetupProtocol {
        
        /// <remarks/>
        public string SubcaseIDNum;
        
        /// <remarks/>
        public string ContactFirstName;
        
        /// <remarks/>
        public string ContactLastName;
        
        /// <remarks/>
        public string ContactPhone;
        
        /// <remarks/>
        public string ActionType;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string InternalUseOnlyNotes;
        
        /// <remarks/>
        public System.DateTime LogDate;
        
        /// <remarks/>
        public System.DateTime LogEndDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public string NewStatus;
        
        /// <remarks/>
        public string CommitmentTitle;
        
        /// <remarks/>
        public string CommitmentNotes;
        
        /// <remarks/>
        public System.DateTime CommitmentDueDate;
        
        /// <remarks/>
        public int CommitmentPriorWarning;
        
        /// <remarks/>
        public bool IsCommitmentToCustomer;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LogSubcasePhoneResultProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class LogSubcasePhoneResultProtocol {
        
        /// <remarks/>
        public int CommitmentObjid;
        
        /// <remarks/>
        public int StatusChangeObjid;
        
        /// <remarks/>
        public short ReturnCode;
        
        /// <remarks/>
        public string IDNum;
        
        /// <remarks/>
        public int Objid;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LogCaseResearchSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class LogCaseResearchSetupProtocol {
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public string ActionType;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string InternalUseOnlyNotes;
        
        /// <remarks/>
        public System.DateTime LogDate;
        
        /// <remarks/>
        public int ResearchDuration;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public string NewStatus;
        
        /// <remarks/>
        public string CommitmentTitle;
        
        /// <remarks/>
        public string CommitmentNotes;
        
        /// <remarks/>
        public System.DateTime CommitmentDueDate;
        
        /// <remarks/>
        public int CommitmentPriorWarning;
        
        /// <remarks/>
        public bool IsCommitmentToCustomer;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LogCaseResearchResultProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class LogCaseResearchResultProtocol {
        
        /// <remarks/>
        public int CommitmentObjid;
        
        /// <remarks/>
        public int StatusChangeObjid;
        
        /// <remarks/>
        public short ReturnCode;
        
        /// <remarks/>
        public string IDNum;
        
        /// <remarks/>
        public int Objid;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LogSubcaseResearchSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class LogSubcaseResearchSetupProtocol {
        
        /// <remarks/>
        public string SubcaseIDNum;
        
        /// <remarks/>
        public string ActionType;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string InternalUseOnlyNotes;
        
        /// <remarks/>
        public System.DateTime LogDate;
        
        /// <remarks/>
        public int ResearchDuration;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public string NewStatus;
        
        /// <remarks/>
        public string CommitmentTitle;
        
        /// <remarks/>
        public string CommitmentNotes;
        
        /// <remarks/>
        public System.DateTime CommitmentDueDate;
        
        /// <remarks/>
        public int CommitmentPriorWarning;
        
        /// <remarks/>
        public bool IsCommitmentToCustomer;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LogSubcaseResearchResultProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class LogSubcaseResearchResultProtocol {
        
        /// <remarks/>
        public int StatusChangeObjid;
        
        /// <remarks/>
        public int CommitmentObjid;
        
        /// <remarks/>
        public short ReturnCode;
        
        /// <remarks/>
        public string IDNum;
        
        /// <remarks/>
        public int Objid;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LogCaseNoteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class LogCaseNoteSetupProtocol {
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public string ActionType;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string InternalUseOnlyNotes;
        
        /// <remarks/>
        public System.DateTime LogDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public string NewStatus;
        
        /// <remarks/>
        public string CommitmentTitle;
        
        /// <remarks/>
        public string CommitmentNotes;
        
        /// <remarks/>
        public System.DateTime CommitmentDueDate;
        
        /// <remarks/>
        public int CommitmentPriorWarning;
        
        /// <remarks/>
        public bool IsCommitmentToCustomer;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LogCaseNoteResultProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class LogCaseNoteResultProtocol {
        
        /// <remarks/>
        public int StatusChangeObjid;
        
        /// <remarks/>
        public int CommitmentObjid;
        
        /// <remarks/>
        public short ReturnCode;
        
        /// <remarks/>
        public string IDNum;
        
        /// <remarks/>
        public int Objid;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LogSubcaseNoteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class LogSubcaseNoteSetupProtocol {
        
        /// <remarks/>
        public string SubcaseIDNum;
        
        /// <remarks/>
        public string ActionType;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string InternalUseOnlyNotes;
        
        /// <remarks/>
        public System.DateTime LogDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public string NewStatus;
        
        /// <remarks/>
        public string CommitmentTitle;
        
        /// <remarks/>
        public string CommitmentNotes;
        
        /// <remarks/>
        public System.DateTime CommitmentDueDate;
        
        /// <remarks/>
        public int CommitmentPriorWarning;
        
        /// <remarks/>
        public bool IsCommitmentToCustomer;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LogSubcaseNoteResultProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class LogSubcaseNoteResultProtocol {
        
        /// <remarks/>
        public int StatusChangeObjid;
        
        /// <remarks/>
        public int CommitmentObjid;
        
        /// <remarks/>
        public short ReturnCode;
        
        /// <remarks/>
        public string IDNum;
        
        /// <remarks/>
        public int Objid;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RelateCaseToParentCaseSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class RelateCaseToParentCaseSetupProtocol {
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public string ParentCaseIDNum;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UnrelateCaseFromParentCaseSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class UnrelateCaseFromParentCaseSetupProtocol {
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ToolkitResultProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class ToolkitResultProtocol {
        
        /// <remarks/>
        public short ReturnCode;
        
        /// <remarks/>
        public string IDNum;
        
        /// <remarks/>
        public int Objid;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LogCaseEmailSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class LogCaseEmailSetupProtocol {
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public string ActionType;
        
        /// <remarks/>
        public System.DateTime LogDate;
        
        /// <remarks/>
        public string Message;
        
        /// <remarks/>
        public string Recipient;
        
        /// <remarks/>
        public string CCList;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public string NewStatus;
        
        /// <remarks/>
        public string CommitmentTitle;
        
        /// <remarks/>
        public string CommitmentNotes;
        
        /// <remarks/>
        public System.DateTime CommitmentDueDate;
        
        /// <remarks/>
        public int CommitmentPriorWarning;
        
        /// <remarks/>
        public bool IsCommitmentToCustomer;
        
        /// <remarks/>
        public string CommitmentActionType;
        
        /// <remarks/>
        public int CommitmentContactObjid;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public bool SendEmail;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LogCaseEmailResultProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class LogCaseEmailResultProtocol {
        
        /// <remarks/>
        public int CommitmentObjid;
        
        /// <remarks/>
        public int StatusChangeObjid;
        
        /// <remarks/>
        public short ReturnCode;
        
        /// <remarks/>
        public string IDNum;
        
        /// <remarks/>
        public int Objid;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LogSubcaseEmailSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class LogSubcaseEmailSetupProtocol {
        
        /// <remarks/>
        public string SubcaseIDNum;
        
        /// <remarks/>
        public string ActionType;
        
        /// <remarks/>
        public System.DateTime LogDate;
        
        /// <remarks/>
        public string Message;
        
        /// <remarks/>
        public string Recipient;
        
        /// <remarks/>
        public string CCList;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public string NewStatus;
        
        /// <remarks/>
        public string CommitmentTitle;
        
        /// <remarks/>
        public string CommitmentNotes;
        
        /// <remarks/>
        public System.DateTime CommitmentDueDate;
        
        /// <remarks/>
        public int CommitmentPriorWarning;
        
        /// <remarks/>
        public bool IsCommitmentToCustomer;
        
        /// <remarks/>
        public string CommitmentActionType;
        
        /// <remarks/>
        public int CommitmentContactObjid;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public bool SendEmail;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LogSubcaseEmailResultProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class LogSubcaseEmailResultProtocol {
        
        /// <remarks/>
        public int StatusChangeObjid;
        
        /// <remarks/>
        public int CommitmentObjid;
        
        /// <remarks/>
        public short ReturnCode;
        
        /// <remarks/>
        public string IDNum;
        
        /// <remarks/>
        public int Objid;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("GetCaseTimeAndExpensesSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class GetCaseTimeAndExpensesSetupProtocol {
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("GetCaseTimeAndExpensesResultProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class GetCaseTimeAndExpensesResultProtocol {
        
        /// <remarks/>
        public CaseTimeAndExpensesProtocol CaseTimeAndExpenses;
        
        /// <remarks/>
        public short ReturnCode;
        
        /// <remarks/>
        public string IDNum;
        
        /// <remarks/>
        public int Objid;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("GetSubcaseTimeAndExpensesSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class GetSubcaseTimeAndExpensesSetupProtocol {
        
        /// <remarks/>
        public string SubcaseIDNum;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("SubcaseTimeAndExpensesProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class SubcaseTimeAndExpensesProtocol {
        
        /// <remarks/>
        public int CapturedPhoneTime;
        
        /// <remarks/>
        public int CapturedResearchTime;
        
        /// <remarks/>
        public int TotalNonBillableTime;
        
        /// <remarks/>
        public int TotalBillableTime;
        
        /// <remarks/>
        public System.Decimal TotalNonBillableExpenses;
        
        /// <remarks/>
        public System.Decimal TotalBillableExpenses;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("GetSubcaseTimeAndExpensesResultProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.SupportToolkitSrv_v1")]
    public class GetSubcaseTimeAndExpensesResultProtocol {
        
        /// <remarks/>
        public SubcaseTimeAndExpensesProtocol SubcaseTimeAndExpenses;
        
        /// <remarks/>
        public short ReturnCode;
        
        /// <remarks/>
        public string IDNum;
        
        /// <remarks/>
        public int Objid;
    }
}
