//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.2032.
// 
namespace FChoice.WebServices.Clarify.Client.Protocols.ContractsToolkitSrv {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ContractsToolkitSrvSoap", Namespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(AdditionalFieldProtocol))]
    public class ContractsToolkitSrv : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        public AuthenticationHeader AuthenticationHeaderValue;
        
        /// <remarks/>
        public ContractsToolkitSrv() {
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/UnrelateContractItemFromSitePart", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol UnrelateContractItemFromSitePart(int contractObjid, string partNumber, string partDomain, string partRevision) {
            object[] results = this.Invoke("UnrelateContractItemFromSitePart", new object[] {
                        contractObjid,
                        partNumber,
                        partDomain,
                        partRevision});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnrelateContractItemFromSitePart(int contractObjid, string partNumber, string partDomain, string partRevision, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UnrelateContractItemFromSitePart", new object[] {
                        contractObjid,
                        partNumber,
                        partDomain,
                        partRevision}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUnrelateContractItemFromSitePart(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UnrelateContractItemFromSitePart1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/UnrelateContractItemFromSitePart2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("UnrelateContractItemFromSitePart2Result")]
        public ToolkitResultProtocol UnrelateContractItemFromSitePart(UnrelateContractItemFromSitePartSetupProtocol setupParam) {
            object[] results = this.Invoke("UnrelateContractItemFromSitePart1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnrelateContractItemFromSitePart1(UnrelateContractItemFromSitePartSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UnrelateContractItemFromSitePart1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUnrelateContractItemFromSitePart1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/RelateContractItemToSitePart", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol RelateContractItemToSitePart(int contractObjid, string partNumber, string partDomain, string partRevision, string serialNumber) {
            object[] results = this.Invoke("RelateContractItemToSitePart", new object[] {
                        contractObjid,
                        partNumber,
                        partDomain,
                        partRevision,
                        serialNumber});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRelateContractItemToSitePart(int contractObjid, string partNumber, string partDomain, string partRevision, string serialNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RelateContractItemToSitePart", new object[] {
                        contractObjid,
                        partNumber,
                        partDomain,
                        partRevision,
                        serialNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndRelateContractItemToSitePart(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="RelateContractItemToSitePart1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/RelateContractItemToSitePart2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("RelateContractItemToSitePart2Result")]
        public ToolkitResultProtocol RelateContractItemToSitePart(RelateContractItemToSitePartSetupProtocol setupParam) {
            object[] results = this.Invoke("RelateContractItemToSitePart1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRelateContractItemToSitePart1(RelateContractItemToSitePartSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RelateContractItemToSitePart1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndRelateContractItemToSitePart1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/CreatePriceInstance", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol CreatePriceInstance(string partNumber, string partRevision, string partDomain, string supportProgram, string priceProgram, PriceInstanceType priceType, int quantity) {
            object[] results = this.Invoke("CreatePriceInstance", new object[] {
                        partNumber,
                        partRevision,
                        partDomain,
                        supportProgram,
                        priceProgram,
                        priceType,
                        quantity});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreatePriceInstance(string partNumber, string partRevision, string partDomain, string supportProgram, string priceProgram, PriceInstanceType priceType, int quantity, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreatePriceInstance", new object[] {
                        partNumber,
                        partRevision,
                        partDomain,
                        supportProgram,
                        priceProgram,
                        priceType,
                        quantity}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreatePriceInstance(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreatePriceInstance1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/CreatePriceInstance2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreatePriceInstance2Result")]
        public ToolkitResultProtocol CreatePriceInstance(CreatePriceInstanceSetupProtocol setupParam) {
            object[] results = this.Invoke("CreatePriceInstance1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreatePriceInstance1(CreatePriceInstanceSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreatePriceInstance1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreatePriceInstance1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/AddPOToSchedule", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol AddPOToSchedule(string contractIDNum, string scheduleIDNum, string poIDNum, System.Decimal poAmount) {
            object[] results = this.Invoke("AddPOToSchedule", new object[] {
                        contractIDNum,
                        scheduleIDNum,
                        poIDNum,
                        poAmount});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddPOToSchedule(string contractIDNum, string scheduleIDNum, string poIDNum, System.Decimal poAmount, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddPOToSchedule", new object[] {
                        contractIDNum,
                        scheduleIDNum,
                        poIDNum,
                        poAmount}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAddPOToSchedule(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AddPOToSchedule1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/AddPOToSchedule2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("AddPOToSchedule2Result")]
        public ToolkitResultProtocol AddPOToSchedule(AddPOToScheduleSetupProtocol setupParam) {
            object[] results = this.Invoke("AddPOToSchedule1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddPOToSchedule1(AddPOToScheduleSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddPOToSchedule1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAddPOToSchedule1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/CreateContractLineItem", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol CreateContractLineItem(string contractIDNum, string partNumber, string partDomain, string partRevision, int quantity, string priceSchedule, int parentLineItemObjid) {
            object[] results = this.Invoke("CreateContractLineItem", new object[] {
                        contractIDNum,
                        partNumber,
                        partDomain,
                        partRevision,
                        quantity,
                        priceSchedule,
                        parentLineItemObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateContractLineItem(string contractIDNum, string partNumber, string partDomain, string partRevision, int quantity, string priceSchedule, int parentLineItemObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateContractLineItem", new object[] {
                        contractIDNum,
                        partNumber,
                        partDomain,
                        partRevision,
                        quantity,
                        priceSchedule,
                        parentLineItemObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateContractLineItem(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateContractLineItem1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/CreateContractLineItem2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateContractLineItem2Result")]
        public ToolkitResultProtocol CreateContractLineItem(string contractIDNum, string partNumber, string partDomain, string partRevision, string priceSchedule, string serialNumber, int parentLineItemObjid) {
            object[] results = this.Invoke("CreateContractLineItem1", new object[] {
                        contractIDNum,
                        partNumber,
                        partDomain,
                        partRevision,
                        priceSchedule,
                        serialNumber,
                        parentLineItemObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateContractLineItem1(string contractIDNum, string partNumber, string partDomain, string partRevision, string priceSchedule, string serialNumber, int parentLineItemObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateContractLineItem1", new object[] {
                        contractIDNum,
                        partNumber,
                        partDomain,
                        partRevision,
                        priceSchedule,
                        serialNumber,
                        parentLineItemObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateContractLineItem1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateContractLineItem2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/CreateContractLineItem3", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateContractLineItem3Result")]
        public ToolkitResultProtocol CreateContractLineItem(CreateContractLineItemSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateContractLineItem2", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateContractLineItem2(CreateContractLineItemSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateContractLineItem2", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateContractLineItem2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/ReopenContract", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol ReopenContract(string contractIDNum, string status) {
            object[] results = this.Invoke("ReopenContract", new object[] {
                        contractIDNum,
                        status});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReopenContract(string contractIDNum, string status, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReopenContract", new object[] {
                        contractIDNum,
                        status}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndReopenContract(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ReopenContract1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/ReopenContract2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("ReopenContract2Result")]
        public ToolkitResultProtocol ReopenContract(ReopenContractSetupProtocol setupParam) {
            object[] results = this.Invoke("ReopenContract1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReopenContract1(ReopenContractSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReopenContract1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndReopenContract1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/DeleteSitePart", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol DeleteSitePart(int sitePartObjid) {
            object[] results = this.Invoke("DeleteSitePart", new object[] {
                        sitePartObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteSitePart(int sitePartObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteSitePart", new object[] {
                        sitePartObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDeleteSitePart(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="DeleteSitePart1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/DeleteSitePart2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("DeleteSitePart2Result")]
        public ToolkitResultProtocol DeleteSitePart(DeleteSitePartSetupProtocol setupParam) {
            object[] results = this.Invoke("DeleteSitePart1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteSitePart1(DeleteSitePartSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteSitePart1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDeleteSitePart1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/LogContractNote", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol LogContractNote(string contractIDNum, string notes) {
            object[] results = this.Invoke("LogContractNote", new object[] {
                        contractIDNum,
                        notes});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogContractNote(string contractIDNum, string notes, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogContractNote", new object[] {
                        contractIDNum,
                        notes}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogContractNote(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LogContractNote1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/LogContractNote2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("LogContractNote2Result")]
        public ToolkitResultProtocol LogContractNote(LogContractNoteSetupProtocol setupParam) {
            object[] results = this.Invoke("LogContractNote1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogContractNote1(LogContractNoteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogContractNote1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLogContractNote1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/RejectContract", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol RejectContract(string contractIDNum) {
            object[] results = this.Invoke("RejectContract", new object[] {
                        contractIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRejectContract(string contractIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RejectContract", new object[] {
                        contractIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndRejectContract(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="RejectContract1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/RejectContract2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("RejectContract2Result")]
        public ToolkitResultProtocol RejectContract(RejectContractSetupProtocol setupParam) {
            object[] results = this.Invoke("RejectContract1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRejectContract1(RejectContractSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RejectContract1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndRejectContract1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/UpdateSchedule", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol UpdateSchedule(string contractIDNum, string scheduleIDNum) {
            object[] results = this.Invoke("UpdateSchedule", new object[] {
                        contractIDNum,
                        scheduleIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateSchedule(string contractIDNum, string scheduleIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateSchedule", new object[] {
                        contractIDNum,
                        scheduleIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateSchedule(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateSchedule1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/UpdateSchedule2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdateSchedule2Result")]
        public ToolkitResultProtocol UpdateSchedule(UpdateScheduleSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdateSchedule1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateSchedule1(UpdateScheduleSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateSchedule1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateSchedule1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/CreateSchedule", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol CreateSchedule(string contractIDNum) {
            object[] results = this.Invoke("CreateSchedule", new object[] {
                        contractIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateSchedule(string contractIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateSchedule", new object[] {
                        contractIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateSchedule(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateSchedule1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/CreateSchedule2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateSchedule2Result")]
        public ToolkitResultProtocol CreateSchedule(CreateScheduleSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateSchedule1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateSchedule1(CreateScheduleSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateSchedule1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateSchedule1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/YankQuote", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol YankQuote(string quoteIDNum) {
            object[] results = this.Invoke("YankQuote", new object[] {
                        quoteIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginYankQuote(string quoteIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("YankQuote", new object[] {
                        quoteIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndYankQuote(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="YankQuote1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/YankQuote2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("YankQuote2Result")]
        public ToolkitResultProtocol YankQuote(YankQuoteSetupProtocol setupParam) {
            object[] results = this.Invoke("YankQuote1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginYankQuote1(YankQuoteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("YankQuote1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndYankQuote1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/RejectQuote", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol RejectQuote(string quoteIDNum) {
            object[] results = this.Invoke("RejectQuote", new object[] {
                        quoteIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRejectQuote(string quoteIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RejectQuote", new object[] {
                        quoteIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndRejectQuote(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="RejectQuote1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/RejectQuote2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("RejectQuote2Result")]
        public ToolkitResultProtocol RejectQuote(RejectQuoteSetupProtocol setupParam) {
            object[] results = this.Invoke("RejectQuote1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRejectQuote1(RejectQuoteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RejectQuote1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndRejectQuote1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/MoveQuote", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol MoveQuote(string quoteIDNum, string newWipBin) {
            object[] results = this.Invoke("MoveQuote", new object[] {
                        quoteIDNum,
                        newWipBin});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveQuote(string quoteIDNum, string newWipBin, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveQuote", new object[] {
                        quoteIDNum,
                        newWipBin}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndMoveQuote(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="MoveQuote1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/MoveQuote2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("MoveQuote2Result")]
        public ToolkitResultProtocol MoveQuote(MoveQuoteSetupProtocol setupParam) {
            object[] results = this.Invoke("MoveQuote1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveQuote1(MoveQuoteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveQuote1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndMoveQuote1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/ForwardQuote", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol ForwardQuote(string quoteIDNum, string newQueue) {
            object[] results = this.Invoke("ForwardQuote", new object[] {
                        quoteIDNum,
                        newQueue});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginForwardQuote(string quoteIDNum, string newQueue, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ForwardQuote", new object[] {
                        quoteIDNum,
                        newQueue}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndForwardQuote(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ForwardQuote1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/ForwardQuote2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("ForwardQuote2Result")]
        public ToolkitResultProtocol ForwardQuote(ForwardQuoteSetupProtocol setupParam) {
            object[] results = this.Invoke("ForwardQuote1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginForwardQuote1(ForwardQuoteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ForwardQuote1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndForwardQuote1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/DispatchQuote", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol DispatchQuote(string quoteIDNum, string queue) {
            object[] results = this.Invoke("DispatchQuote", new object[] {
                        quoteIDNum,
                        queue});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDispatchQuote(string quoteIDNum, string queue, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DispatchQuote", new object[] {
                        quoteIDNum,
                        queue}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDispatchQuote(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="DispatchQuote1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/DispatchQuote2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("DispatchQuote2Result")]
        public ToolkitResultProtocol DispatchQuote(DispatchQuoteSetupProtocol setupParam) {
            object[] results = this.Invoke("DispatchQuote1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDispatchQuote1(DispatchQuoteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DispatchQuote1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDispatchQuote1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/ChangeQuoteStatus", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol ChangeQuoteStatus(string quoteIDNum) {
            object[] results = this.Invoke("ChangeQuoteStatus", new object[] {
                        quoteIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeQuoteStatus(string quoteIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeQuoteStatus", new object[] {
                        quoteIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndChangeQuoteStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ChangeQuoteStatus1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/ChangeQuoteStatus2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("ChangeQuoteStatus2Result")]
        public ToolkitResultProtocol ChangeQuoteStatus(ChangeQuoteStatusSetupProtocol setupParam) {
            object[] results = this.Invoke("ChangeQuoteStatus1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeQuoteStatus1(ChangeQuoteStatusSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeQuoteStatus1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndChangeQuoteStatus1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/AssignQuote", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol AssignQuote(string quoteIDNum) {
            object[] results = this.Invoke("AssignQuote", new object[] {
                        quoteIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAssignQuote(string quoteIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AssignQuote", new object[] {
                        quoteIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAssignQuote(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AssignQuote1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/AssignQuote2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("AssignQuote2Result")]
        public ToolkitResultProtocol AssignQuote(AssignQuoteSetupProtocol setupParam) {
            object[] results = this.Invoke("AssignQuote1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAssignQuote1(AssignQuoteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AssignQuote1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAssignQuote1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/AcceptQuote", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol AcceptQuote(string quoteIDNum) {
            object[] results = this.Invoke("AcceptQuote", new object[] {
                        quoteIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAcceptQuote(string quoteIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AcceptQuote", new object[] {
                        quoteIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAcceptQuote(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AcceptQuote1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/AcceptQuote2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("AcceptQuote2Result")]
        public ToolkitResultProtocol AcceptQuote(AcceptQuoteSetupProtocol setupParam) {
            object[] results = this.Invoke("AcceptQuote1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAcceptQuote1(AcceptQuoteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AcceptQuote1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAcceptQuote1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/CreateContract", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol CreateContract(string title) {
            object[] results = this.Invoke("CreateContract", new object[] {
                        title});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateContract(string title, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateContract", new object[] {
                        title}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateContract(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateContract1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"/CreateContract2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateContract2Result")]
        public ToolkitResultProtocol CreateContract(CreateContractSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateContract1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateContract1(CreateContractSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateContract1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateContract1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AuthenticationHeader", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
    public class AuthenticationHeader : SoapHeader {
        
        /// <remarks/>
        public string SessionID;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateContractSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
    public class CreateContractSetupProtocol {
        
        /// <remarks/>
        public string ContractIDNum;
        
        /// <remarks/>
        public string Title;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public string AccountIDNum;
        
        /// <remarks/>
        public string AccountName;
        
        /// <remarks/>
        public string ContactFirstName;
        
        /// <remarks/>
        public string ContactLastName;
        
        /// <remarks/>
        public string ContactPhone;
        
        /// <remarks/>
        public string ContractType;
        
        /// <remarks/>
        public string Terms;
        
        /// <remarks/>
        public string PriceProgram;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public string AdminUserName;
        
        /// <remarks/>
        public string BillToSiteIDNum;
        
        /// <remarks/>
        public string ShipToSiteIDNum;
        
        /// <remarks/>
        public System.DateTime StartDate;
        
        /// <remarks/>
        public System.DateTime ExpireDate;
        
        /// <remarks/>
        public System.DateTime DefaultStartDate;
        
        /// <remarks/>
        public System.DateTime DefaultExpirationDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public string Queue;
        
        /// <remarks/>
        public bool IsWarranty;
        
        /// <remarks/>
        public bool IsEvergreen;
        
        /// <remarks/>
        public int RenewPriorDays;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AdditionalFieldProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
    public class AdditionalFieldProtocol {
        
        /// <remarks/>
        public string FieldName;
        
        /// <remarks/>
        public AdditionalFieldType FieldType;
        
        /// <remarks/>
        public string FieldValue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AdditionalFieldType", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
    public enum AdditionalFieldType {
        
        /// <remarks/>
        String,
        
        /// <remarks/>
        Long,
        
        /// <remarks/>
        Double,
        
        /// <remarks/>
        Date,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AcceptQuoteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
    public class AcceptQuoteSetupProtocol {
        
        /// <remarks/>
        public string QuoteIDNum;
        
        /// <remarks/>
        public System.DateTime AcceptDate;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AssignQuoteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
    public class AssignQuoteSetupProtocol {
        
        /// <remarks/>
        public string QuoteIDNum;
        
        /// <remarks/>
        public string NewUser;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public System.DateTime AssignDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ChangeQuoteStatusSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
    public class ChangeQuoteStatusSetupProtocol {
        
        /// <remarks/>
        public string QuoteIDNum;
        
        /// <remarks/>
        public string NewStatus;
        
        /// <remarks/>
        public System.DateTime ChangeDate;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("DispatchQuoteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
    public class DispatchQuoteSetupProtocol {
        
        /// <remarks/>
        public string QuoteIDNum;
        
        /// <remarks/>
        public string Queue;
        
        /// <remarks/>
        public System.DateTime DispatchDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ForwardQuoteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
    public class ForwardQuoteSetupProtocol {
        
        /// <remarks/>
        public string QuoteIDNum;
        
        /// <remarks/>
        public string NewQueue;
        
        /// <remarks/>
        public System.DateTime ForwardDate;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("MoveQuoteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
    public class MoveQuoteSetupProtocol {
        
        /// <remarks/>
        public string QuoteIDNum;
        
        /// <remarks/>
        public string NewWipBin;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RejectQuoteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
    public class RejectQuoteSetupProtocol {
        
        /// <remarks/>
        public string QuoteIDNum;
        
        /// <remarks/>
        public System.DateTime RejectDate;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("YankQuoteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
    public class YankQuoteSetupProtocol {
        
        /// <remarks/>
        public string QuoteIDNum;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public System.DateTime YankDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateScheduleSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
    public class CreateScheduleSetupProtocol {
        
        /// <remarks/>
        public string ContractIDNum;
        
        /// <remarks/>
        public string ScheduleIDNum;
        
        /// <remarks/>
        public string BillSiteIDNum;
        
        /// <remarks/>
        public string BillingATTN;
        
        /// <remarks/>
        public string ShipToSiteIDNum;
        
        /// <remarks/>
        public string PriceProgram;
        
        /// <remarks/>
        public BillingFrequency BillingFrequency;
        
        /// <remarks/>
        public BillingOption BillingOption;
        
        /// <remarks/>
        public System.DateTime BillingPeriodStartDate;
        
        /// <remarks/>
        public System.DateTime FirstBillingDate;
        
        /// <remarks/>
        public System.DateTime ChargeStartDate;
        
        /// <remarks/>
        public System.DateTime ChargeEndDate;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("BillingFrequency", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
    public enum BillingFrequency {
        
        /// <remarks/>
        Annual,
        
        /// <remarks/>
        SemiAnnual,
        
        /// <remarks/>
        Quarterly,
        
        /// <remarks/>
        Monthly,
        
        /// <remarks/>
        OneTime,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("BillingOption", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
    public enum BillingOption {
        
        /// <remarks/>
        InAdvance,
        
        /// <remarks/>
        InArrears,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdateScheduleSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
    public class UpdateScheduleSetupProtocol {
        
        /// <remarks/>
        public string ContractIDNum;
        
        /// <remarks/>
        public string ScheduleIDNum;
        
        /// <remarks/>
        public string BillSiteIDNum;
        
        /// <remarks/>
        public string BillingATTN;
        
        /// <remarks/>
        public string ShipToSiteIDNum;
        
        /// <remarks/>
        public string PriceProgram;
        
        /// <remarks/>
        public BillingFrequency BillingFrequency;
        
        /// <remarks/>
        public BillingOption BillingOption;
        
        /// <remarks/>
        public System.DateTime BillingPeriodStartDate;
        
        /// <remarks/>
        public System.DateTime FirstBillingDate;
        
        /// <remarks/>
        public System.DateTime ChargeStartDate;
        
        /// <remarks/>
        public System.DateTime ChargeEndDate;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RejectContractSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
    public class RejectContractSetupProtocol {
        
        /// <remarks/>
        public string ContractIDNum;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime RejectDate;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LogContractNoteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
    public class LogContractNoteSetupProtocol {
        
        /// <remarks/>
        public string ContractIDNum;
        
        /// <remarks/>
        public string ActionType;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string InternalUseOnlyNotes;
        
        /// <remarks/>
        public System.DateTime LogDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("DeleteSitePartSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
    public class DeleteSitePartSetupProtocol {
        
        /// <remarks/>
        public int SitePartObjid;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ReopenContractSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
    public class ReopenContractSetupProtocol {
        
        /// <remarks/>
        public string ContractIDNum;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public System.DateTime ReopenDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateContractLineItemSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
    public class CreateContractLineItemSetupProtocol {
        
        /// <remarks/>
        public string ContractIDNum;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public System.DateTime StartDate;
        
        /// <remarks/>
        public System.DateTime EndDate;
        
        /// <remarks/>
        public string PartNumber;
        
        /// <remarks/>
        public string PartDomain;
        
        /// <remarks/>
        public string PartRevision;
        
        /// <remarks/>
        public int Quantity;
        
        /// <remarks/>
        public string PriceSchedule;
        
        /// <remarks/>
        public System.Double OverridePrice;
        
        /// <remarks/>
        public System.Double UnitsUsed;
        
        /// <remarks/>
        public string SerialNumber;
        
        /// <remarks/>
        public bool IsTaxable;
        
        /// <remarks/>
        public bool AutoInstall;
        
        /// <remarks/>
        public string Comments;
        
        /// <remarks/>
        public string QuotedSiteIDNum;
        
        /// <remarks/>
        public string ServicedAtSiteIDNum;
        
        /// <remarks/>
        public int ParentLineItemObjid;
        
        /// <remarks/>
        public string POIDNum;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AddPOToScheduleSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
    public class AddPOToScheduleSetupProtocol {
        
        /// <remarks/>
        public string ContractIDNum;
        
        /// <remarks/>
        public string ScheduleIDNum;
        
        /// <remarks/>
        public string POIDNum;
        
        /// <remarks/>
        public string PaymentOption;
        
        /// <remarks/>
        public string PaymentTerms;
        
        /// <remarks/>
        public System.Decimal POAmount;
        
        /// <remarks/>
        public System.DateTime PODate;
        
        /// <remarks/>
        public System.DateTime ExpireDate;
        
        /// <remarks/>
        public string POStatus;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreatePriceInstanceSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
    public class CreatePriceInstanceSetupProtocol {
        
        /// <remarks/>
        public string PartNumber;
        
        /// <remarks/>
        public string PartRevision;
        
        /// <remarks/>
        public string PartDomain;
        
        /// <remarks/>
        public string SupportProgram;
        
        /// <remarks/>
        public string PriceProgram;
        
        /// <remarks/>
        public PriceInstanceType PriceType;
        
        /// <remarks/>
        public int Quantity;
        
        /// <remarks/>
        public System.Double Price;
        
        /// <remarks/>
        public System.DateTime EffectiveDate;
        
        /// <remarks/>
        public System.DateTime ExpireDate;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("PriceInstanceType", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
    public enum PriceInstanceType {
        
        /// <remarks/>
        Fixed,
        
        /// <remarks/>
        PercentOfProduct,
        
        /// <remarks/>
        PercentOfOptionList,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RelateContractItemToSitePartSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
    public class RelateContractItemToSitePartSetupProtocol {
        
        /// <remarks/>
        public int ContractObjid;
        
        /// <remarks/>
        public string PartNumber;
        
        /// <remarks/>
        public string PartDomain;
        
        /// <remarks/>
        public string PartRevision;
        
        /// <remarks/>
        public string SerialNumber;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UnrelateContractItemFromSitePartSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
    public class UnrelateContractItemFromSitePartSetupProtocol {
        
        /// <remarks/>
        public int ContractObjid;
        
        /// <remarks/>
        public string PartNumber;
        
        /// <remarks/>
        public string PartDomain;
        
        /// <remarks/>
        public string PartRevision;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ToolkitResultProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.ContractsToolkitSrv_v1" +
"")]
    public class ToolkitResultProtocol {
        
        /// <remarks/>
        public short ReturnCode;
        
        /// <remarks/>
        public string IDNum;
        
        /// <remarks/>
        public int Objid;
    }
}
