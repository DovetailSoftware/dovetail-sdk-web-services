//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.2032.
// 
namespace FChoice.WebServices.Clarify.Client.Protocols.LogisticsToolkitSrv {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="LogisticsToolkitSrvSoap", Namespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(AdditionalFieldProtocol))]
    public class LogisticsToolkitSrv : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        public AuthenticationHeader AuthenticationHeaderValue;
        
        /// <remarks/>
        public LogisticsToolkitSrv() {
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/OpenContainer", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol OpenContainer(string containerName) {
            object[] results = this.Invoke("OpenContainer", new object[] {
                        containerName});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOpenContainer(string containerName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("OpenContainer", new object[] {
                        containerName}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndOpenContainer(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="OpenContainer1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/OpenContainer2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("OpenContainer2Result")]
        public ToolkitResultProtocol OpenContainer(OpenContainerSetupProtocol setupParam) {
            object[] results = this.Invoke("OpenContainer1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOpenContainer1(OpenContainerSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("OpenContainer1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndOpenContainer1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/SealContainer", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol SealContainer(string containerName) {
            object[] results = this.Invoke("SealContainer", new object[] {
                        containerName});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSealContainer(string containerName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SealContainer", new object[] {
                        containerName}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndSealContainer(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="SealContainer1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/SealContainer2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("SealContainer2Result")]
        public ToolkitResultProtocol SealContainer(SealContainerSetupProtocol setupParam) {
            object[] results = this.Invoke("SealContainer1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSealContainer1(SealContainerSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SealContainer1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndSealContainer1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/CreateSubContainer", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol CreateSubContainer(string containerName, string parentContainerName) {
            object[] results = this.Invoke("CreateSubContainer", new object[] {
                        containerName,
                        parentContainerName});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateSubContainer(string containerName, string parentContainerName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateSubContainer", new object[] {
                        containerName,
                        parentContainerName}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateSubContainer(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateSubContainer1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/CreateSubContainer2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateSubContainer2Result")]
        public ToolkitResultProtocol CreateSubContainer(CreateSubContainerSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateSubContainer1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateSubContainer1(CreateSubContainerSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateSubContainer1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateSubContainer1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/CreateContainer", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol CreateContainer(string containerName, string locationName) {
            object[] results = this.Invoke("CreateContainer", new object[] {
                        containerName,
                        locationName});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateContainer(string containerName, string locationName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateContainer", new object[] {
                        containerName,
                        locationName}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateContainer(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateContainer1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/CreateContainer2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateContainer2Result")]
        public ToolkitResultProtocol CreateContainer(CreateContainerSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateContainer1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateContainer1(CreateContainerSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateContainer1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateContainer1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/UpdatePartRequestDetail", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol UpdatePartRequestDetail(string partRequestDetailIDNum) {
            object[] results = this.Invoke("UpdatePartRequestDetail", new object[] {
                        partRequestDetailIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePartRequestDetail(string partRequestDetailIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePartRequestDetail", new object[] {
                        partRequestDetailIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdatePartRequestDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdatePartRequestDetail1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/UpdatePartRequestDetail2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdatePartRequestDetail2Result")]
        public ToolkitResultProtocol UpdatePartRequestDetail(UpdatePartRequestDetailSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdatePartRequestDetail1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePartRequestDetail1(UpdatePartRequestDetailSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePartRequestDetail1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdatePartRequestDetail1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/UpdatePartRequestHeader", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol UpdatePartRequestHeader(string partRequestHeaderIDNum) {
            object[] results = this.Invoke("UpdatePartRequestHeader", new object[] {
                        partRequestHeaderIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePartRequestHeader(string partRequestHeaderIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePartRequestHeader", new object[] {
                        partRequestHeaderIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdatePartRequestHeader(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdatePartRequestHeader1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/UpdatePartRequestHeader2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdatePartRequestHeader2Result")]
        public ToolkitResultProtocol UpdatePartRequestHeader(UpdatePartRequestHeaderSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdatePartRequestHeader1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePartRequestHeader1(UpdatePartRequestHeaderSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePartRequestHeader1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdatePartRequestHeader1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/CreatePartRequestHeader", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol CreatePartRequestHeader(string contactFirstName, string contactLastName, string contactPhone, string shipToSiteIDNum) {
            object[] results = this.Invoke("CreatePartRequestHeader", new object[] {
                        contactFirstName,
                        contactLastName,
                        contactPhone,
                        shipToSiteIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreatePartRequestHeader(string contactFirstName, string contactLastName, string contactPhone, string shipToSiteIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreatePartRequestHeader", new object[] {
                        contactFirstName,
                        contactLastName,
                        contactPhone,
                        shipToSiteIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreatePartRequestHeader(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreatePartRequestHeader1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/CreatePartRequestHeader2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreatePartRequestHeader2Result")]
        public ToolkitResultProtocol CreatePartRequestHeader(CreatePartRequestHeaderSetupProtocol setupParam) {
            object[] results = this.Invoke("CreatePartRequestHeader1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreatePartRequestHeader1(CreatePartRequestHeaderSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreatePartRequestHeader1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreatePartRequestHeader1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/CreatePartRequestHeaderSubcase", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol CreatePartRequestHeaderSubcase(string contactFirstName, string contactLastName, string contactPhone, string shipToSiteIDNum, string caseIDNum) {
            object[] results = this.Invoke("CreatePartRequestHeaderSubcase", new object[] {
                        contactFirstName,
                        contactLastName,
                        contactPhone,
                        shipToSiteIDNum,
                        caseIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreatePartRequestHeaderSubcase(string contactFirstName, string contactLastName, string contactPhone, string shipToSiteIDNum, string caseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreatePartRequestHeaderSubcase", new object[] {
                        contactFirstName,
                        contactLastName,
                        contactPhone,
                        shipToSiteIDNum,
                        caseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreatePartRequestHeaderSubcase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreatePartRequestHeaderSubcase1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/CreatePartRequestHeaderSubcase2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreatePartRequestHeaderSubcase2Result")]
        public ToolkitResultProtocol CreatePartRequestHeaderSubcase(CreatePartRequestHeaderSubcaseSetupProtocol setupParam) {
            object[] results = this.Invoke("CreatePartRequestHeaderSubcase1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreatePartRequestHeaderSubcase1(CreatePartRequestHeaderSubcaseSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreatePartRequestHeaderSubcase1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreatePartRequestHeaderSubcase1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/CreatePartRequestHeaderCase", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol CreatePartRequestHeaderCase(string contactFirstName, string contactLastName, string contactPhone, string shipToSiteIDNum, string caseIDNum) {
            object[] results = this.Invoke("CreatePartRequestHeaderCase", new object[] {
                        contactFirstName,
                        contactLastName,
                        contactPhone,
                        shipToSiteIDNum,
                        caseIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreatePartRequestHeaderCase(string contactFirstName, string contactLastName, string contactPhone, string shipToSiteIDNum, string caseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreatePartRequestHeaderCase", new object[] {
                        contactFirstName,
                        contactLastName,
                        contactPhone,
                        shipToSiteIDNum,
                        caseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreatePartRequestHeaderCase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreatePartRequestHeaderCase1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/CreatePartRequestHeaderCase2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreatePartRequestHeaderCase2Result")]
        public ToolkitResultProtocol CreatePartRequestHeaderCase(CreatePartRequestHeaderCaseSetupProtocol setupParam) {
            object[] results = this.Invoke("CreatePartRequestHeaderCase1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreatePartRequestHeaderCase1(CreatePartRequestHeaderCaseSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreatePartRequestHeaderCase1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreatePartRequestHeaderCase1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/PartTransfer", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public PartTransferResultProtocol PartTransfer(string partNumber, string partRevision, string partDomain, int quantity, LocationProtocol fromlocation, LocationProtocol tolocation) {
            object[] results = this.Invoke("PartTransfer", new object[] {
                        partNumber,
                        partRevision,
                        partDomain,
                        quantity,
                        fromlocation,
                        tolocation});
            return ((PartTransferResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPartTransfer(string partNumber, string partRevision, string partDomain, int quantity, LocationProtocol fromlocation, LocationProtocol tolocation, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PartTransfer", new object[] {
                        partNumber,
                        partRevision,
                        partDomain,
                        quantity,
                        fromlocation,
                        tolocation}, callback, asyncState);
        }
        
        /// <remarks/>
        public PartTransferResultProtocol EndPartTransfer(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PartTransferResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="PartTransfer1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/PartTransfer2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("PartTransfer2Result")]
        public PartTransferResultProtocol PartTransfer(string partNumber, string partRevision, string partDomain, string serialNumber, LocationProtocol fromlocation, LocationProtocol tolocation) {
            object[] results = this.Invoke("PartTransfer1", new object[] {
                        partNumber,
                        partRevision,
                        partDomain,
                        serialNumber,
                        fromlocation,
                        tolocation});
            return ((PartTransferResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPartTransfer1(string partNumber, string partRevision, string partDomain, string serialNumber, LocationProtocol fromlocation, LocationProtocol tolocation, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PartTransfer1", new object[] {
                        partNumber,
                        partRevision,
                        partDomain,
                        serialNumber,
                        fromlocation,
                        tolocation}, callback, asyncState);
        }
        
        /// <remarks/>
        public PartTransferResultProtocol EndPartTransfer1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PartTransferResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="PartTransfer2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/PartTransfer3", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("PartTransfer3Result")]
        public PartTransferResultProtocol PartTransfer(PartTransferSetupProtocol setupParam) {
            object[] results = this.Invoke("PartTransfer2", new object[] {
                        setupParam});
            return ((PartTransferResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPartTransfer2(PartTransferSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PartTransfer2", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public PartTransferResultProtocol EndPartTransfer2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PartTransferResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/CreatePartRequestDetail", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public CreatePartRequestDetailResultProtocol CreatePartRequestDetail(string partRequestHeaderIDNum, string partNumber, string partDomain, string partRevision, int quantity) {
            object[] results = this.Invoke("CreatePartRequestDetail", new object[] {
                        partRequestHeaderIDNum,
                        partNumber,
                        partDomain,
                        partRevision,
                        quantity});
            return ((CreatePartRequestDetailResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreatePartRequestDetail(string partRequestHeaderIDNum, string partNumber, string partDomain, string partRevision, int quantity, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreatePartRequestDetail", new object[] {
                        partRequestHeaderIDNum,
                        partNumber,
                        partDomain,
                        partRevision,
                        quantity}, callback, asyncState);
        }
        
        /// <remarks/>
        public CreatePartRequestDetailResultProtocol EndCreatePartRequestDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CreatePartRequestDetailResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreatePartRequestDetail1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/CreatePartRequestDetail2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreatePartRequestDetail2Result")]
        public CreatePartRequestDetailResultProtocol CreatePartRequestDetail(string partRequestHeaderIDNum, int quantity, int sitePartObjid) {
            object[] results = this.Invoke("CreatePartRequestDetail1", new object[] {
                        partRequestHeaderIDNum,
                        quantity,
                        sitePartObjid});
            return ((CreatePartRequestDetailResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreatePartRequestDetail1(string partRequestHeaderIDNum, int quantity, int sitePartObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreatePartRequestDetail1", new object[] {
                        partRequestHeaderIDNum,
                        quantity,
                        sitePartObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public CreatePartRequestDetailResultProtocol EndCreatePartRequestDetail1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CreatePartRequestDetailResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreatePartRequestDetail2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/CreatePartRequestDetail3", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreatePartRequestDetail3Result")]
        public CreatePartRequestDetailResultProtocol CreatePartRequestDetail(string partRequestHeaderIDNum, string partNumber, string partDomain, string partRevision, string serialNumber) {
            object[] results = this.Invoke("CreatePartRequestDetail2", new object[] {
                        partRequestHeaderIDNum,
                        partNumber,
                        partDomain,
                        partRevision,
                        serialNumber});
            return ((CreatePartRequestDetailResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreatePartRequestDetail2(string partRequestHeaderIDNum, string partNumber, string partDomain, string partRevision, string serialNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreatePartRequestDetail2", new object[] {
                        partRequestHeaderIDNum,
                        partNumber,
                        partDomain,
                        partRevision,
                        serialNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public CreatePartRequestDetailResultProtocol EndCreatePartRequestDetail2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CreatePartRequestDetailResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreatePartRequestDetail3")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/CreatePartRequestDetail4", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreatePartRequestDetail4Result")]
        public CreatePartRequestDetailResultProtocol CreatePartRequestDetail(string partRequestHeaderIDNum, string serialNumber, int sitePartObjid) {
            object[] results = this.Invoke("CreatePartRequestDetail3", new object[] {
                        partRequestHeaderIDNum,
                        serialNumber,
                        sitePartObjid});
            return ((CreatePartRequestDetailResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreatePartRequestDetail3(string partRequestHeaderIDNum, string serialNumber, int sitePartObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreatePartRequestDetail3", new object[] {
                        partRequestHeaderIDNum,
                        serialNumber,
                        sitePartObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public CreatePartRequestDetailResultProtocol EndCreatePartRequestDetail3(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CreatePartRequestDetailResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreatePartRequestDetail4")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/CreatePartRequestDetail5", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreatePartRequestDetail5Result")]
        public CreatePartRequestDetailResultProtocol CreatePartRequestDetail(CreatePartRequestDetailSetupProtocol setupParam) {
            object[] results = this.Invoke("CreatePartRequestDetail4", new object[] {
                        setupParam});
            return ((CreatePartRequestDetailResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreatePartRequestDetail4(CreatePartRequestDetailSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreatePartRequestDetail4", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public CreatePartRequestDetailResultProtocol EndCreatePartRequestDetail4(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CreatePartRequestDetailResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/UpdatePartStockingLevel", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol UpdatePartStockingLevel(LocationProtocol currentLocation, string queue, string partNumber, string partRevision, string partDomain) {
            object[] results = this.Invoke("UpdatePartStockingLevel", new object[] {
                        currentLocation,
                        queue,
                        partNumber,
                        partRevision,
                        partDomain});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePartStockingLevel(LocationProtocol currentLocation, string queue, string partNumber, string partRevision, string partDomain, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePartStockingLevel", new object[] {
                        currentLocation,
                        queue,
                        partNumber,
                        partRevision,
                        partDomain}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdatePartStockingLevel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdatePartStockingLevel1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/UpdatePartStockingLevel2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdatePartStockingLevel2Result")]
        public ToolkitResultProtocol UpdatePartStockingLevel(UpdatePartStockingLevelSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdatePartStockingLevel1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePartStockingLevel1(UpdatePartStockingLevelSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePartStockingLevel1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdatePartStockingLevel1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/SetPartStockingLevel", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol SetPartStockingLevel(LocationProtocol location, string queue, string partNumber, string partRevision, string partDomain, short partMinimum, short partMaximum, short partReorderLevel, short partReorderQuantity) {
            object[] results = this.Invoke("SetPartStockingLevel", new object[] {
                        location,
                        queue,
                        partNumber,
                        partRevision,
                        partDomain,
                        partMinimum,
                        partMaximum,
                        partReorderLevel,
                        partReorderQuantity});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetPartStockingLevel(LocationProtocol location, string queue, string partNumber, string partRevision, string partDomain, short partMinimum, short partMaximum, short partReorderLevel, short partReorderQuantity, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetPartStockingLevel", new object[] {
                        location,
                        queue,
                        partNumber,
                        partRevision,
                        partDomain,
                        partMinimum,
                        partMaximum,
                        partReorderLevel,
                        partReorderQuantity}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndSetPartStockingLevel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="SetPartStockingLevel1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/SetPartStockingLevel2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("SetPartStockingLevel2Result")]
        public ToolkitResultProtocol SetPartStockingLevel(SetPartStockingLevelSetupProtocol setupParam) {
            object[] results = this.Invoke("SetPartStockingLevel1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetPartStockingLevel1(SetPartStockingLevelSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetPartStockingLevel1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndSetPartStockingLevel1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/UpdateLocationServicingSite", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol UpdateLocationServicingSite(string siteIDNum, string locationName, short locationRank) {
            object[] results = this.Invoke("UpdateLocationServicingSite", new object[] {
                        siteIDNum,
                        locationName,
                        locationRank});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateLocationServicingSite(string siteIDNum, string locationName, short locationRank, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateLocationServicingSite", new object[] {
                        siteIDNum,
                        locationName,
                        locationRank}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateLocationServicingSite(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateLocationServicingSite1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/UpdateLocationServicingSite2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdateLocationServicingSite2Result")]
        public ToolkitResultProtocol UpdateLocationServicingSite(UpdateLocationServicingSiteSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdateLocationServicingSite1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateLocationServicingSite1(UpdateLocationServicingSiteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateLocationServicingSite1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateLocationServicingSite1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/DeleteLocationServicingSite", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol DeleteLocationServicingSite(string siteIDNum, string locationName) {
            object[] results = this.Invoke("DeleteLocationServicingSite", new object[] {
                        siteIDNum,
                        locationName});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteLocationServicingSite(string siteIDNum, string locationName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteLocationServicingSite", new object[] {
                        siteIDNum,
                        locationName}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDeleteLocationServicingSite(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="DeleteLocationServicingSite1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/DeleteLocationServicingSite2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("DeleteLocationServicingSite2Result")]
        public ToolkitResultProtocol DeleteLocationServicingSite(DeleteLocationServicingSiteSetupProtocol setupParam) {
            object[] results = this.Invoke("DeleteLocationServicingSite1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteLocationServicingSite1(DeleteLocationServicingSiteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteLocationServicingSite1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDeleteLocationServicingSite1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/AddLocationServicingSite", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol AddLocationServicingSite(string siteIDNum, string locationName, short locationRank) {
            object[] results = this.Invoke("AddLocationServicingSite", new object[] {
                        siteIDNum,
                        locationName,
                        locationRank});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddLocationServicingSite(string siteIDNum, string locationName, short locationRank, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddLocationServicingSite", new object[] {
                        siteIDNum,
                        locationName,
                        locationRank}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAddLocationServicingSite(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AddLocationServicingSite1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/AddLocationServicingSite2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("AddLocationServicingSite2Result")]
        public ToolkitResultProtocol AddLocationServicingSite(AddLocationServicingSiteSetupProtocol setupParam) {
            object[] results = this.Invoke("AddLocationServicingSite1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddLocationServicingSite1(AddLocationServicingSiteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddLocationServicingSite1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAddLocationServicingSite1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/UpdateInventoryLocation", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol UpdateInventoryLocation(string currentName) {
            object[] results = this.Invoke("UpdateInventoryLocation", new object[] {
                        currentName});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateInventoryLocation(string currentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateInventoryLocation", new object[] {
                        currentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateInventoryLocation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateInventoryLocation1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/UpdateInventoryLocation2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdateInventoryLocation2Result")]
        public ToolkitResultProtocol UpdateInventoryLocation(UpdateInventoryLocationSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdateInventoryLocation1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateInventoryLocation1(UpdateInventoryLocationSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateInventoryLocation1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateInventoryLocation1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/AddInventoryLocation", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol AddInventoryLocation(string locationName, string capitalGLAccount, string siteIDNum, PartAuthorizationLevel partAuthorizationLevel) {
            object[] results = this.Invoke("AddInventoryLocation", new object[] {
                        locationName,
                        capitalGLAccount,
                        siteIDNum,
                        partAuthorizationLevel});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddInventoryLocation(string locationName, string capitalGLAccount, string siteIDNum, PartAuthorizationLevel partAuthorizationLevel, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddInventoryLocation", new object[] {
                        locationName,
                        capitalGLAccount,
                        siteIDNum,
                        partAuthorizationLevel}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAddInventoryLocation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AddInventoryLocation1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/AddInventoryLocation2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("AddInventoryLocation2Result")]
        public ToolkitResultProtocol AddInventoryLocation(AddInventoryLocationSetupProtocol setupParam) {
            object[] results = this.Invoke("AddInventoryLocation1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddInventoryLocation1(AddInventoryLocationSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddInventoryLocation1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAddInventoryLocation1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/UpdateGLAccount", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol UpdateGLAccount(string currentName, string siteIDNum) {
            object[] results = this.Invoke("UpdateGLAccount", new object[] {
                        currentName,
                        siteIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateGLAccount(string currentName, string siteIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateGLAccount", new object[] {
                        currentName,
                        siteIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateGLAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateGLAccount1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/UpdateGLAccount2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdateGLAccount2Result")]
        public ToolkitResultProtocol UpdateGLAccount(UpdateGLAccountSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdateGLAccount1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateGLAccount1(UpdateGLAccountSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateGLAccount1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateGLAccount1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/AddGLAccount", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol AddGLAccount(string accountName, string siteIDNum) {
            object[] results = this.Invoke("AddGLAccount", new object[] {
                        accountName,
                        siteIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddGLAccount(string accountName, string siteIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddGLAccount", new object[] {
                        accountName,
                        siteIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAddGLAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AddGLAccount1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/AddGLAccount2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("AddGLAccount2Result")]
        public ToolkitResultProtocol AddGLAccount(AddGLAccountSetupProtocol setupParam) {
            object[] results = this.Invoke("AddGLAccount1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddGLAccount1(AddGLAccountSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddGLAccount1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAddGLAccount1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/UpdateInventoryBin", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol UpdateInventoryBin(LocationProtocol currentLocation, string newBinName) {
            object[] results = this.Invoke("UpdateInventoryBin", new object[] {
                        currentLocation,
                        newBinName});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateInventoryBin(LocationProtocol currentLocation, string newBinName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateInventoryBin", new object[] {
                        currentLocation,
                        newBinName}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateInventoryBin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateInventoryBin1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/UpdateInventoryBin2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdateInventoryBin2Result")]
        public ToolkitResultProtocol UpdateInventoryBin(UpdateInventoryBinSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdateInventoryBin1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateInventoryBin1(UpdateInventoryBinSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateInventoryBin1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateInventoryBin1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/AddInventoryBin", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol AddInventoryBin(LocationProtocol location) {
            object[] results = this.Invoke("AddInventoryBin", new object[] {
                        location});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddInventoryBin(LocationProtocol location, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddInventoryBin", new object[] {
                        location}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAddInventoryBin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AddInventoryBin1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/AddInventoryBin2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("AddInventoryBin2Result")]
        public ToolkitResultProtocol AddInventoryBin(AddInventoryBinSetupProtocol setupParam) {
            object[] results = this.Invoke("AddInventoryBin1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddInventoryBin1(AddInventoryBinSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddInventoryBin1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAddInventoryBin1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/YankPartRequest", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol YankPartRequest(string partRequestDetailIDNum) {
            object[] results = this.Invoke("YankPartRequest", new object[] {
                        partRequestDetailIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginYankPartRequest(string partRequestDetailIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("YankPartRequest", new object[] {
                        partRequestDetailIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndYankPartRequest(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="YankPartRequest1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/YankPartRequest2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("YankPartRequest2Result")]
        public ToolkitResultProtocol YankPartRequest(YankPartRequestSetupProtocol setupParam) {
            object[] results = this.Invoke("YankPartRequest1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginYankPartRequest1(YankPartRequestSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("YankPartRequest1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndYankPartRequest1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/Ship", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol Ship(string partRequestDetailIDNum) {
            object[] results = this.Invoke("Ship", new object[] {
                        partRequestDetailIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginShip(string partRequestDetailIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Ship", new object[] {
                        partRequestDetailIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndShip(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="Ship1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/Ship2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("Ship2Result")]
        public ToolkitResultProtocol Ship(ShipSetupProtocol setupParam) {
            object[] results = this.Invoke("Ship1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginShip1(ShipSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Ship1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndShip1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/ReopenPartRequest", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol ReopenPartRequest(string partRequestDetailIDNum) {
            object[] results = this.Invoke("ReopenPartRequest", new object[] {
                        partRequestDetailIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReopenPartRequest(string partRequestDetailIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReopenPartRequest", new object[] {
                        partRequestDetailIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndReopenPartRequest(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ReopenPartRequest1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/ReopenPartRequest2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("ReopenPartRequest2Result")]
        public ToolkitResultProtocol ReopenPartRequest(ReopenPartRequestSetupProtocol setupParam) {
            object[] results = this.Invoke("ReopenPartRequest1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReopenPartRequest1(ReopenPartRequestSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReopenPartRequest1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndReopenPartRequest1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/RejectPartRequest", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol RejectPartRequest(string partRequestDetailIDNum) {
            object[] results = this.Invoke("RejectPartRequest", new object[] {
                        partRequestDetailIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRejectPartRequest(string partRequestDetailIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RejectPartRequest", new object[] {
                        partRequestDetailIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndRejectPartRequest(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="RejectPartRequest1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/RejectPartRequest2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("RejectPartRequest2Result")]
        public ToolkitResultProtocol RejectPartRequest(RejectPartRequestSetupProtocol setupParam) {
            object[] results = this.Invoke("RejectPartRequest1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRejectPartRequest1(RejectPartRequestSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RejectPartRequest1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndRejectPartRequest1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/MovePartRequest", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol MovePartRequest(string partRequestDetailIDNum, string newWipBin) {
            object[] results = this.Invoke("MovePartRequest", new object[] {
                        partRequestDetailIDNum,
                        newWipBin});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMovePartRequest(string partRequestDetailIDNum, string newWipBin, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MovePartRequest", new object[] {
                        partRequestDetailIDNum,
                        newWipBin}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndMovePartRequest(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="MovePartRequest1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/MovePartRequest2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("MovePartRequest2Result")]
        public ToolkitResultProtocol MovePartRequest(MovePartRequestSetupProtocol setupParam) {
            object[] results = this.Invoke("MovePartRequest1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMovePartRequest1(MovePartRequestSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MovePartRequest1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndMovePartRequest1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/GetLocationsServicingSite", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public GetLocationsServicingSiteResultProtocol GetLocationsServicingSite(string siteIDNum) {
            object[] results = this.Invoke("GetLocationsServicingSite", new object[] {
                        siteIDNum});
            return ((GetLocationsServicingSiteResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLocationsServicingSite(string siteIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLocationsServicingSite", new object[] {
                        siteIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public GetLocationsServicingSiteResultProtocol EndGetLocationsServicingSite(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GetLocationsServicingSiteResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="GetLocationsServicingSite1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/GetLocationsServicingSite2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("GetLocationsServicingSite2Result")]
        public GetLocationsServicingSiteResultProtocol GetLocationsServicingSite(GetLocationsServicingSiteSetupProtocol setupParam) {
            object[] results = this.Invoke("GetLocationsServicingSite1", new object[] {
                        setupParam});
            return ((GetLocationsServicingSiteResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLocationsServicingSite1(GetLocationsServicingSiteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLocationsServicingSite1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public GetLocationsServicingSiteResultProtocol EndGetLocationsServicingSite1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GetLocationsServicingSiteResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/GetAlternateParts", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public GetAlternatePartsResultProtocol GetAlternateParts(string partNumber, string partDomain, string partRevision) {
            object[] results = this.Invoke("GetAlternateParts", new object[] {
                        partNumber,
                        partDomain,
                        partRevision});
            return ((GetAlternatePartsResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAlternateParts(string partNumber, string partDomain, string partRevision, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAlternateParts", new object[] {
                        partNumber,
                        partDomain,
                        partRevision}, callback, asyncState);
        }
        
        /// <remarks/>
        public GetAlternatePartsResultProtocol EndGetAlternateParts(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GetAlternatePartsResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="GetAlternateParts1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/GetAlternateParts2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("GetAlternateParts2Result")]
        public GetAlternatePartsResultProtocol GetAlternateParts(GetAlternatePartsSetupProtocol setupParam) {
            object[] results = this.Invoke("GetAlternateParts1", new object[] {
                        setupParam});
            return ((GetAlternatePartsResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAlternateParts1(GetAlternatePartsSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAlternateParts1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public GetAlternatePartsResultProtocol EndGetAlternateParts1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GetAlternatePartsResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/DeleteAlternatePart", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol DeleteAlternatePart(string partNumber, string partRevision, string partDomain, string alternatePartNumber, string alternatePartRevision, string alternatePartDomain) {
            object[] results = this.Invoke("DeleteAlternatePart", new object[] {
                        partNumber,
                        partRevision,
                        partDomain,
                        alternatePartNumber,
                        alternatePartRevision,
                        alternatePartDomain});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteAlternatePart(string partNumber, string partRevision, string partDomain, string alternatePartNumber, string alternatePartRevision, string alternatePartDomain, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteAlternatePart", new object[] {
                        partNumber,
                        partRevision,
                        partDomain,
                        alternatePartNumber,
                        alternatePartRevision,
                        alternatePartDomain}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDeleteAlternatePart(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="DeleteAlternatePart1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/DeleteAlternatePart2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("DeleteAlternatePart2Result")]
        public ToolkitResultProtocol DeleteAlternatePart(DeleteAlternatePartSetupProtocol setupParam) {
            object[] results = this.Invoke("DeleteAlternatePart1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteAlternatePart1(DeleteAlternatePartSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteAlternatePart1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDeleteAlternatePart1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/AddAlternatePart", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol AddAlternatePart(string partNumber, string partRevision, string partDomain, string alternatePartNumber, string alternatePartRevision, string alternatePartDomain) {
            object[] results = this.Invoke("AddAlternatePart", new object[] {
                        partNumber,
                        partRevision,
                        partDomain,
                        alternatePartNumber,
                        alternatePartRevision,
                        alternatePartDomain});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddAlternatePart(string partNumber, string partRevision, string partDomain, string alternatePartNumber, string alternatePartRevision, string alternatePartDomain, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddAlternatePart", new object[] {
                        partNumber,
                        partRevision,
                        partDomain,
                        alternatePartNumber,
                        alternatePartRevision,
                        alternatePartDomain}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAddAlternatePart(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AddAlternatePart1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/AddAlternatePart2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("AddAlternatePart2Result")]
        public ToolkitResultProtocol AddAlternatePart(AddAlternatePartSetupProtocol setupParam) {
            object[] results = this.Invoke("AddAlternatePart1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddAlternatePart1(AddAlternatePartSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddAlternatePart1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAddAlternatePart1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/ForwardPartRequest", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol ForwardPartRequest(string partRequestDetailIDNum, string newQueue) {
            object[] results = this.Invoke("ForwardPartRequest", new object[] {
                        partRequestDetailIDNum,
                        newQueue});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginForwardPartRequest(string partRequestDetailIDNum, string newQueue, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ForwardPartRequest", new object[] {
                        partRequestDetailIDNum,
                        newQueue}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndForwardPartRequest(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ForwardPartRequest1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/ForwardPartRequest2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("ForwardPartRequest2Result")]
        public ToolkitResultProtocol ForwardPartRequest(ForwardPartRequestSetupProtocol setupParam) {
            object[] results = this.Invoke("ForwardPartRequest1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginForwardPartRequest1(ForwardPartRequestSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ForwardPartRequest1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndForwardPartRequest1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/DispatchPartRequest", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol DispatchPartRequest(string partRequestDetailIDNum, string queue) {
            object[] results = this.Invoke("DispatchPartRequest", new object[] {
                        partRequestDetailIDNum,
                        queue});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDispatchPartRequest(string partRequestDetailIDNum, string queue, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DispatchPartRequest", new object[] {
                        partRequestDetailIDNum,
                        queue}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDispatchPartRequest(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="DispatchPartRequest1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/DispatchPartRequest2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("DispatchPartRequest2Result")]
        public ToolkitResultProtocol DispatchPartRequest(DispatchPartRequestSetupProtocol setupParam) {
            object[] results = this.Invoke("DispatchPartRequest1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDispatchPartRequest1(DispatchPartRequestSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DispatchPartRequest1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDispatchPartRequest1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/ClosePartRequest", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol ClosePartRequest(string partRequestDetailIDNum) {
            object[] results = this.Invoke("ClosePartRequest", new object[] {
                        partRequestDetailIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginClosePartRequest(string partRequestDetailIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ClosePartRequest", new object[] {
                        partRequestDetailIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndClosePartRequest(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ClosePartRequest1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/ClosePartRequest2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("ClosePartRequest2Result")]
        public ToolkitResultProtocol ClosePartRequest(ClosePartRequestSetupProtocol setupParam) {
            object[] results = this.Invoke("ClosePartRequest1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginClosePartRequest1(ClosePartRequestSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ClosePartRequest1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndClosePartRequest1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/ChangePartRequestStatus", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol ChangePartRequestStatus(string partRequestDetailIDNum) {
            object[] results = this.Invoke("ChangePartRequestStatus", new object[] {
                        partRequestDetailIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangePartRequestStatus(string partRequestDetailIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangePartRequestStatus", new object[] {
                        partRequestDetailIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndChangePartRequestStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ChangePartRequestStatus1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/ChangePartRequestStatus2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("ChangePartRequestStatus2Result")]
        public ToolkitResultProtocol ChangePartRequestStatus(ChangePartRequestStatusSetupProtocol setupParam) {
            object[] results = this.Invoke("ChangePartRequestStatus1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangePartRequestStatus1(ChangePartRequestStatusSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangePartRequestStatus1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndChangePartRequestStatus1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/AssignPartRequest", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol AssignPartRequest(string partRequestDetailIDNum) {
            object[] results = this.Invoke("AssignPartRequest", new object[] {
                        partRequestDetailIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAssignPartRequest(string partRequestDetailIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AssignPartRequest", new object[] {
                        partRequestDetailIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAssignPartRequest(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AssignPartRequest1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/AssignPartRequest2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("AssignPartRequest2Result")]
        public ToolkitResultProtocol AssignPartRequest(AssignPartRequestSetupProtocol setupParam) {
            object[] results = this.Invoke("AssignPartRequest1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAssignPartRequest1(AssignPartRequestSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AssignPartRequest1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAssignPartRequest1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/AcceptPartRequest", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol AcceptPartRequest(string partRequestDetailIDNum) {
            object[] results = this.Invoke("AcceptPartRequest", new object[] {
                        partRequestDetailIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAcceptPartRequest(string partRequestDetailIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AcceptPartRequest", new object[] {
                        partRequestDetailIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAcceptPartRequest(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AcceptPartRequest1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/AcceptPartRequest2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("AcceptPartRequest2Result")]
        public ToolkitResultProtocol AcceptPartRequest(AcceptPartRequestSetupProtocol setupParam) {
            object[] results = this.Invoke("AcceptPartRequest1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAcceptPartRequest1(AcceptPartRequestSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AcceptPartRequest1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAcceptPartRequest1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/Pick", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public PickResultProtocol Pick(string partRequestDetailIDNum) {
            object[] results = this.Invoke("Pick", new object[] {
                        partRequestDetailIDNum});
            return ((PickResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPick(string partRequestDetailIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Pick", new object[] {
                        partRequestDetailIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public PickResultProtocol EndPick(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PickResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="Pick1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/Pick2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("Pick2Result")]
        public PickResultProtocol Pick(string partRequestDetailIDNum, string[] serialNumbers) {
            object[] results = this.Invoke("Pick1", new object[] {
                        partRequestDetailIDNum,
                        serialNumbers});
            return ((PickResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPick1(string partRequestDetailIDNum, string[] serialNumbers, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Pick1", new object[] {
                        partRequestDetailIDNum,
                        serialNumbers}, callback, asyncState);
        }
        
        /// <remarks/>
        public PickResultProtocol EndPick1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PickResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="Pick2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/Pick3", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("Pick3Result")]
        public PickResultProtocol Pick(string partRequestDetailIDNum, bool useTransitions) {
            object[] results = this.Invoke("Pick2", new object[] {
                        partRequestDetailIDNum,
                        useTransitions});
            return ((PickResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPick2(string partRequestDetailIDNum, bool useTransitions, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Pick2", new object[] {
                        partRequestDetailIDNum,
                        useTransitions}, callback, asyncState);
        }
        
        /// <remarks/>
        public PickResultProtocol EndPick2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PickResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="Pick3")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/Pick4", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("Pick4Result")]
        public PickResultProtocol Pick(string partRequestDetailIDNum, bool useTransitions, string[] serialNumbers) {
            object[] results = this.Invoke("Pick3", new object[] {
                        partRequestDetailIDNum,
                        useTransitions,
                        serialNumbers});
            return ((PickResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPick3(string partRequestDetailIDNum, bool useTransitions, string[] serialNumbers, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Pick3", new object[] {
                        partRequestDetailIDNum,
                        useTransitions,
                        serialNumbers}, callback, asyncState);
        }
        
        /// <remarks/>
        public PickResultProtocol EndPick3(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PickResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="Pick4")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/Pick5", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("Pick5Result")]
        public PickResultProtocol Pick(PickSetupProtocol setupParam) {
            object[] results = this.Invoke("Pick4", new object[] {
                        setupParam});
            return ((PickResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPick4(PickSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Pick4", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public PickResultProtocol EndPick4(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PickResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/Unpick", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol Unpick(string partRequestDetailIDNum, LocationProtocol location) {
            object[] results = this.Invoke("Unpick", new object[] {
                        partRequestDetailIDNum,
                        location});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnpick(string partRequestDetailIDNum, LocationProtocol location, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Unpick", new object[] {
                        partRequestDetailIDNum,
                        location}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUnpick(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="Unpick1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/Unpick2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("Unpick2Result")]
        public ToolkitResultProtocol Unpick(string partRequestDetailIDNum, LocationProtocol location, string[] serialNumbers) {
            object[] results = this.Invoke("Unpick1", new object[] {
                        partRequestDetailIDNum,
                        location,
                        serialNumbers});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnpick1(string partRequestDetailIDNum, LocationProtocol location, string[] serialNumbers, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Unpick1", new object[] {
                        partRequestDetailIDNum,
                        location,
                        serialNumbers}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUnpick1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="Unpick2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/Unpick3", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("Unpick3Result")]
        public ToolkitResultProtocol Unpick(string partRequestDetailIDNum, LocationProtocol location, bool useTransitions) {
            object[] results = this.Invoke("Unpick2", new object[] {
                        partRequestDetailIDNum,
                        location,
                        useTransitions});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnpick2(string partRequestDetailIDNum, LocationProtocol location, bool useTransitions, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Unpick2", new object[] {
                        partRequestDetailIDNum,
                        location,
                        useTransitions}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUnpick2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="Unpick3")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/Unpick4", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("Unpick4Result")]
        public ToolkitResultProtocol Unpick(string partRequestDetailIDNum, LocationProtocol location, bool useTransitions, string[] serialNumbers) {
            object[] results = this.Invoke("Unpick3", new object[] {
                        partRequestDetailIDNum,
                        location,
                        useTransitions,
                        serialNumbers});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnpick3(string partRequestDetailIDNum, LocationProtocol location, bool useTransitions, string[] serialNumbers, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Unpick3", new object[] {
                        partRequestDetailIDNum,
                        location,
                        useTransitions,
                        serialNumbers}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUnpick3(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="Unpick4")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/Unpick5", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("Unpick5Result")]
        public ToolkitResultProtocol Unpick(UnpickSetupProtocol setupParam) {
            object[] results = this.Invoke("Unpick4", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnpick4(UnpickSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Unpick4", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUnpick4(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/BackorderPartRequest", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol BackorderPartRequest(string partRequestDetailIDNum, System.DateTime expectedDate, int quantity) {
            object[] results = this.Invoke("BackorderPartRequest", new object[] {
                        partRequestDetailIDNum,
                        expectedDate,
                        quantity});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBackorderPartRequest(string partRequestDetailIDNum, System.DateTime expectedDate, int quantity, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BackorderPartRequest", new object[] {
                        partRequestDetailIDNum,
                        expectedDate,
                        quantity}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndBackorderPartRequest(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="BackorderPartRequest1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/BackorderPartRequest2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("BackorderPartRequest2Result")]
        public ToolkitResultProtocol BackorderPartRequest(string partRequestDetailIDNum, System.DateTime expectedDate, string serialNumber) {
            object[] results = this.Invoke("BackorderPartRequest1", new object[] {
                        partRequestDetailIDNum,
                        expectedDate,
                        serialNumber});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBackorderPartRequest1(string partRequestDetailIDNum, System.DateTime expectedDate, string serialNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BackorderPartRequest1", new object[] {
                        partRequestDetailIDNum,
                        expectedDate,
                        serialNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndBackorderPartRequest1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="BackorderPartRequest2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/BackorderPartRequest3", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("BackorderPartRequest3Result")]
        public ToolkitResultProtocol BackorderPartRequest(string partRequestDetailIDNum, System.DateTime expectedDate, bool useTransitions, int quantity) {
            object[] results = this.Invoke("BackorderPartRequest2", new object[] {
                        partRequestDetailIDNum,
                        expectedDate,
                        useTransitions,
                        quantity});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBackorderPartRequest2(string partRequestDetailIDNum, System.DateTime expectedDate, bool useTransitions, int quantity, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BackorderPartRequest2", new object[] {
                        partRequestDetailIDNum,
                        expectedDate,
                        useTransitions,
                        quantity}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndBackorderPartRequest2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="BackorderPartRequest3")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/BackorderPartRequest4", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("BackorderPartRequest4Result")]
        public ToolkitResultProtocol BackorderPartRequest(string partRequestDetailIDNum, System.DateTime expectedDate, bool useTransitions, string serialNumber) {
            object[] results = this.Invoke("BackorderPartRequest3", new object[] {
                        partRequestDetailIDNum,
                        expectedDate,
                        useTransitions,
                        serialNumber});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBackorderPartRequest3(string partRequestDetailIDNum, System.DateTime expectedDate, bool useTransitions, string serialNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BackorderPartRequest3", new object[] {
                        partRequestDetailIDNum,
                        expectedDate,
                        useTransitions,
                        serialNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndBackorderPartRequest3(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="BackorderPartRequest4")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/BackorderPartRequest5", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("BackorderPartRequest5Result")]
        public ToolkitResultProtocol BackorderPartRequest(BackorderPartRequestSetupProtocol setupParam) {
            object[] results = this.Invoke("BackorderPartRequest4", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBackorderPartRequest4(BackorderPartRequestSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BackorderPartRequest4", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndBackorderPartRequest4(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/FulfillPartRequest", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol FulfillPartRequest(string partRequestDetailIDNum, int quantity) {
            object[] results = this.Invoke("FulfillPartRequest", new object[] {
                        partRequestDetailIDNum,
                        quantity});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFulfillPartRequest(string partRequestDetailIDNum, int quantity, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FulfillPartRequest", new object[] {
                        partRequestDetailIDNum,
                        quantity}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndFulfillPartRequest(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="FulfillPartRequest1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/FulfillPartRequest2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("FulfillPartRequest2Result")]
        public ToolkitResultProtocol FulfillPartRequest(string partRequestDetailIDNum, string serialNumber) {
            object[] results = this.Invoke("FulfillPartRequest1", new object[] {
                        partRequestDetailIDNum,
                        serialNumber});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFulfillPartRequest1(string partRequestDetailIDNum, string serialNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FulfillPartRequest1", new object[] {
                        partRequestDetailIDNum,
                        serialNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndFulfillPartRequest1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="FulfillPartRequest2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/FulfillPartRequest3", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("FulfillPartRequest3Result")]
        public ToolkitResultProtocol FulfillPartRequest(string partRequestDetailIDNum, bool useTransitions, int quantity) {
            object[] results = this.Invoke("FulfillPartRequest2", new object[] {
                        partRequestDetailIDNum,
                        useTransitions,
                        quantity});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFulfillPartRequest2(string partRequestDetailIDNum, bool useTransitions, int quantity, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FulfillPartRequest2", new object[] {
                        partRequestDetailIDNum,
                        useTransitions,
                        quantity}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndFulfillPartRequest2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="FulfillPartRequest3")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/FulfillPartRequest4", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("FulfillPartRequest4Result")]
        public ToolkitResultProtocol FulfillPartRequest(string partRequestDetailIDNum, bool useTransitions, string serialNumber) {
            object[] results = this.Invoke("FulfillPartRequest3", new object[] {
                        partRequestDetailIDNum,
                        useTransitions,
                        serialNumber});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFulfillPartRequest3(string partRequestDetailIDNum, bool useTransitions, string serialNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FulfillPartRequest3", new object[] {
                        partRequestDetailIDNum,
                        useTransitions,
                        serialNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndFulfillPartRequest3(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="FulfillPartRequest4")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/FulfillPartRequest5", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("FulfillPartRequest5Result")]
        public ToolkitResultProtocol FulfillPartRequest(FulfillPartRequestSetupProtocol setupParam) {
            object[] results = this.Invoke("FulfillPartRequest4", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFulfillPartRequest4(FulfillPartRequestSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FulfillPartRequest4", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndFulfillPartRequest4(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/ReceivePartRequest", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol ReceivePartRequest(string partRequestDetailIDNum, int quantity, LocationProtocol toLocation) {
            object[] results = this.Invoke("ReceivePartRequest", new object[] {
                        partRequestDetailIDNum,
                        quantity,
                        toLocation});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReceivePartRequest(string partRequestDetailIDNum, int quantity, LocationProtocol toLocation, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReceivePartRequest", new object[] {
                        partRequestDetailIDNum,
                        quantity,
                        toLocation}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndReceivePartRequest(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ReceivePartRequest1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/ReceivePartRequest2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("ReceivePartRequest2Result")]
        public ToolkitResultProtocol ReceivePartRequest(string partRequestDetailIDNum, string serialNumber, LocationProtocol toLocation) {
            object[] results = this.Invoke("ReceivePartRequest1", new object[] {
                        partRequestDetailIDNum,
                        serialNumber,
                        toLocation});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReceivePartRequest1(string partRequestDetailIDNum, string serialNumber, LocationProtocol toLocation, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReceivePartRequest1", new object[] {
                        partRequestDetailIDNum,
                        serialNumber,
                        toLocation}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndReceivePartRequest1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ReceivePartRequest2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/ReceivePartRequest3", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("ReceivePartRequest3Result")]
        public ToolkitResultProtocol ReceivePartRequest(string partRequestDetailIDNum, int quantity, LocationProtocol toLocation, bool useTransitions) {
            object[] results = this.Invoke("ReceivePartRequest2", new object[] {
                        partRequestDetailIDNum,
                        quantity,
                        toLocation,
                        useTransitions});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReceivePartRequest2(string partRequestDetailIDNum, int quantity, LocationProtocol toLocation, bool useTransitions, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReceivePartRequest2", new object[] {
                        partRequestDetailIDNum,
                        quantity,
                        toLocation,
                        useTransitions}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndReceivePartRequest2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ReceivePartRequest3")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/ReceivePartRequest4", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("ReceivePartRequest4Result")]
        public ToolkitResultProtocol ReceivePartRequest(string partRequestDetailIDNum, string serialNumber, LocationProtocol toLocation, bool useTransitions) {
            object[] results = this.Invoke("ReceivePartRequest3", new object[] {
                        partRequestDetailIDNum,
                        serialNumber,
                        toLocation,
                        useTransitions});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReceivePartRequest3(string partRequestDetailIDNum, string serialNumber, LocationProtocol toLocation, bool useTransitions, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReceivePartRequest3", new object[] {
                        partRequestDetailIDNum,
                        serialNumber,
                        toLocation,
                        useTransitions}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndReceivePartRequest3(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ReceivePartRequest4")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/ReceivePartRequest5", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("ReceivePartRequest5Result")]
        public ToolkitResultProtocol ReceivePartRequest(ReceivePartRequestSetupProtocol setupParam) {
            object[] results = this.Invoke("ReceivePartRequest4", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReceivePartRequest4(ReceivePartRequestSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReceivePartRequest4", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndReceivePartRequest4(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/SetLogisticsTransition", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        public ToolkitResultProtocol SetLogisticsTransition(PartRequestType partRequestType, PartRequestCondition startCondition, PartRequestCondition endCondition, string[] privilegeClasses) {
            object[] results = this.Invoke("SetLogisticsTransition", new object[] {
                        partRequestType,
                        startCondition,
                        endCondition,
                        privilegeClasses});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetLogisticsTransition(PartRequestType partRequestType, PartRequestCondition startCondition, PartRequestCondition endCondition, string[] privilegeClasses, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetLogisticsTransition", new object[] {
                        partRequestType,
                        startCondition,
                        endCondition,
                        privilegeClasses}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndSetLogisticsTransition(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="SetLogisticsTransition1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"/SetLogisticsTransition2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
        [return: System.Xml.Serialization.SoapElementAttribute("SetLogisticsTransition2Result")]
        public ToolkitResultProtocol SetLogisticsTransition(SetLogisticsTransitionSetupProtocol setupParam) {
            object[] results = this.Invoke("SetLogisticsTransition1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetLogisticsTransition1(SetLogisticsTransitionSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetLogisticsTransition1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndSetLogisticsTransition1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AuthenticationHeader", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class AuthenticationHeader : SoapHeader {
        
        /// <remarks/>
        public string SessionID;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("SetLogisticsTransitionSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class SetLogisticsTransitionSetupProtocol {
        
        /// <remarks/>
        public PartRequestType PartRequestType;
        
        /// <remarks/>
        public PartRequestCondition StartCondition;
        
        /// <remarks/>
        public PartRequestCondition EndCondition;
        
        /// <remarks/>
        public string[] PrivilegeClasses;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("PartRequestType", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public enum PartRequestType {
        
        /// <remarks/>
        PleaseSpecify,
        
        /// <remarks/>
        AdvanceExchange,
        
        /// <remarks/>
        DepotRepair,
        
        /// <remarks/>
        ReturnForCredit,
        
        /// <remarks/>
        Replenishment,
        
        /// <remarks/>
        Order,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("PartRequestCondition", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public enum PartRequestCondition {
        
        /// <remarks/>
        RequestOpen,
        
        /// <remarks/>
        Picked,
        
        /// <remarks/>
        Unpicked,
        
        /// <remarks/>
        Fulfilled,
        
        /// <remarks/>
        Shipped,
        
        /// <remarks/>
        Received,
        
        /// <remarks/>
        Backordered,
        
        /// <remarks/>
        PartUsed,
        
        /// <remarks/>
        UpdateInventory,
        
        /// <remarks/>
        RequestClosed,
        
        /// <remarks/>
        RequestReopened,
        
        /// <remarks/>
        InRepair,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ReceivePartRequestSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class ReceivePartRequestSetupProtocol {
        
        /// <remarks/>
        public string PartRequestDetailIDNum;
        
        /// <remarks/>
        public bool FromGood;
        
        /// <remarks/>
        public bool ToGood;
        
        /// <remarks/>
        public int Quantity;
        
        /// <remarks/>
        public string SerialNumber;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public string CarrierName;
        
        /// <remarks/>
        public string WaybillName;
        
        /// <remarks/>
        public bool PossibleDamage;
        
        /// <remarks/>
        public bool NotProperlyPacked;
        
        /// <remarks/>
        public bool RouteToTest;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime ReceiveDate;
        
        /// <remarks/>
        public bool AutoClose;
        
        /// <remarks/>
        public bool UseTransitions;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public LocationProtocol ToLocation;
        
        /// <remarks/>
        public LocationProtocol FromLocation;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LocationProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class LocationProtocol {
        
        /// <remarks/>
        public bool IsPrimaryBinSuggestion;
        
        /// <remarks/>
        public string LocationName;
        
        /// <remarks/>
        public string BinName;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("FulfillPartRequestSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class FulfillPartRequestSetupProtocol {
        
        /// <remarks/>
        public string PartRequestDetailIDNum;
        
        /// <remarks/>
        public int Quantity;
        
        /// <remarks/>
        public bool FromGood;
        
        /// <remarks/>
        public bool ToGood;
        
        /// <remarks/>
        public string SerialNumber;
        
        /// <remarks/>
        public string NewStatus;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime FulfillDate;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public bool UseTransitions;
        
        /// <remarks/>
        public LocationProtocol ToLocation;
        
        /// <remarks/>
        public LocationProtocol FromLocation;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("BackorderPartRequestSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class BackorderPartRequestSetupProtocol {
        
        /// <remarks/>
        public string PartRequestDetailIDNum;
        
        /// <remarks/>
        public int Quantity;
        
        /// <remarks/>
        public bool FromGood;
        
        /// <remarks/>
        public bool ToGood;
        
        /// <remarks/>
        public string SerialNumber;
        
        /// <remarks/>
        public string NewStatus;
        
        /// <remarks/>
        public System.DateTime ExpectedDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public bool UseTransitions;
        
        /// <remarks/>
        public LocationProtocol ToLocation;
        
        /// <remarks/>
        public LocationProtocol FromLocation;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UnpickSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class UnpickSetupProtocol {
        
        /// <remarks/>
        public string PartRequestDetailIDNum;
        
        /// <remarks/>
        public bool UseGood;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime UnpickDate;
        
        /// <remarks/>
        public string[] SerialNumbers;
        
        /// <remarks/>
        public bool UseTransitions;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public LocationProtocol Location;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("PickSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class PickSetupProtocol {
        
        /// <remarks/>
        public string PartRequestDetailIDNum;
        
        /// <remarks/>
        public LocationProtocol[] Locations;
        
        /// <remarks/>
        public bool UseGood;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime PickDate;
        
        /// <remarks/>
        public string NewStatus;
        
        /// <remarks/>
        public string[] SerialNumbers;
        
        /// <remarks/>
        public bool UseTransitions;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("PickResultProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class PickResultProtocol {
        
        /// <remarks/>
        public int TotalPicked;
        
        /// <remarks/>
        public short ReturnCode;
        
        /// <remarks/>
        public string IDNum;
        
        /// <remarks/>
        public int Objid;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AcceptPartRequestSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class AcceptPartRequestSetupProtocol {
        
        /// <remarks/>
        public string PartRequestDetailIDNum;
        
        /// <remarks/>
        public System.DateTime AcceptDate;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AssignPartRequestSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class AssignPartRequestSetupProtocol {
        
        /// <remarks/>
        public string PartRequestDetailIDNum;
        
        /// <remarks/>
        public string NewUser;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public System.DateTime AssignDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ChangePartRequestStatusSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class ChangePartRequestStatusSetupProtocol {
        
        /// <remarks/>
        public string PartRequestDetailIDNum;
        
        /// <remarks/>
        public string NewStatus;
        
        /// <remarks/>
        public System.DateTime ChangeDate;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ClosePartRequestSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class ClosePartRequestSetupProtocol {
        
        /// <remarks/>
        public string PartRequestDetailIDNum;
        
        /// <remarks/>
        public string NewStatus;
        
        /// <remarks/>
        public System.DateTime CloseDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("DispatchPartRequestSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class DispatchPartRequestSetupProtocol {
        
        /// <remarks/>
        public string PartRequestDetailIDNum;
        
        /// <remarks/>
        public string Queue;
        
        /// <remarks/>
        public System.DateTime DispatchDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ForwardPartRequestSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class ForwardPartRequestSetupProtocol {
        
        /// <remarks/>
        public string PartRequestDetailIDNum;
        
        /// <remarks/>
        public string NewQueue;
        
        /// <remarks/>
        public System.DateTime ForwardDate;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AddAlternatePartSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class AddAlternatePartSetupProtocol {
        
        /// <remarks/>
        public string PartNumber;
        
        /// <remarks/>
        public string PartRevision;
        
        /// <remarks/>
        public string PartDomain;
        
        /// <remarks/>
        public string AlternatePartNumber;
        
        /// <remarks/>
        public string AlternatePartRevision;
        
        /// <remarks/>
        public string AlternatePartDomain;
        
        /// <remarks/>
        public bool IsReciprocal;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("DeleteAlternatePartSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class DeleteAlternatePartSetupProtocol {
        
        /// <remarks/>
        public string PartNumber;
        
        /// <remarks/>
        public string PartRevision;
        
        /// <remarks/>
        public string PartDomain;
        
        /// <remarks/>
        public string AlternatePartNumber;
        
        /// <remarks/>
        public string AlternatePartRevision;
        
        /// <remarks/>
        public string AlternatePartDomain;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("GetAlternatePartsSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class GetAlternatePartsSetupProtocol {
        
        /// <remarks/>
        public string PartNumber;
        
        /// <remarks/>
        public string PartDomain;
        
        /// <remarks/>
        public string PartRevision;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("GetAlternatePartsResultProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class GetAlternatePartsResultProtocol {
        
        /// <remarks/>
        public int[] AlternatePartList;
        
        /// <remarks/>
        public short ReturnCode;
        
        /// <remarks/>
        public string IDNum;
        
        /// <remarks/>
        public int Objid;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("GetLocationsServicingSiteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class GetLocationsServicingSiteSetupProtocol {
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("GetLocationsServicingSiteResultProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class GetLocationsServicingSiteResultProtocol {
        
        /// <remarks/>
        public int[] InventoryLocationObjidList;
        
        /// <remarks/>
        public short ReturnCode;
        
        /// <remarks/>
        public string IDNum;
        
        /// <remarks/>
        public int Objid;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("MovePartRequestSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class MovePartRequestSetupProtocol {
        
        /// <remarks/>
        public string PartRequestDetailIDNum;
        
        /// <remarks/>
        public string NewWipBin;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RejectPartRequestSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class RejectPartRequestSetupProtocol {
        
        /// <remarks/>
        public string PartRequestDetailIDNum;
        
        /// <remarks/>
        public System.DateTime RejectDate;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ReopenPartRequestSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class ReopenPartRequestSetupProtocol {
        
        /// <remarks/>
        public string PartRequestDetailIDNum;
        
        /// <remarks/>
        public string NewStatus;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public System.DateTime ReopenDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ShipSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class ShipSetupProtocol {
        
        /// <remarks/>
        public string PartRequestDetailIDNum;
        
        /// <remarks/>
        public string SiteName;
        
        /// <remarks/>
        public string Address1;
        
        /// <remarks/>
        public string Address2;
        
        /// <remarks/>
        public string City;
        
        /// <remarks/>
        public string State;
        
        /// <remarks/>
        public string ZipCode;
        
        /// <remarks/>
        public string Country;
        
        /// <remarks/>
        public string ContactFirstName;
        
        /// <remarks/>
        public string ContactLastName;
        
        /// <remarks/>
        public string WaybillName;
        
        /// <remarks/>
        public string PackingList;
        
        /// <remarks/>
        public int PieceCount;
        
        /// <remarks/>
        public System.Double TotalWeight;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public System.DateTime ShipDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public string CarrierName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("YankPartRequestSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class YankPartRequestSetupProtocol {
        
        /// <remarks/>
        public string PartRequestDetailIDNum;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public System.DateTime YankDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AddInventoryBinSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class AddInventoryBinSetupProtocol {
        
        /// <remarks/>
        public bool IsActive;
        
        /// <remarks/>
        public LocationProtocol Location;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdateInventoryBinSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class UpdateInventoryBinSetupProtocol {
        
        /// <remarks/>
        public string NewBinName;
        
        /// <remarks/>
        public bool IsActive;
        
        /// <remarks/>
        public LocationProtocol CurrentLocation;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AddGLAccountSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class AddGLAccountSetupProtocol {
        
        /// <remarks/>
        public string AccountName;
        
        /// <remarks/>
        public string AccountType;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public string AccountNumber;
        
        /// <remarks/>
        public bool IsExpenseGLAccount;
        
        /// <remarks/>
        public bool IsActive;
        
        /// <remarks/>
        public bool IsCompany;
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdateGLAccountSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class UpdateGLAccountSetupProtocol {
        
        /// <remarks/>
        public string CurrentName;
        
        /// <remarks/>
        public string NewName;
        
        /// <remarks/>
        public string AccountType;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public string AccountNumber;
        
        /// <remarks/>
        public bool IsExpenseGLAccount;
        
        /// <remarks/>
        public bool IsActive;
        
        /// <remarks/>
        public bool IsCompany;
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AddInventoryLocationSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class AddInventoryLocationSetupProtocol {
        
        /// <remarks/>
        public string LocationName;
        
        /// <remarks/>
        public string AccountType;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public string ReportsToLocation;
        
        /// <remarks/>
        public string CapitalGLAccount;
        
        /// <remarks/>
        public bool IsActive;
        
        /// <remarks/>
        public bool IsCompany;
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public PartAuthorizationLevel PartAuthorizationLevel;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("PartAuthorizationLevel", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public enum PartAuthorizationLevel {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        All,
        
        /// <remarks/>
        AuthorizedPartsOnly,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdateInventoryLocationSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class UpdateInventoryLocationSetupProtocol {
        
        /// <remarks/>
        public string CurrentName;
        
        /// <remarks/>
        public string NewName;
        
        /// <remarks/>
        public string AccountType;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public string ReportsToLocation;
        
        /// <remarks/>
        public string CapitalGLAccount;
        
        /// <remarks/>
        public bool IsActive;
        
        /// <remarks/>
        public bool IsCompany;
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public PartAuthorizationLevel PartAuthorizationLevel;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AddLocationServicingSiteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class AddLocationServicingSiteSetupProtocol {
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public string LocationName;
        
        /// <remarks/>
        public bool IsActive;
        
        /// <remarks/>
        public short LocationRank;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("DeleteLocationServicingSiteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class DeleteLocationServicingSiteSetupProtocol {
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public string LocationName;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdateLocationServicingSiteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class UpdateLocationServicingSiteSetupProtocol {
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public string LocationName;
        
        /// <remarks/>
        public short LocationRank;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("SetPartStockingLevelSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class SetPartStockingLevelSetupProtocol {
        
        /// <remarks/>
        public string Queue;
        
        /// <remarks/>
        public string PartNumber;
        
        /// <remarks/>
        public string PartRevision;
        
        /// <remarks/>
        public string PartDomain;
        
        /// <remarks/>
        public short PartMinimum;
        
        /// <remarks/>
        public short PartMaximum;
        
        /// <remarks/>
        public short PartReorderLevel;
        
        /// <remarks/>
        public short PartReorderQuantity;
        
        /// <remarks/>
        public bool IsActive;
        
        /// <remarks/>
        public LocationProtocol Location;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdatePartStockingLevelSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class UpdatePartStockingLevelSetupProtocol {
        
        /// <remarks/>
        public string ToBinName;
        
        /// <remarks/>
        public string Queue;
        
        /// <remarks/>
        public string ToQueue;
        
        /// <remarks/>
        public string PartNumber;
        
        /// <remarks/>
        public string PartRevision;
        
        /// <remarks/>
        public string PartDomain;
        
        /// <remarks/>
        public short PartMinimum;
        
        /// <remarks/>
        public short PartMaximum;
        
        /// <remarks/>
        public short PartReorderLevel;
        
        /// <remarks/>
        public short PartReorderQuantity;
        
        /// <remarks/>
        public bool IsActive;
        
        /// <remarks/>
        public LocationProtocol CurrentLocation;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreatePartRequestDetailSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class CreatePartRequestDetailSetupProtocol {
        
        /// <remarks/>
        public string PartRequestHeaderIDNum;
        
        /// <remarks/>
        public string Queue;
        
        /// <remarks/>
        public string PartNumber;
        
        /// <remarks/>
        public string PartDomain;
        
        /// <remarks/>
        public string PartRevision;
        
        /// <remarks/>
        public string SerialNumber;
        
        /// <remarks/>
        public int Quantity;
        
        /// <remarks/>
        public int SitePartObjid;
        
        /// <remarks/>
        public string DetailType;
        
        /// <remarks/>
        public string Priority;
        
        /// <remarks/>
        public string ShippingMethod;
        
        /// <remarks/>
        public string CarrierName;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool HasWarranty;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public System.DateTime DueDate;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int ContractItemObjid;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AdditionalFieldProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class AdditionalFieldProtocol {
        
        /// <remarks/>
        public string FieldName;
        
        /// <remarks/>
        public AdditionalFieldType FieldType;
        
        /// <remarks/>
        public string FieldValue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AdditionalFieldType", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public enum AdditionalFieldType {
        
        /// <remarks/>
        String,
        
        /// <remarks/>
        Long,
        
        /// <remarks/>
        Double,
        
        /// <remarks/>
        Date,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreatePartRequestDetailResultProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class CreatePartRequestDetailResultProtocol {
        
        /// <remarks/>
        public string DetailNumber;
        
        /// <remarks/>
        public short ReturnCode;
        
        /// <remarks/>
        public string IDNum;
        
        /// <remarks/>
        public int Objid;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("PartTransferSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class PartTransferSetupProtocol {
        
        /// <remarks/>
        public string PartNumber;
        
        /// <remarks/>
        public string PartRevision;
        
        /// <remarks/>
        public string PartDomain;
        
        /// <remarks/>
        public int Quantity;
        
        /// <remarks/>
        public string SerialNumber;
        
        /// <remarks/>
        public bool FromGood;
        
        /// <remarks/>
        public bool ToGood;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime TransferDate;
        
        /// <remarks/>
        public string ReferenceIDNum;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public LocationProtocol ToLocation;
        
        /// <remarks/>
        public LocationProtocol FromLocation;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("PartTransferResultProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class PartTransferResultProtocol {
        
        /// <remarks/>
        public string TransactionIDNum;
        
        /// <remarks/>
        public System.Decimal StandardCost;
        
        /// <remarks/>
        public short ReturnCode;
        
        /// <remarks/>
        public string IDNum;
        
        /// <remarks/>
        public int Objid;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreatePartRequestHeaderCaseSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class CreatePartRequestHeaderCaseSetupProtocol {
        
        /// <remarks/>
        public string ContactFirstName;
        
        /// <remarks/>
        public string ContactLastName;
        
        /// <remarks/>
        public string ContactPhone;
        
        /// <remarks/>
        public string ShipToSiteIDNum;
        
        /// <remarks/>
        public string BillSiteIDNum;
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public string PaymentMethod;
        
        /// <remarks/>
        public string PaymentTerms;
        
        /// <remarks/>
        public string Priority;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public int ContractObjid;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreatePartRequestHeaderSubcaseSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class CreatePartRequestHeaderSubcaseSetupProtocol {
        
        /// <remarks/>
        public string ContactFirstName;
        
        /// <remarks/>
        public string ContactLastName;
        
        /// <remarks/>
        public string ContactPhone;
        
        /// <remarks/>
        public string ShipToSiteIDNum;
        
        /// <remarks/>
        public string BillSiteIDNum;
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public string PaymentMethod;
        
        /// <remarks/>
        public string PaymentTerms;
        
        /// <remarks/>
        public string Priority;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public int ContractObjid;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreatePartRequestHeaderSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class CreatePartRequestHeaderSetupProtocol {
        
        /// <remarks/>
        public string ContactFirstName;
        
        /// <remarks/>
        public string ContactLastName;
        
        /// <remarks/>
        public string ContactPhone;
        
        /// <remarks/>
        public string ShipToSiteIDNum;
        
        /// <remarks/>
        public string BillSiteIDNum;
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public string PaymentMethod;
        
        /// <remarks/>
        public string PaymentTerms;
        
        /// <remarks/>
        public string Priority;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public int ContractObjid;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdatePartRequestHeaderSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class UpdatePartRequestHeaderSetupProtocol {
        
        /// <remarks/>
        public string PartRequestHeaderIDNum;
        
        /// <remarks/>
        public string ContactFirstName;
        
        /// <remarks/>
        public string ContactLastName;
        
        /// <remarks/>
        public string ContactPhone;
        
        /// <remarks/>
        public string ShipToSiteIDNum;
        
        /// <remarks/>
        public string BillSiteIDNum;
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public string PaymentMethod;
        
        /// <remarks/>
        public string PaymentTerms;
        
        /// <remarks/>
        public string Priority;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdatePartRequestDetailSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class UpdatePartRequestDetailSetupProtocol {
        
        /// <remarks/>
        public string PartRequestDetailIDNum;
        
        /// <remarks/>
        public string PartNumber;
        
        /// <remarks/>
        public string PartDomain;
        
        /// <remarks/>
        public string PartRevision;
        
        /// <remarks/>
        public string SerialNumber;
        
        /// <remarks/>
        public int Quantity;
        
        /// <remarks/>
        public int SitePartObjid;
        
        /// <remarks/>
        public string DetailType;
        
        /// <remarks/>
        public string Priority;
        
        /// <remarks/>
        public string ShippingMethod;
        
        /// <remarks/>
        public string CarrierName;
        
        /// <remarks/>
        public bool HasWarranty;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateContainerSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class CreateContainerSetupProtocol {
        
        /// <remarks/>
        public string ContainerName;
        
        /// <remarks/>
        public string LocationName;
        
        /// <remarks/>
        public string BinName;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateSubContainerSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class CreateSubContainerSetupProtocol {
        
        /// <remarks/>
        public string ContainerName;
        
        /// <remarks/>
        public string ParentContainerName;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("SealContainerSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class SealContainerSetupProtocol {
        
        /// <remarks/>
        public string ContainerName;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("OpenContainerSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class OpenContainerSetupProtocol {
        
        /// <remarks/>
        public string ContainerName;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ToolkitResultProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.LogisticsToolkitSrv_v1" +
"")]
    public class ToolkitResultProtocol {
        
        /// <remarks/>
        public short ReturnCode;
        
        /// <remarks/>
        public string IDNum;
        
        /// <remarks/>
        public int Objid;
    }
}
