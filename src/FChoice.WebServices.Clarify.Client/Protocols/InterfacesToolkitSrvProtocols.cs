//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.2032.
// 
namespace FChoice.WebServices.Clarify.Client.Protocols.InterfacesToolkitSrv {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="InterfacesToolkitSrvSoap", Namespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(AdditionalFieldProtocol))]
    public class InterfacesToolkitSrv : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        public AuthenticationHeader AuthenticationHeaderValue;
        
        /// <remarks/>
        public InterfacesToolkitSrv() {
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/MoveSitePartToSite", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol MoveSitePartToSite(int sitePartObjid, string parentSiteIDNum) {
            object[] results = this.Invoke("MoveSitePartToSite", new object[] {
                        sitePartObjid,
                        parentSiteIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveSitePartToSite(int sitePartObjid, string parentSiteIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveSitePartToSite", new object[] {
                        sitePartObjid,
                        parentSiteIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndMoveSitePartToSite(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="MoveSitePartToSite1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/MoveSitePartToSite2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("MoveSitePartToSite2Result")]
        public ToolkitResultProtocol MoveSitePartToSite(MoveSitePartToSiteSetupProtocol setupParam) {
            object[] results = this.Invoke("MoveSitePartToSite1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveSitePartToSite1(MoveSitePartToSiteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveSitePartToSite1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndMoveSitePartToSite1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/MoveSitePartToBin", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol MoveSitePartToBin(int sitePartObjid, int parentBinObjid) {
            object[] results = this.Invoke("MoveSitePartToBin", new object[] {
                        sitePartObjid,
                        parentBinObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveSitePartToBin(int sitePartObjid, int parentBinObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveSitePartToBin", new object[] {
                        sitePartObjid,
                        parentBinObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndMoveSitePartToBin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="MoveSitePartToBin1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/MoveSitePartToBin2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("MoveSitePartToBin2Result")]
        public ToolkitResultProtocol MoveSitePartToBin(MoveSitePartToBinSetupProtocol setupParam) {
            object[] results = this.Invoke("MoveSitePartToBin1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveSitePartToBin1(MoveSitePartToBinSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveSitePartToBin1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndMoveSitePartToBin1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/MoveSitePartToPart", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol MoveSitePartToPart(int sitePartObjid, int parentSitePartObjid) {
            object[] results = this.Invoke("MoveSitePartToPart", new object[] {
                        sitePartObjid,
                        parentSitePartObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveSitePartToPart(int sitePartObjid, int parentSitePartObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveSitePartToPart", new object[] {
                        sitePartObjid,
                        parentSitePartObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndMoveSitePartToPart(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="MoveSitePartToPart1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/MoveSitePartToPart2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("MoveSitePartToPart2Result")]
        public ToolkitResultProtocol MoveSitePartToPart(MoveSitePartToPartSetupProtocol setupParam) {
            object[] results = this.Invoke("MoveSitePartToPart1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveSitePartToPart1(MoveSitePartToPartSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveSitePartToPart1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndMoveSitePartToPart1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/ReinstallSitePartToPart", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol ReinstallSitePartToPart(int sitePartObjid, string siteIDNum, int parentSitePartObjid) {
            object[] results = this.Invoke("ReinstallSitePartToPart", new object[] {
                        sitePartObjid,
                        siteIDNum,
                        parentSitePartObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReinstallSitePartToPart(int sitePartObjid, string siteIDNum, int parentSitePartObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReinstallSitePartToPart", new object[] {
                        sitePartObjid,
                        siteIDNum,
                        parentSitePartObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndReinstallSitePartToPart(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ReinstallSitePartToPart1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/ReinstallSitePartToPart2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("ReinstallSitePartToPart2Result")]
        public ToolkitResultProtocol ReinstallSitePartToPart(ReinstallSitePartToPartSetupProtocol setupParam) {
            object[] results = this.Invoke("ReinstallSitePartToPart1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReinstallSitePartToPart1(ReinstallSitePartToPartSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReinstallSitePartToPart1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndReinstallSitePartToPart1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/ReinstallSitePartToBin", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol ReinstallSitePartToBin(int sitePartObjid, string siteIDNum, int parentBinObjid) {
            object[] results = this.Invoke("ReinstallSitePartToBin", new object[] {
                        sitePartObjid,
                        siteIDNum,
                        parentBinObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReinstallSitePartToBin(int sitePartObjid, string siteIDNum, int parentBinObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReinstallSitePartToBin", new object[] {
                        sitePartObjid,
                        siteIDNum,
                        parentBinObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndReinstallSitePartToBin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ReinstallSitePartToBin1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/ReinstallSitePartToBin2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("ReinstallSitePartToBin2Result")]
        public ToolkitResultProtocol ReinstallSitePartToBin(ReinstallSitePartToBinSetupProtocol setupParam) {
            object[] results = this.Invoke("ReinstallSitePartToBin1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReinstallSitePartToBin1(ReinstallSitePartToBinSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReinstallSitePartToBin1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndReinstallSitePartToBin1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/ReinstallSitePartToSite", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol ReinstallSitePartToSite(int sitePartObjid, string siteIDNum) {
            object[] results = this.Invoke("ReinstallSitePartToSite", new object[] {
                        sitePartObjid,
                        siteIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReinstallSitePartToSite(int sitePartObjid, string siteIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReinstallSitePartToSite", new object[] {
                        sitePartObjid,
                        siteIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndReinstallSitePartToSite(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ReinstallSitePartToSite1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/ReinstallSitePartToSite2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("ReinstallSitePartToSite2Result")]
        public ToolkitResultProtocol ReinstallSitePartToSite(ReinstallSitePartToSiteSetupProtocol setupParam) {
            object[] results = this.Invoke("ReinstallSitePartToSite1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReinstallSitePartToSite1(ReinstallSitePartToSiteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReinstallSitePartToSite1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndReinstallSitePartToSite1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateProductBin", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol CreateProductBin(string binName, string siteIDNum) {
            object[] results = this.Invoke("CreateProductBin", new object[] {
                        binName,
                        siteIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateProductBin(string binName, string siteIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateProductBin", new object[] {
                        binName,
                        siteIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateProductBin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateProductBin1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateProductBin2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateProductBin2Result")]
        public ToolkitResultProtocol CreateProductBin(CreateProductBinSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateProductBin1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateProductBin1(CreateProductBinSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateProductBin1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateProductBin1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UpdateProductBin", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol UpdateProductBin(int binObjid) {
            object[] results = this.Invoke("UpdateProductBin", new object[] {
                        binObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateProductBin(int binObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateProductBin", new object[] {
                        binObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateProductBin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateProductBin1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UpdateProductBin2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdateProductBin2Result")]
        public ToolkitResultProtocol UpdateProductBin(UpdateProductBinSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdateProductBin1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateProductBin1(UpdateProductBinSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateProductBin1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateProductBin1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/DeleteProductBin", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol DeleteProductBin(int binObjid) {
            object[] results = this.Invoke("DeleteProductBin", new object[] {
                        binObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteProductBin(int binObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteProductBin", new object[] {
                        binObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDeleteProductBin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="DeleteProductBin1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/DeleteProductBin2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("DeleteProductBin2Result")]
        public ToolkitResultProtocol DeleteProductBin(DeleteProductBinSetupProtocol setupParam) {
            object[] results = this.Invoke("DeleteProductBin1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteProductBin1(DeleteProductBinSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteProductBin1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDeleteProductBin1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/DeinstallSitePart", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol DeinstallSitePart(int sitePartObjid) {
            object[] results = this.Invoke("DeinstallSitePart", new object[] {
                        sitePartObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeinstallSitePart(int sitePartObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeinstallSitePart", new object[] {
                        sitePartObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDeinstallSitePart(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="DeinstallSitePart1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/DeinstallSitePart2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("DeinstallSitePart2Result")]
        public ToolkitResultProtocol DeinstallSitePart(DeinstallSitePartSetupProtocol setupParam) {
            object[] results = this.Invoke("DeinstallSitePart1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeinstallSitePart1(DeinstallSitePartSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeinstallSitePart1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDeinstallSitePart1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateInteraction", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol CreateInteraction(string contactFirstName, string contactLastName, string contactPhone, int duration) {
            object[] results = this.Invoke("CreateInteraction", new object[] {
                        contactFirstName,
                        contactLastName,
                        contactPhone,
                        duration});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateInteraction(string contactFirstName, string contactLastName, string contactPhone, int duration, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateInteraction", new object[] {
                        contactFirstName,
                        contactLastName,
                        contactPhone,
                        duration}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateInteraction(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateInteraction1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateInteraction2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateInteraction2Result")]
        public ToolkitResultProtocol CreateInteraction(CreateInteractionSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateInteraction1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateInteraction1(CreateInteractionSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateInteraction1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateInteraction1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateEmployee", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public CreateEmployeeResultProtocol CreateEmployee(string firstName, string lastName, string loginName, string password, string siteIDNum, string email, string onlinePrivilegeClass) {
            object[] results = this.Invoke("CreateEmployee", new object[] {
                        firstName,
                        lastName,
                        loginName,
                        password,
                        siteIDNum,
                        email,
                        onlinePrivilegeClass});
            return ((CreateEmployeeResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateEmployee(string firstName, string lastName, string loginName, string password, string siteIDNum, string email, string onlinePrivilegeClass, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateEmployee", new object[] {
                        firstName,
                        lastName,
                        loginName,
                        password,
                        siteIDNum,
                        email,
                        onlinePrivilegeClass}, callback, asyncState);
        }
        
        /// <remarks/>
        public CreateEmployeeResultProtocol EndCreateEmployee(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CreateEmployeeResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateEmployee1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateEmployee2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateEmployee2Result")]
        public CreateEmployeeResultProtocol CreateEmployee(CreateEmployeeSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateEmployee1", new object[] {
                        setupParam});
            return ((CreateEmployeeResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateEmployee1(CreateEmployeeSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateEmployee1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public CreateEmployeeResultProtocol EndCreateEmployee1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CreateEmployeeResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/YankSolution", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol YankSolution(string solutionIDNum) {
            object[] results = this.Invoke("YankSolution", new object[] {
                        solutionIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginYankSolution(string solutionIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("YankSolution", new object[] {
                        solutionIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndYankSolution(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="YankSolution1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/YankSolution2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("YankSolution2Result")]
        public ToolkitResultProtocol YankSolution(YankSolutionSetupProtocol setupParam) {
            object[] results = this.Invoke("YankSolution1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginYankSolution1(YankSolutionSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("YankSolution1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndYankSolution1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/RejectSolution", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol RejectSolution(string solutionIDNum) {
            object[] results = this.Invoke("RejectSolution", new object[] {
                        solutionIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRejectSolution(string solutionIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RejectSolution", new object[] {
                        solutionIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndRejectSolution(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="RejectSolution1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/RejectSolution2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("RejectSolution2Result")]
        public ToolkitResultProtocol RejectSolution(RejectSolutionSetupProtocol setupParam) {
            object[] results = this.Invoke("RejectSolution1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRejectSolution1(RejectSolutionSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RejectSolution1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndRejectSolution1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/MoveSolution", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol MoveSolution(string solutionIDNum, string newWipBin) {
            object[] results = this.Invoke("MoveSolution", new object[] {
                        solutionIDNum,
                        newWipBin});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveSolution(string solutionIDNum, string newWipBin, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveSolution", new object[] {
                        solutionIDNum,
                        newWipBin}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndMoveSolution(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="MoveSolution1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/MoveSolution2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("MoveSolution2Result")]
        public ToolkitResultProtocol MoveSolution(MoveSolutionSetupProtocol setupParam) {
            object[] results = this.Invoke("MoveSolution1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveSolution1(MoveSolutionSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveSolution1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndMoveSolution1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/ForwardSolution", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol ForwardSolution(string solutionIDNum, string newQueue) {
            object[] results = this.Invoke("ForwardSolution", new object[] {
                        solutionIDNum,
                        newQueue});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginForwardSolution(string solutionIDNum, string newQueue, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ForwardSolution", new object[] {
                        solutionIDNum,
                        newQueue}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndForwardSolution(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="ForwardSolution1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/ForwardSolution2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("ForwardSolution2Result")]
        public ToolkitResultProtocol ForwardSolution(ForwardSolutionSetupProtocol setupParam) {
            object[] results = this.Invoke("ForwardSolution1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginForwardSolution1(ForwardSolutionSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ForwardSolution1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndForwardSolution1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/DispatchSolution", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol DispatchSolution(string solutionIDNum, string queue) {
            object[] results = this.Invoke("DispatchSolution", new object[] {
                        solutionIDNum,
                        queue});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDispatchSolution(string solutionIDNum, string queue, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DispatchSolution", new object[] {
                        solutionIDNum,
                        queue}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDispatchSolution(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="DispatchSolution1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/DispatchSolution2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("DispatchSolution2Result")]
        public ToolkitResultProtocol DispatchSolution(DispatchSolutionSetupProtocol setupParam) {
            object[] results = this.Invoke("DispatchSolution1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDispatchSolution1(DispatchSolutionSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DispatchSolution1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndDispatchSolution1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/AssignSolution", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol AssignSolution(string solutionIDNum) {
            object[] results = this.Invoke("AssignSolution", new object[] {
                        solutionIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAssignSolution(string solutionIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AssignSolution", new object[] {
                        solutionIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAssignSolution(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AssignSolution1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/AssignSolution2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("AssignSolution2Result")]
        public ToolkitResultProtocol AssignSolution(AssignSolutionSetupProtocol setupParam) {
            object[] results = this.Invoke("AssignSolution1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAssignSolution1(AssignSolutionSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AssignSolution1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAssignSolution1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/AcceptSolution", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol AcceptSolution(string solutionIDNum) {
            object[] results = this.Invoke("AcceptSolution", new object[] {
                        solutionIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAcceptSolution(string solutionIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AcceptSolution", new object[] {
                        solutionIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAcceptSolution(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AcceptSolution1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/AcceptSolution2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("AcceptSolution2Result")]
        public ToolkitResultProtocol AcceptSolution(AcceptSolutionSetupProtocol setupParam) {
            object[] results = this.Invoke("AcceptSolution1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAcceptSolution1(AcceptSolutionSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AcceptSolution1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAcceptSolution1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UpdateSitePart", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol UpdateSitePart(int sitePartObjid, int quantity) {
            object[] results = this.Invoke("UpdateSitePart", new object[] {
                        sitePartObjid,
                        quantity});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateSitePart(int sitePartObjid, int quantity, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateSitePart", new object[] {
                        sitePartObjid,
                        quantity}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateSitePart(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateSitePart1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UpdateSitePart2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdateSitePart2Result")]
        public ToolkitResultProtocol UpdateSitePart(int sitePartObjid, string serialNumber) {
            object[] results = this.Invoke("UpdateSitePart1", new object[] {
                        sitePartObjid,
                        serialNumber});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateSitePart1(int sitePartObjid, string serialNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateSitePart1", new object[] {
                        sitePartObjid,
                        serialNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateSitePart1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateSitePart2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UpdateSitePart3", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdateSitePart3Result")]
        public ToolkitResultProtocol UpdateSitePart(UpdateSitePartSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdateSitePart2", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateSitePart2(UpdateSitePartSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateSitePart2", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateSitePart2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/InstallSitePartToPart", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol InstallSitePartToPart(string siteIDNum, int parentSitePartObjid, string partNumber, string partRevision, string partDomain, int quantity) {
            object[] results = this.Invoke("InstallSitePartToPart", new object[] {
                        siteIDNum,
                        parentSitePartObjid,
                        partNumber,
                        partRevision,
                        partDomain,
                        quantity});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInstallSitePartToPart(string siteIDNum, int parentSitePartObjid, string partNumber, string partRevision, string partDomain, int quantity, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InstallSitePartToPart", new object[] {
                        siteIDNum,
                        parentSitePartObjid,
                        partNumber,
                        partRevision,
                        partDomain,
                        quantity}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndInstallSitePartToPart(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="InstallSitePartToPart1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/InstallSitePartToPart2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("InstallSitePartToPart2Result")]
        public ToolkitResultProtocol InstallSitePartToPart(string siteIDNum, string partNumber, string partRevision, string partDomain, string serialNumber) {
            object[] results = this.Invoke("InstallSitePartToPart1", new object[] {
                        siteIDNum,
                        partNumber,
                        partRevision,
                        partDomain,
                        serialNumber});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInstallSitePartToPart1(string siteIDNum, string partNumber, string partRevision, string partDomain, string serialNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InstallSitePartToPart1", new object[] {
                        siteIDNum,
                        partNumber,
                        partRevision,
                        partDomain,
                        serialNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndInstallSitePartToPart1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="InstallSitePartToPart2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/InstallSitePartToPart3", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("InstallSitePartToPart3Result")]
        public ToolkitResultProtocol InstallSitePartToPart(InstallSitePartToPartSetupProtocol setupParam) {
            object[] results = this.Invoke("InstallSitePartToPart2", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInstallSitePartToPart2(InstallSitePartToPartSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InstallSitePartToPart2", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndInstallSitePartToPart2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/InstallSitePartToBin", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol InstallSitePartToBin(string siteIDNum, int parentBinObjid, string partNumber, string partRevision, string partDomain, int quantity) {
            object[] results = this.Invoke("InstallSitePartToBin", new object[] {
                        siteIDNum,
                        parentBinObjid,
                        partNumber,
                        partRevision,
                        partDomain,
                        quantity});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInstallSitePartToBin(string siteIDNum, int parentBinObjid, string partNumber, string partRevision, string partDomain, int quantity, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InstallSitePartToBin", new object[] {
                        siteIDNum,
                        parentBinObjid,
                        partNumber,
                        partRevision,
                        partDomain,
                        quantity}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndInstallSitePartToBin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="InstallSitePartToBin1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/InstallSitePartToBin2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("InstallSitePartToBin2Result")]
        public ToolkitResultProtocol InstallSitePartToBin(string siteIDNum, string partNumber, string partRevision, string partDomain, string serialNumber) {
            object[] results = this.Invoke("InstallSitePartToBin1", new object[] {
                        siteIDNum,
                        partNumber,
                        partRevision,
                        partDomain,
                        serialNumber});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInstallSitePartToBin1(string siteIDNum, string partNumber, string partRevision, string partDomain, string serialNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InstallSitePartToBin1", new object[] {
                        siteIDNum,
                        partNumber,
                        partRevision,
                        partDomain,
                        serialNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndInstallSitePartToBin1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="InstallSitePartToBin2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/InstallSitePartToBin3", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("InstallSitePartToBin3Result")]
        public ToolkitResultProtocol InstallSitePartToBin(InstallSitePartToBinSetupProtocol setupParam) {
            object[] results = this.Invoke("InstallSitePartToBin2", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInstallSitePartToBin2(InstallSitePartToBinSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InstallSitePartToBin2", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndInstallSitePartToBin2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/InstallSitePartToSite", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol InstallSitePartToSite(string siteIDNum, string partNumber, string partRevision, string partDomain, int quantity) {
            object[] results = this.Invoke("InstallSitePartToSite", new object[] {
                        siteIDNum,
                        partNumber,
                        partRevision,
                        partDomain,
                        quantity});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInstallSitePartToSite(string siteIDNum, string partNumber, string partRevision, string partDomain, int quantity, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InstallSitePartToSite", new object[] {
                        siteIDNum,
                        partNumber,
                        partRevision,
                        partDomain,
                        quantity}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndInstallSitePartToSite(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="InstallSitePartToSite1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/InstallSitePartToSite2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("InstallSitePartToSite2Result")]
        public ToolkitResultProtocol InstallSitePartToSite(string siteIDNum, string partNumber, string partRevision, string partDomain, string serialNumber) {
            object[] results = this.Invoke("InstallSitePartToSite1", new object[] {
                        siteIDNum,
                        partNumber,
                        partRevision,
                        partDomain,
                        serialNumber});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInstallSitePartToSite1(string siteIDNum, string partNumber, string partRevision, string partDomain, string serialNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InstallSitePartToSite1", new object[] {
                        siteIDNum,
                        partNumber,
                        partRevision,
                        partDomain,
                        serialNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndInstallSitePartToSite1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="InstallSitePartToSite2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/InstallSitePartToSite3", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("InstallSitePartToSite3Result")]
        public ToolkitResultProtocol InstallSitePartToSite(InstallSitePartToSiteSetupProtocol setupParam) {
            object[] results = this.Invoke("InstallSitePartToSite2", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInstallSitePartToSite2(InstallSitePartToSiteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InstallSitePartToSite2", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndInstallSitePartToSite2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/AddContactToContract", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol AddContactToContract(string contractIDNum, string contactFirstName, string contactLastName, string contactPhone, string siteIDNum) {
            object[] results = this.Invoke("AddContactToContract", new object[] {
                        contractIDNum,
                        contactFirstName,
                        contactLastName,
                        contactPhone,
                        siteIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddContactToContract(string contractIDNum, string contactFirstName, string contactLastName, string contactPhone, string siteIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddContactToContract", new object[] {
                        contractIDNum,
                        contactFirstName,
                        contactLastName,
                        contactPhone,
                        siteIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAddContactToContract(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AddContactToContract1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/AddContactToContract2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("AddContactToContract2Result")]
        public ToolkitResultProtocol AddContactToContract(AddContactToContractSetupProtocol setupParam) {
            object[] results = this.Invoke("AddContactToContract1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddContactToContract1(AddContactToContractSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddContactToContract1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAddContactToContract1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/AddSitePartToContract", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol AddSitePartToContract(string contractIDNum, string siteIDNum, int sitePartObjid) {
            object[] results = this.Invoke("AddSitePartToContract", new object[] {
                        contractIDNum,
                        siteIDNum,
                        sitePartObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddSitePartToContract(string contractIDNum, string siteIDNum, int sitePartObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddSitePartToContract", new object[] {
                        contractIDNum,
                        siteIDNum,
                        sitePartObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAddSitePartToContract(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AddSitePartToContract1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/AddSitePartToContract2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("AddSitePartToContract2Result")]
        public ToolkitResultProtocol AddSitePartToContract(AddSitePartToContractSetupProtocol setupParam) {
            object[] results = this.Invoke("AddSitePartToContract1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddSitePartToContract1(AddSitePartToContractSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddSitePartToContract1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAddSitePartToContract1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/AddSiteToContract", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol AddSiteToContract(string contractIDNum, string siteIDNum) {
            object[] results = this.Invoke("AddSiteToContract", new object[] {
                        contractIDNum,
                        siteIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddSiteToContract(string contractIDNum, string siteIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddSiteToContract", new object[] {
                        contractIDNum,
                        siteIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAddSiteToContract(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AddSiteToContract1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/AddSiteToContract2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("AddSiteToContract2Result")]
        public ToolkitResultProtocol AddSiteToContract(AddSiteToContractSetupProtocol setupParam) {
            object[] results = this.Invoke("AddSiteToContract1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddSiteToContract1(AddSiteToContractSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddSiteToContract1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAddSiteToContract1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateContract", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol CreateContract() {
            object[] results = this.Invoke("CreateContract", new object[0]);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateContract(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateContract", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateContract(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateContract1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateContract2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateContract2Result")]
        public ToolkitResultProtocol CreateContract(CreateContractSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateContract1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateContract1(CreateContractSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateContract1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateContract1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UpdateContract", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol UpdateContract(string contractIDNum) {
            object[] results = this.Invoke("UpdateContract", new object[] {
                        contractIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateContract(string contractIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateContract", new object[] {
                        contractIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateContract(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateContract1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UpdateContract2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdateContract2Result")]
        public ToolkitResultProtocol UpdateContract(UpdateContractSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdateContract1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateContract1(UpdateContractSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateContract1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateContract1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UpdatePartRevision", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol UpdatePartRevision(string partNumber, string partDomain, string partRevision) {
            object[] results = this.Invoke("UpdatePartRevision", new object[] {
                        partNumber,
                        partDomain,
                        partRevision});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePartRevision(string partNumber, string partDomain, string partRevision, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePartRevision", new object[] {
                        partNumber,
                        partDomain,
                        partRevision}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdatePartRevision(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdatePartRevision1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UpdatePartRevision2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdatePartRevision2Result")]
        public ToolkitResultProtocol UpdatePartRevision(UpdatePartRevisionSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdatePartRevision1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePartRevision1(UpdatePartRevisionSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePartRevision1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdatePartRevision1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreatePartRevision", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol CreatePartRevision(string partNumber, string partDomain, string partRevision) {
            object[] results = this.Invoke("CreatePartRevision", new object[] {
                        partNumber,
                        partDomain,
                        partRevision});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreatePartRevision(string partNumber, string partDomain, string partRevision, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreatePartRevision", new object[] {
                        partNumber,
                        partDomain,
                        partRevision}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreatePartRevision(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreatePartRevision1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreatePartRevision2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreatePartRevision2Result")]
        public ToolkitResultProtocol CreatePartRevision(CreatePartRevisionSetupProtocol setupParam) {
            object[] results = this.Invoke("CreatePartRevision1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreatePartRevision1(CreatePartRevisionSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreatePartRevision1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreatePartRevision1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UpdatePart", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol UpdatePart(string partNumber, string partDomain, int warrantyDays) {
            object[] results = this.Invoke("UpdatePart", new object[] {
                        partNumber,
                        partDomain,
                        warrantyDays});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePart(string partNumber, string partDomain, int warrantyDays, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePart", new object[] {
                        partNumber,
                        partDomain,
                        warrantyDays}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdatePart(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdatePart1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UpdatePart2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdatePart2Result")]
        public ToolkitResultProtocol UpdatePart(UpdatePartSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdatePart1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePart1(UpdatePartSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePart1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdatePart1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreatePart", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol CreatePart(string partNumber, string partDomain, int warrantyDays, PartRepairType repairType) {
            object[] results = this.Invoke("CreatePart", new object[] {
                        partNumber,
                        partDomain,
                        warrantyDays,
                        repairType});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreatePart(string partNumber, string partDomain, int warrantyDays, PartRepairType repairType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreatePart", new object[] {
                        partNumber,
                        partDomain,
                        warrantyDays,
                        repairType}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreatePart(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreatePart1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreatePart2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreatePart2Result")]
        public ToolkitResultProtocol CreatePart(CreatePartSetupProtocol setupParam) {
            object[] results = this.Invoke("CreatePart1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreatePart1(CreatePartSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreatePart1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreatePart1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/AddUserToQueue", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol AddUserToQueue(string queue, string userName) {
            object[] results = this.Invoke("AddUserToQueue", new object[] {
                        queue,
                        userName});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddUserToQueue(string queue, string userName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddUserToQueue", new object[] {
                        queue,
                        userName}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAddUserToQueue(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AddUserToQueue1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/AddUserToQueue2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("AddUserToQueue2Result")]
        public ToolkitResultProtocol AddUserToQueue(AddUserToQueueSetupProtocol setupParam) {
            object[] results = this.Invoke("AddUserToQueue1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddUserToQueue1(AddUserToQueueSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddUserToQueue1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAddUserToQueue1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateQueue", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol CreateQueue(string title, bool allowCR, bool allowCase, bool allowContract, bool allowDialogue, bool allowDemandDetail, bool allowJob, bool allowOpportunity, bool allowSolution, bool allowSubcase, bool allowActionItem) {
            object[] results = this.Invoke("CreateQueue", new object[] {
                        title,
                        allowCR,
                        allowCase,
                        allowContract,
                        allowDialogue,
                        allowDemandDetail,
                        allowJob,
                        allowOpportunity,
                        allowSolution,
                        allowSubcase,
                        allowActionItem});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateQueue(string title, bool allowCR, bool allowCase, bool allowContract, bool allowDialogue, bool allowDemandDetail, bool allowJob, bool allowOpportunity, bool allowSolution, bool allowSubcase, bool allowActionItem, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateQueue", new object[] {
                        title,
                        allowCR,
                        allowCase,
                        allowContract,
                        allowDialogue,
                        allowDemandDetail,
                        allowJob,
                        allowOpportunity,
                        allowSolution,
                        allowSubcase,
                        allowActionItem}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateQueue(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateQueue1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateQueue2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateQueue2Result")]
        public ToolkitResultProtocol CreateQueue(CreateQueueSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateQueue1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateQueue1(CreateQueueSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateQueue1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateQueue1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UpdateQueue", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol UpdateQueue(string title) {
            object[] results = this.Invoke("UpdateQueue", new object[] {
                        title});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateQueue(string title, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateQueue", new object[] {
                        title}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateQueue(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateQueue1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UpdateQueue2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdateQueue2Result")]
        public ToolkitResultProtocol UpdateQueue(UpdateQueueSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdateQueue1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateQueue1(UpdateQueueSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateQueue1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateQueue1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateWipBin", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol CreateWipBin(string title) {
            object[] results = this.Invoke("CreateWipBin", new object[] {
                        title});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateWipBin(string title, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateWipBin", new object[] {
                        title}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateWipBin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateWipBin1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateWipBin2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateWipBin2Result")]
        public ToolkitResultProtocol CreateWipBin(CreateWipBinSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateWipBin1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateWipBin1(CreateWipBinSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateWipBin1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateWipBin1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UpdateWipBin", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol UpdateWipBin(string title) {
            object[] results = this.Invoke("UpdateWipBin", new object[] {
                        title});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateWipBin(string title, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateWipBin", new object[] {
                        title}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateWipBin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateWipBin1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UpdateWipBin2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdateWipBin2Result")]
        public ToolkitResultProtocol UpdateWipBin(UpdateWipBinSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdateWipBin1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateWipBin1(UpdateWipBinSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateWipBin1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateWipBin1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateContact", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol CreateContact(string firstName, string lastName, string phone, string siteIDNum) {
            object[] results = this.Invoke("CreateContact", new object[] {
                        firstName,
                        lastName,
                        phone,
                        siteIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateContact(string firstName, string lastName, string phone, string siteIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateContact", new object[] {
                        firstName,
                        lastName,
                        phone,
                        siteIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateContact(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateContact1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateContact2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateContact2Result")]
        public ToolkitResultProtocol CreateContact(CreateContactSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateContact1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateContact1(CreateContactSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateContact1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateContact1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UpdateContact", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol UpdateContact(string firstName, string lastName, string phone, string siteIDNum, string roleName) {
            object[] results = this.Invoke("UpdateContact", new object[] {
                        firstName,
                        lastName,
                        phone,
                        siteIDNum,
                        roleName});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateContact(string firstName, string lastName, string phone, string siteIDNum, string roleName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateContact", new object[] {
                        firstName,
                        lastName,
                        phone,
                        siteIDNum,
                        roleName}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateContact(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateContact1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UpdateContact2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdateContact2Result")]
        public ToolkitResultProtocol UpdateContact(UpdateContactSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdateContact1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateContact1(UpdateContactSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateContact1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateContact1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/RemoveEmployeeFromAccount", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol RemoveEmployeeFromAccount(string userName, string accountIDNum, string roleName) {
            object[] results = this.Invoke("RemoveEmployeeFromAccount", new object[] {
                        userName,
                        accountIDNum,
                        roleName});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRemoveEmployeeFromAccount(string userName, string accountIDNum, string roleName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RemoveEmployeeFromAccount", new object[] {
                        userName,
                        accountIDNum,
                        roleName}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndRemoveEmployeeFromAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="RemoveEmployeeFromAccount1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/RemoveEmployeeFromAccount2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("RemoveEmployeeFromAccount2Result")]
        public ToolkitResultProtocol RemoveEmployeeFromAccount(RemoveEmployeeFromAccountSetupProtocol setupParam) {
            object[] results = this.Invoke("RemoveEmployeeFromAccount1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRemoveEmployeeFromAccount1(RemoveEmployeeFromAccountSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RemoveEmployeeFromAccount1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndRemoveEmployeeFromAccount1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/AddEmployeeToAccount", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol AddEmployeeToAccount(string userName, string accountIDNum) {
            object[] results = this.Invoke("AddEmployeeToAccount", new object[] {
                        userName,
                        accountIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddEmployeeToAccount(string userName, string accountIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddEmployeeToAccount", new object[] {
                        userName,
                        accountIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAddEmployeeToAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AddEmployeeToAccount1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/AddEmployeeToAccount2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("AddEmployeeToAccount2Result")]
        public ToolkitResultProtocol AddEmployeeToAccount(AddEmployeeToAccountSetupProtocol setupParam) {
            object[] results = this.Invoke("AddEmployeeToAccount1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddEmployeeToAccount1(AddEmployeeToAccountSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddEmployeeToAccount1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAddEmployeeToAccount1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/RemoveSiteFromAccount", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol RemoveSiteFromAccount(string siteIDNum, string accountIDNum, string roleName) {
            object[] results = this.Invoke("RemoveSiteFromAccount", new object[] {
                        siteIDNum,
                        accountIDNum,
                        roleName});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRemoveSiteFromAccount(string siteIDNum, string accountIDNum, string roleName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RemoveSiteFromAccount", new object[] {
                        siteIDNum,
                        accountIDNum,
                        roleName}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndRemoveSiteFromAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="RemoveSiteFromAccount1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/RemoveSiteFromAccount2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("RemoveSiteFromAccount2Result")]
        public ToolkitResultProtocol RemoveSiteFromAccount(RemoveSiteFromAccountSetupProtocol setupParam) {
            object[] results = this.Invoke("RemoveSiteFromAccount1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRemoveSiteFromAccount1(RemoveSiteFromAccountSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RemoveSiteFromAccount1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndRemoveSiteFromAccount1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/AddSiteToAccount", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol AddSiteToAccount(string siteIDNum, string accountIDNum, string roleName) {
            object[] results = this.Invoke("AddSiteToAccount", new object[] {
                        siteIDNum,
                        accountIDNum,
                        roleName});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddSiteToAccount(string siteIDNum, string accountIDNum, string roleName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddSiteToAccount", new object[] {
                        siteIDNum,
                        accountIDNum,
                        roleName}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAddSiteToAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AddSiteToAccount1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/AddSiteToAccount2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("AddSiteToAccount2Result")]
        public ToolkitResultProtocol AddSiteToAccount(AddSiteToAccountSetupProtocol setupParam) {
            object[] results = this.Invoke("AddSiteToAccount1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddSiteToAccount1(AddSiteToAccountSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddSiteToAccount1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAddSiteToAccount1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateAccount", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol CreateAccount() {
            object[] results = this.Invoke("CreateAccount", new object[0]);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateAccount(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateAccount", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateAccount1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateAccount2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateAccount2Result")]
        public ToolkitResultProtocol CreateAccount(CreateAccountSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateAccount1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateAccount1(CreateAccountSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateAccount1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateAccount1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UpdateAccount", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol UpdateAccount(string accountIDNum) {
            object[] results = this.Invoke("UpdateAccount", new object[] {
                        accountIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateAccount(string accountIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateAccount", new object[] {
                        accountIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateAccount1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UpdateAccount2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdateAccount2Result")]
        public ToolkitResultProtocol UpdateAccount(UpdateAccountSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdateAccount1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateAccount1(UpdateAccountSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateAccount1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateAccount1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UnlinkCRFromSolution", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol UnlinkCRFromSolution(string crIDNum, string solutionIDNum) {
            object[] results = this.Invoke("UnlinkCRFromSolution", new object[] {
                        crIDNum,
                        solutionIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnlinkCRFromSolution(string crIDNum, string solutionIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UnlinkCRFromSolution", new object[] {
                        crIDNum,
                        solutionIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUnlinkCRFromSolution(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UnlinkCRFromSolution1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UnlinkCRFromSolution2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UnlinkCRFromSolution2Result")]
        public ToolkitResultProtocol UnlinkCRFromSolution(UnlinkCRFromSolutionSetupProtocol setupParam) {
            object[] results = this.Invoke("UnlinkCRFromSolution1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnlinkCRFromSolution1(UnlinkCRFromSolutionSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UnlinkCRFromSolution1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUnlinkCRFromSolution1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/LinkCRToSolution", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol LinkCRToSolution(string crIDNum, string solutionIDNum) {
            object[] results = this.Invoke("LinkCRToSolution", new object[] {
                        crIDNum,
                        solutionIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLinkCRToSolution(string crIDNum, string solutionIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LinkCRToSolution", new object[] {
                        crIDNum,
                        solutionIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLinkCRToSolution(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LinkCRToSolution1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/LinkCRToSolution2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LinkCRToSolution2Result")]
        public ToolkitResultProtocol LinkCRToSolution(LinkCRToSolutionSetupProtocol setupParam) {
            object[] results = this.Invoke("LinkCRToSolution1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLinkCRToSolution1(LinkCRToSolutionSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LinkCRToSolution1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLinkCRToSolution1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UnlinkCaseFromWorkaround", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol UnlinkCaseFromWorkaround(string caseIDNum) {
            object[] results = this.Invoke("UnlinkCaseFromWorkaround", new object[] {
                        caseIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnlinkCaseFromWorkaround(string caseIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UnlinkCaseFromWorkaround", new object[] {
                        caseIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUnlinkCaseFromWorkaround(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UnlinkCaseFromWorkaround1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UnlinkCaseFromWorkaround2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UnlinkCaseFromWorkaround2Result")]
        public ToolkitResultProtocol UnlinkCaseFromWorkaround(UnlinkCaseFromWorkaroundSetupProtocol setupParam) {
            object[] results = this.Invoke("UnlinkCaseFromWorkaround1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnlinkCaseFromWorkaround1(UnlinkCaseFromWorkaroundSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UnlinkCaseFromWorkaround1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUnlinkCaseFromWorkaround1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/LinkCaseToWorkaround", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol LinkCaseToWorkaround(string caseIDNum, int workaroundObjid) {
            object[] results = this.Invoke("LinkCaseToWorkaround", new object[] {
                        caseIDNum,
                        workaroundObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLinkCaseToWorkaround(string caseIDNum, int workaroundObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LinkCaseToWorkaround", new object[] {
                        caseIDNum,
                        workaroundObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLinkCaseToWorkaround(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LinkCaseToWorkaround1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/LinkCaseToWorkaround2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("LinkCaseToWorkaround2Result")]
        public ToolkitResultProtocol LinkCaseToWorkaround(LinkCaseToWorkaroundSetupProtocol setupParam) {
            object[] results = this.Invoke("LinkCaseToWorkaround1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLinkCaseToWorkaround1(LinkCaseToWorkaroundSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LinkCaseToWorkaround1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndLinkCaseToWorkaround1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/AddWorkaround", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol AddWorkaround(string solutionIDNum, string workaround) {
            object[] results = this.Invoke("AddWorkaround", new object[] {
                        solutionIDNum,
                        workaround});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddWorkaround(string solutionIDNum, string workaround, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddWorkaround", new object[] {
                        solutionIDNum,
                        workaround}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAddWorkaround(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AddWorkaround1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/AddWorkaround2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("AddWorkaround2Result")]
        public ToolkitResultProtocol AddWorkaround(int solutionObjid, string workaround) {
            object[] results = this.Invoke("AddWorkaround1", new object[] {
                        solutionObjid,
                        workaround});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddWorkaround1(int solutionObjid, string workaround, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddWorkaround1", new object[] {
                        solutionObjid,
                        workaround}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAddWorkaround1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AddWorkaround2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/AddWorkaround3", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("AddWorkaround3Result")]
        public ToolkitResultProtocol AddWorkaround(AddWorkaroundSetupProtocol setupParam) {
            object[] results = this.Invoke("AddWorkaround2", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddWorkaround2(AddWorkaroundSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddWorkaround2", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndAddWorkaround2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateSolution", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public CreateSolutionResultProtocol CreateSolution() {
            object[] results = this.Invoke("CreateSolution", new object[0]);
            return ((CreateSolutionResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateSolution(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateSolution", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public CreateSolutionResultProtocol EndCreateSolution(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CreateSolutionResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateSolution1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateSolution2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateSolution2Result")]
        public CreateSolutionResultProtocol CreateSolution(CreateSolutionSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateSolution1", new object[] {
                        setupParam});
            return ((CreateSolutionResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateSolution1(CreateSolutionSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateSolution1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public CreateSolutionResultProtocol EndCreateSolution1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CreateSolutionResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UpdatePriceInstance", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol UpdatePriceInstance(string partNumber, string partDomain, string partRevision, string priceProgram, int pricedQuantity, System.Decimal price, System.DateTime updateDate) {
            object[] results = this.Invoke("UpdatePriceInstance", new object[] {
                        partNumber,
                        partDomain,
                        partRevision,
                        priceProgram,
                        pricedQuantity,
                        price,
                        updateDate});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePriceInstance(string partNumber, string partDomain, string partRevision, string priceProgram, int pricedQuantity, System.Decimal price, System.DateTime updateDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePriceInstance", new object[] {
                        partNumber,
                        partDomain,
                        partRevision,
                        priceProgram,
                        pricedQuantity,
                        price,
                        updateDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdatePriceInstance(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdatePriceInstance1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UpdatePriceInstance2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdatePriceInstance2Result")]
        public ToolkitResultProtocol UpdatePriceInstance(UpdatePriceInstanceSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdatePriceInstance1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePriceInstance1(UpdatePriceInstanceSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePriceInstance1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdatePriceInstance1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreatePriceInstance", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol CreatePriceInstance(string partNumber, string partDomain, string partRevision, string priceProgram, PriceInstanceType priceType, int pricedQuantity, System.Decimal price) {
            object[] results = this.Invoke("CreatePriceInstance", new object[] {
                        partNumber,
                        partDomain,
                        partRevision,
                        priceProgram,
                        priceType,
                        pricedQuantity,
                        price});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreatePriceInstance(string partNumber, string partDomain, string partRevision, string priceProgram, PriceInstanceType priceType, int pricedQuantity, System.Decimal price, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreatePriceInstance", new object[] {
                        partNumber,
                        partDomain,
                        partRevision,
                        priceProgram,
                        priceType,
                        pricedQuantity,
                        price}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreatePriceInstance(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreatePriceInstance1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreatePriceInstance2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreatePriceInstance2Result")]
        public ToolkitResultProtocol CreatePriceInstance(CreatePriceInstanceSetupProtocol setupParam) {
            object[] results = this.Invoke("CreatePriceInstance1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreatePriceInstance1(CreatePriceInstanceSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreatePriceInstance1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreatePriceInstance1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateBOM", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol CreateBOM(string parentPartNumber, string parentPartDomain, string parentPartRevision, string childPartNumber, string childPartDomain, string childPartRevision, int quantity) {
            object[] results = this.Invoke("CreateBOM", new object[] {
                        parentPartNumber,
                        parentPartDomain,
                        parentPartRevision,
                        childPartNumber,
                        childPartDomain,
                        childPartRevision,
                        quantity});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateBOM(string parentPartNumber, string parentPartDomain, string parentPartRevision, string childPartNumber, string childPartDomain, string childPartRevision, int quantity, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateBOM", new object[] {
                        parentPartNumber,
                        parentPartDomain,
                        parentPartRevision,
                        childPartNumber,
                        childPartDomain,
                        childPartRevision,
                        quantity}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateBOM(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateBOM1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateBOM2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateBOM2Result")]
        public ToolkitResultProtocol CreateBOM(CreateBOMSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateBOM1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateBOM1(CreateBOMSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateBOM1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateBOM1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UpdateSite", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol UpdateSite(string siteIDNum) {
            object[] results = this.Invoke("UpdateSite", new object[] {
                        siteIDNum});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateSite(string siteIDNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateSite", new object[] {
                        siteIDNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateSite(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateSite1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UpdateSite2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdateSite2Result")]
        public ToolkitResultProtocol UpdateSite(UpdateSiteSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdateSite1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateSite1(UpdateSiteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateSite1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateSite1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateSite", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol CreateSite(SiteType siteType, SiteStatus status, int primaryAddressObjid) {
            object[] results = this.Invoke("CreateSite", new object[] {
                        siteType,
                        status,
                        primaryAddressObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateSite(SiteType siteType, SiteStatus status, int primaryAddressObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateSite", new object[] {
                        siteType,
                        status,
                        primaryAddressObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateSite(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateSite1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateSite2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateSite2Result")]
        public ToolkitResultProtocol CreateSite(CreateSiteSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateSite1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateSite1(CreateSiteSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateSite1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateSite1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UpdateSiteByObjid", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol UpdateSiteByObjid(int siteObjid) {
            object[] results = this.Invoke("UpdateSiteByObjid", new object[] {
                        siteObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateSiteByObjid(int siteObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateSiteByObjid", new object[] {
                        siteObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateSiteByObjid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateSiteByObjid1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UpdateSiteByObjid2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdateSiteByObjid2Result")]
        public ToolkitResultProtocol UpdateSiteByObjid(UpdateSiteByObjidSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdateSiteByObjid1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateSiteByObjid1(UpdateSiteByObjidSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateSiteByObjid1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateSiteByObjid1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateTimeZone", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol CreateTimeZone(string timeZone, string fullName, string country) {
            object[] results = this.Invoke("CreateTimeZone", new object[] {
                        timeZone,
                        fullName,
                        country});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateTimeZone(string timeZone, string fullName, string country, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateTimeZone", new object[] {
                        timeZone,
                        fullName,
                        country}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateTimeZone(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateTimeZone1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateTimeZone2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateTimeZone2Result")]
        public ToolkitResultProtocol CreateTimeZone(CreateTimeZoneSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateTimeZone1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateTimeZone1(CreateTimeZoneSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateTimeZone1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateTimeZone1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateState", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol CreateState(string state, string fullName, string country) {
            object[] results = this.Invoke("CreateState", new object[] {
                        state,
                        fullName,
                        country});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateState(string state, string fullName, string country, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateState", new object[] {
                        state,
                        fullName,
                        country}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateState(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateState1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateState2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateState2Result")]
        public ToolkitResultProtocol CreateState(CreateStateSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateState1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateState1(CreateStateSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateState1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateState1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateCountry", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol CreateCountry(string country, int countryCode) {
            object[] results = this.Invoke("CreateCountry", new object[] {
                        country,
                        countryCode});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateCountry(string country, int countryCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateCountry", new object[] {
                        country,
                        countryCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateCountry(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateCountry1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateCountry2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateCountry2Result")]
        public ToolkitResultProtocol CreateCountry(CreateCountrySetupProtocol setupParam) {
            object[] results = this.Invoke("CreateCountry1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateCountry1(CreateCountrySetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateCountry1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateCountry1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UpdateAddress", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol UpdateAddress(int addressObjid) {
            object[] results = this.Invoke("UpdateAddress", new object[] {
                        addressObjid});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateAddress(int addressObjid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateAddress", new object[] {
                        addressObjid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateAddress(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateAddress1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/UpdateAddress2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("UpdateAddress2Result")]
        public ToolkitResultProtocol UpdateAddress(UpdateAddressSetupProtocol setupParam) {
            object[] results = this.Invoke("UpdateAddress1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateAddress1(UpdateAddressSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateAddress1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndUpdateAddress1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateAddress", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        public ToolkitResultProtocol CreateAddress(string address1, string city, string state, string zipCode, string country, string timeZone) {
            object[] results = this.Invoke("CreateAddress", new object[] {
                        address1,
                        city,
                        state,
                        zipCode,
                        country,
                        timeZone});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateAddress(string address1, string city, string state, string zipCode, string country, string timeZone, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateAddress", new object[] {
                        address1,
                        city,
                        state,
                        zipCode,
                        country,
                        timeZone}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateAddress(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CreateAddress1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1/CreateAddress2", RequestNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1", ResponseNamespace="http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
        [return: System.Xml.Serialization.SoapElementAttribute("CreateAddress2Result")]
        public ToolkitResultProtocol CreateAddress(CreateAddressSetupProtocol setupParam) {
            object[] results = this.Invoke("CreateAddress1", new object[] {
                        setupParam});
            return ((ToolkitResultProtocol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateAddress1(CreateAddressSetupProtocol setupParam, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateAddress1", new object[] {
                        setupParam}, callback, asyncState);
        }
        
        /// <remarks/>
        public ToolkitResultProtocol EndCreateAddress1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ToolkitResultProtocol)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AuthenticationHeader", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class AuthenticationHeader : SoapHeader {
        
        /// <remarks/>
        public string SessionID;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateAddressSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class CreateAddressSetupProtocol {
        
        /// <remarks/>
        public string Address1;
        
        /// <remarks/>
        public string Address2;
        
        /// <remarks/>
        public string City;
        
        /// <remarks/>
        public string State;
        
        /// <remarks/>
        public bool IsShortState;
        
        /// <remarks/>
        public string ZipCode;
        
        /// <remarks/>
        public string Country;
        
        /// <remarks/>
        public string TimeZone;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AdditionalFieldProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class AdditionalFieldProtocol {
        
        /// <remarks/>
        public string FieldName;
        
        /// <remarks/>
        public AdditionalFieldType FieldType;
        
        /// <remarks/>
        public string FieldValue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AdditionalFieldType", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public enum AdditionalFieldType {
        
        /// <remarks/>
        String,
        
        /// <remarks/>
        Long,
        
        /// <remarks/>
        Double,
        
        /// <remarks/>
        Date,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdateAddressSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class UpdateAddressSetupProtocol {
        
        /// <remarks/>
        public int AddressObjid;
        
        /// <remarks/>
        public string Address1;
        
        /// <remarks/>
        public string Address2;
        
        /// <remarks/>
        public string City;
        
        /// <remarks/>
        public string State;
        
        /// <remarks/>
        public bool IsShortState;
        
        /// <remarks/>
        public string ZipCode;
        
        /// <remarks/>
        public string Country;
        
        /// <remarks/>
        public string TimeZone;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateCountrySetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class CreateCountrySetupProtocol {
        
        /// <remarks/>
        public string Country;
        
        /// <remarks/>
        public int CountryCode;
        
        /// <remarks/>
        public string Currency;
        
        /// <remarks/>
        public string CurrencySymbol;
        
        /// <remarks/>
        public string CurrencyDescription;
        
        /// <remarks/>
        public System.Double CurrencyConversionRate;
        
        /// <remarks/>
        public string CurrencyISOCode;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateStateSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class CreateStateSetupProtocol {
        
        /// <remarks/>
        public string State;
        
        /// <remarks/>
        public string FullName;
        
        /// <remarks/>
        public bool IsDefault;
        
        /// <remarks/>
        public string Country;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateTimeZoneSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class CreateTimeZoneSetupProtocol {
        
        /// <remarks/>
        public string TimeZone;
        
        /// <remarks/>
        public string FullName;
        
        /// <remarks/>
        public string Country;
        
        /// <remarks/>
        public int GMTDifference;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdateSiteByObjidSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class UpdateSiteByObjidSetupProtocol {
        
        /// <remarks/>
        public int SiteObjid;
        
        /// <remarks/>
        public string SiteName;
        
        /// <remarks/>
        public SiteType SiteType;
        
        /// <remarks/>
        public string AccountIDNum;
        
        /// <remarks/>
        public SiteStatus Status;
        
        /// <remarks/>
        public string Region;
        
        /// <remarks/>
        public string District;
        
        /// <remarks/>
        public string IndustryType;
        
        /// <remarks/>
        public string PrimaryUse;
        
        /// <remarks/>
        public int PrimaryAddressObjid;
        
        /// <remarks/>
        public int ShippingAddressObjid;
        
        /// <remarks/>
        public int BillingAddressObjid;
        
        /// <remarks/>
        public string ParentSiteIDNum;
        
        /// <remarks/>
        public string SupportOfficeSiteIDNum;
        
        /// <remarks/>
        public int PrimarySupportEmployeeObjid;
        
        /// <remarks/>
        public int SecondarySupportEmployeeObjid;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("SiteType", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public enum SiteType {
        
        /// <remarks/>
        Customer,
        
        /// <remarks/>
        Internal,
        
        /// <remarks/>
        Reseller,
        
        /// <remarks/>
        Individual,
        
        /// <remarks/>
        Vendor,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("SiteStatus", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public enum SiteStatus {
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Inactive,
        
        /// <remarks/>
        Obsolete,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateSiteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class CreateSiteSetupProtocol {
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public string SiteName;
        
        /// <remarks/>
        public SiteType SiteType;
        
        /// <remarks/>
        public string AccountIDNum;
        
        /// <remarks/>
        public SiteStatus Status;
        
        /// <remarks/>
        public string Region;
        
        /// <remarks/>
        public string District;
        
        /// <remarks/>
        public string IndustryType;
        
        /// <remarks/>
        public string PrimaryUse;
        
        /// <remarks/>
        public int PrimaryAddressObjid;
        
        /// <remarks/>
        public int ShippingAddressObjid;
        
        /// <remarks/>
        public int BillingAddressObjid;
        
        /// <remarks/>
        public string ParentSiteIDNum;
        
        /// <remarks/>
        public string SupportOfficeSiteIDNum;
        
        /// <remarks/>
        public int PrimarySupportEmployeeObjid;
        
        /// <remarks/>
        public int SecondarySupportEmployeeObjid;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdateSiteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class UpdateSiteSetupProtocol {
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public string SiteName;
        
        /// <remarks/>
        public SiteType SiteType;
        
        /// <remarks/>
        public string AccountIDNum;
        
        /// <remarks/>
        public SiteStatus Status;
        
        /// <remarks/>
        public string Region;
        
        /// <remarks/>
        public string District;
        
        /// <remarks/>
        public string IndustryType;
        
        /// <remarks/>
        public string PrimaryUse;
        
        /// <remarks/>
        public int PrimaryAddressObjid;
        
        /// <remarks/>
        public int ShippingAddressObjid;
        
        /// <remarks/>
        public int BillingAddressObjid;
        
        /// <remarks/>
        public string ParentSiteIDNum;
        
        /// <remarks/>
        public string SupportOfficeSiteIDNum;
        
        /// <remarks/>
        public int PrimarySupportEmployeeObjid;
        
        /// <remarks/>
        public int SecondarySupportEmployeeObjid;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateBOMSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class CreateBOMSetupProtocol {
        
        /// <remarks/>
        public string ParentPartNumber;
        
        /// <remarks/>
        public string ParentPartDomain;
        
        /// <remarks/>
        public string ParentPartRevision;
        
        /// <remarks/>
        public string ChildPartNumber;
        
        /// <remarks/>
        public string ChildPartDomain;
        
        /// <remarks/>
        public string ChildPartRevision;
        
        /// <remarks/>
        public int Quantity;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreatePriceInstanceSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class CreatePriceInstanceSetupProtocol {
        
        /// <remarks/>
        public string PartNumber;
        
        /// <remarks/>
        public string PartDomain;
        
        /// <remarks/>
        public string PartRevision;
        
        /// <remarks/>
        public string PriceProgram;
        
        /// <remarks/>
        public PriceInstanceType PriceType;
        
        /// <remarks/>
        public int PricedQuantity;
        
        /// <remarks/>
        public System.Decimal Price;
        
        /// <remarks/>
        public System.DateTime StartDate;
        
        /// <remarks/>
        public System.DateTime EndDate;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("PriceInstanceType", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public enum PriceInstanceType {
        
        /// <remarks/>
        Fixed,
        
        /// <remarks/>
        PercentOfProduct,
        
        /// <remarks/>
        PercentOfOptionList,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdatePriceInstanceSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class UpdatePriceInstanceSetupProtocol {
        
        /// <remarks/>
        public string PartNumber;
        
        /// <remarks/>
        public string PartDomain;
        
        /// <remarks/>
        public string PartRevision;
        
        /// <remarks/>
        public string PriceProgram;
        
        /// <remarks/>
        public int PricedQuantity;
        
        /// <remarks/>
        public System.Decimal Price;
        
        /// <remarks/>
        public System.DateTime UpdateDate;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateSolutionSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class CreateSolutionSetupProtocol {
        
        /// <remarks/>
        public string Title;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public string Workaround;
        
        /// <remarks/>
        public bool IsPublic;
        
        /// <remarks/>
        public string ResolutionCode;
        
        /// <remarks/>
        public string Queue;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateSolutionResultProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class CreateSolutionResultProtocol {
        
        /// <remarks/>
        public int WorkaroundObjid;
        
        /// <remarks/>
        public short ReturnCode;
        
        /// <remarks/>
        public string IDNum;
        
        /// <remarks/>
        public int Objid;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AddWorkaroundSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class AddWorkaroundSetupProtocol {
        
        /// <remarks/>
        public string SolutionIDNum;
        
        /// <remarks/>
        public int SolutionObjid;
        
        /// <remarks/>
        public string Workaround;
        
        /// <remarks/>
        public bool IsPublic;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public string ResolutionCode;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LinkCaseToWorkaroundSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class LinkCaseToWorkaroundSetupProtocol {
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public int WorkaroundObjid;
        
        /// <remarks/>
        public System.DateTime LinkDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UnlinkCaseFromWorkaroundSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class UnlinkCaseFromWorkaroundSetupProtocol {
        
        /// <remarks/>
        public string CaseIDNum;
        
        /// <remarks/>
        public System.DateTime UnlinkDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LinkCRToSolutionSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class LinkCRToSolutionSetupProtocol {
        
        /// <remarks/>
        public string CRIDNum;
        
        /// <remarks/>
        public string SolutionIDNum;
        
        /// <remarks/>
        public System.DateTime LinkDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UnlinkCRFromSolutionSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class UnlinkCRFromSolutionSetupProtocol {
        
        /// <remarks/>
        public string CRIDNum;
        
        /// <remarks/>
        public string SolutionIDNum;
        
        /// <remarks/>
        public System.DateTime UnlinkDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdateAccountSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class UpdateAccountSetupProtocol {
        
        /// <remarks/>
        public string AccountName;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public string Territory;
        
        /// <remarks/>
        public string Stock;
        
        /// <remarks/>
        public string FiscalYear;
        
        /// <remarks/>
        public string AccountType;
        
        /// <remarks/>
        public string Size;
        
        /// <remarks/>
        public string Revenue;
        
        /// <remarks/>
        public string Ownership;
        
        /// <remarks/>
        public string Phone;
        
        /// <remarks/>
        public string Fax;
        
        /// <remarks/>
        public string WebSite;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public string AccountIDNum;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateAccountSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class CreateAccountSetupProtocol {
        
        /// <remarks/>
        public string AccountName;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public string Territory;
        
        /// <remarks/>
        public string Stock;
        
        /// <remarks/>
        public string FiscalYear;
        
        /// <remarks/>
        public string AccountType;
        
        /// <remarks/>
        public string Size;
        
        /// <remarks/>
        public string Revenue;
        
        /// <remarks/>
        public string Ownership;
        
        /// <remarks/>
        public string Phone;
        
        /// <remarks/>
        public string Fax;
        
        /// <remarks/>
        public string WebSite;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AddSiteToAccountSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class AddSiteToAccountSetupProtocol {
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public string AccountIDNum;
        
        /// <remarks/>
        public string RoleName;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RemoveSiteFromAccountSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class RemoveSiteFromAccountSetupProtocol {
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public string AccountIDNum;
        
        /// <remarks/>
        public string RoleName;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AddEmployeeToAccountSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class AddEmployeeToAccountSetupProtocol {
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public string AccountIDNum;
        
        /// <remarks/>
        public string RoleName;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RemoveEmployeeFromAccountSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class RemoveEmployeeFromAccountSetupProtocol {
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public string AccountIDNum;
        
        /// <remarks/>
        public string RoleName;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdateContactSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class UpdateContactSetupProtocol {
        
        /// <remarks/>
        public string FirstName;
        
        /// <remarks/>
        public string LastName;
        
        /// <remarks/>
        public string Phone;
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public string RoleName;
        
        /// <remarks/>
        public string Fax;
        
        /// <remarks/>
        public string Email;
        
        /// <remarks/>
        public string MailStop;
        
        /// <remarks/>
        public string Title;
        
        /// <remarks/>
        public string Hours;
        
        /// <remarks/>
        public string Salutation;
        
        /// <remarks/>
        public string NewFirstName;
        
        /// <remarks/>
        public string NewLastName;
        
        /// <remarks/>
        public string NewPhone;
        
        /// <remarks/>
        public string NewPrimarySiteIDNum;
        
        /// <remarks/>
        public string NewPrimaryRole;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateContactSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class CreateContactSetupProtocol {
        
        /// <remarks/>
        public string FirstName;
        
        /// <remarks/>
        public string LastName;
        
        /// <remarks/>
        public string Phone;
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public string RoleName;
        
        /// <remarks/>
        public string Fax;
        
        /// <remarks/>
        public string Email;
        
        /// <remarks/>
        public string MailStop;
        
        /// <remarks/>
        public string Title;
        
        /// <remarks/>
        public string Hours;
        
        /// <remarks/>
        public string Salutation;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdateWipBinSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class UpdateWipBinSetupProtocol {
        
        /// <remarks/>
        public string Title;
        
        /// <remarks/>
        public string NewTitle;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool IsDefaultBin;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateWipBinSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class CreateWipBinSetupProtocol {
        
        /// <remarks/>
        public string Title;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool IsDefaultBin;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdateQueueSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class UpdateQueueSetupProtocol {
        
        /// <remarks/>
        public string Title;
        
        /// <remarks/>
        public bool IsPersonal;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public bool AllowCR;
        
        /// <remarks/>
        public bool AllowCase;
        
        /// <remarks/>
        public bool AllowContract;
        
        /// <remarks/>
        public bool AllowDialogue;
        
        /// <remarks/>
        public bool AllowDemandDetail;
        
        /// <remarks/>
        public bool AllowJob;
        
        /// <remarks/>
        public bool AllowOpportunity;
        
        /// <remarks/>
        public bool AllowSolution;
        
        /// <remarks/>
        public bool AllowSubcase;
        
        /// <remarks/>
        public bool AllowActionItem;
        
        /// <remarks/>
        public string Supervisor;
        
        /// <remarks/>
        public string NewTitle;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateQueueSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class CreateQueueSetupProtocol {
        
        /// <remarks/>
        public string Title;
        
        /// <remarks/>
        public bool IsPersonal;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public bool AllowCR;
        
        /// <remarks/>
        public bool AllowCase;
        
        /// <remarks/>
        public bool AllowContract;
        
        /// <remarks/>
        public bool AllowDialogue;
        
        /// <remarks/>
        public bool AllowDemandDetail;
        
        /// <remarks/>
        public bool AllowJob;
        
        /// <remarks/>
        public bool AllowOpportunity;
        
        /// <remarks/>
        public bool AllowSolution;
        
        /// <remarks/>
        public bool AllowSubcase;
        
        /// <remarks/>
        public bool AllowActionItem;
        
        /// <remarks/>
        public string Supervisor;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AddUserToQueueSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class AddUserToQueueSetupProtocol {
        
        /// <remarks/>
        public string Queue;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool IsSupervisor;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreatePartSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class CreatePartSetupProtocol {
        
        /// <remarks/>
        public string PartNumber;
        
        /// <remarks/>
        public string PartDomain;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public string ModelNumber;
        
        /// <remarks/>
        public int WarrantyDays;
        
        /// <remarks/>
        public bool WarrantyStartOnShipment;
        
        /// <remarks/>
        public string UnitMeasure;
        
        /// <remarks/>
        public string Family;
        
        /// <remarks/>
        public string Line;
        
        /// <remarks/>
        public PartRepairType RepairType;
        
        /// <remarks/>
        public string PartType;
        
        /// <remarks/>
        public string Weight;
        
        /// <remarks/>
        public string Dimension;
        
        /// <remarks/>
        public string PartClass;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("PartRepairType", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public enum PartRepairType {
        
        /// <remarks/>
        Repairable,
        
        /// <remarks/>
        Expendable,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdatePartSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class UpdatePartSetupProtocol {
        
        /// <remarks/>
        public string PartNumber;
        
        /// <remarks/>
        public string PartDomain;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public string ModelNumber;
        
        /// <remarks/>
        public int WarrantyDays;
        
        /// <remarks/>
        public bool WarrantyStartOnShipment;
        
        /// <remarks/>
        public string UnitMeasure;
        
        /// <remarks/>
        public string Family;
        
        /// <remarks/>
        public string Line;
        
        /// <remarks/>
        public PartRepairType RepairType;
        
        /// <remarks/>
        public string PartType;
        
        /// <remarks/>
        public string Weight;
        
        /// <remarks/>
        public string Dimension;
        
        /// <remarks/>
        public string PartClass;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreatePartRevisionSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class CreatePartRevisionSetupProtocol {
        
        /// <remarks/>
        public string PartNumber;
        
        /// <remarks/>
        public string PartDomain;
        
        /// <remarks/>
        public string PartRevision;
        
        /// <remarks/>
        public string ReplacePartNumber;
        
        /// <remarks/>
        public string ReplacePartDomain;
        
        /// <remarks/>
        public string ReplacePartRevision;
        
        /// <remarks/>
        public System.DateTime ReplaceDate;
        
        /// <remarks/>
        public PartRevisionStatus Status;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("PartRevisionStatus", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public enum PartRevisionStatus {
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Inactive,
        
        /// <remarks/>
        Obsolete,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdatePartRevisionSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class UpdatePartRevisionSetupProtocol {
        
        /// <remarks/>
        public string PartNumber;
        
        /// <remarks/>
        public string PartDomain;
        
        /// <remarks/>
        public string PartRevision;
        
        /// <remarks/>
        public string ReplacePartNumber;
        
        /// <remarks/>
        public string ReplacePartDomain;
        
        /// <remarks/>
        public string ReplacePartRevision;
        
        /// <remarks/>
        public System.DateTime ReplaceDate;
        
        /// <remarks/>
        public PartRevisionStatus Status;
        
        /// <remarks/>
        public string NewPartRevision;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdateContractSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class UpdateContractSetupProtocol {
        
        /// <remarks/>
        public string ContractIDNum;
        
        /// <remarks/>
        public string ContractType;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public string PONumber;
        
        /// <remarks/>
        public string PayOptions;
        
        /// <remarks/>
        public int PhoneResponseDuration;
        
        /// <remarks/>
        public int OnsiteResponseDuration;
        
        /// <remarks/>
        public string BusinessHoursForPM;
        
        /// <remarks/>
        public System.DateTime StartDate;
        
        /// <remarks/>
        public System.DateTime ExpireDate;
        
        /// <remarks/>
        public string UnitType;
        
        /// <remarks/>
        public System.Double UnitsPurchased;
        
        /// <remarks/>
        public System.Double UnitsUsed;
        
        /// <remarks/>
        public System.Double UnitsAvailable;
        
        /// <remarks/>
        public bool UseSpecialConsiderations;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateContractSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class CreateContractSetupProtocol {
        
        /// <remarks/>
        public string ContractType;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public string PONumber;
        
        /// <remarks/>
        public string PayOptions;
        
        /// <remarks/>
        public int PhoneResponseDuration;
        
        /// <remarks/>
        public int OnsiteResponseDuration;
        
        /// <remarks/>
        public string BusinessHoursForPM;
        
        /// <remarks/>
        public System.DateTime StartDate;
        
        /// <remarks/>
        public System.DateTime ExpireDate;
        
        /// <remarks/>
        public string UnitType;
        
        /// <remarks/>
        public System.Double UnitsPurchased;
        
        /// <remarks/>
        public System.Double UnitsUsed;
        
        /// <remarks/>
        public System.Double UnitsAvailable;
        
        /// <remarks/>
        public bool UseSpecialConsiderations;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AddSiteToContractSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class AddSiteToContractSetupProtocol {
        
        /// <remarks/>
        public string ContractIDNum;
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AddSitePartToContractSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class AddSitePartToContractSetupProtocol {
        
        /// <remarks/>
        public string ContractIDNum;
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public int SitePartObjid;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AddContactToContractSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class AddContactToContractSetupProtocol {
        
        /// <remarks/>
        public string ContractIDNum;
        
        /// <remarks/>
        public string ContactFirstName;
        
        /// <remarks/>
        public string ContactLastName;
        
        /// <remarks/>
        public string ContactPhone;
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("InstallSitePartToSiteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class InstallSitePartToSiteSetupProtocol {
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public string PartNumber;
        
        /// <remarks/>
        public string PartRevision;
        
        /// <remarks/>
        public string PartDomain;
        
        /// <remarks/>
        public int Quantity;
        
        /// <remarks/>
        public string SerialNumber;
        
        /// <remarks/>
        public string InstanceName;
        
        /// <remarks/>
        public string Comments;
        
        /// <remarks/>
        public string PartStatus;
        
        /// <remarks/>
        public string InvoiceNumber;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime InstallDate;
        
        /// <remarks/>
        public System.DateTime ShipDate;
        
        /// <remarks/>
        public bool AddActivityLog;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("InstallSitePartToBinSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class InstallSitePartToBinSetupProtocol {
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public string PartNumber;
        
        /// <remarks/>
        public string PartRevision;
        
        /// <remarks/>
        public string PartDomain;
        
        /// <remarks/>
        public int Quantity;
        
        /// <remarks/>
        public string SerialNumber;
        
        /// <remarks/>
        public int ParentBinObjid;
        
        /// <remarks/>
        public string InstanceName;
        
        /// <remarks/>
        public string Comments;
        
        /// <remarks/>
        public string PartStatus;
        
        /// <remarks/>
        public string InvoiceNumber;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime InstallDate;
        
        /// <remarks/>
        public System.DateTime ShipDate;
        
        /// <remarks/>
        public bool AddActivityLog;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("InstallSitePartToPartSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class InstallSitePartToPartSetupProtocol {
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public string PartNumber;
        
        /// <remarks/>
        public string PartRevision;
        
        /// <remarks/>
        public string PartDomain;
        
        /// <remarks/>
        public int Quantity;
        
        /// <remarks/>
        public string SerialNumber;
        
        /// <remarks/>
        public int ParentSitePartObjid;
        
        /// <remarks/>
        public string InstanceName;
        
        /// <remarks/>
        public string Comments;
        
        /// <remarks/>
        public string PartStatus;
        
        /// <remarks/>
        public string InvoiceNumber;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime InstallDate;
        
        /// <remarks/>
        public System.DateTime ShipDate;
        
        /// <remarks/>
        public bool AddActivityLog;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdateSitePartSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class UpdateSitePartSetupProtocol {
        
        /// <remarks/>
        public int SitePartObjid;
        
        /// <remarks/>
        public string InstanceName;
        
        /// <remarks/>
        public string SerialNumber;
        
        /// <remarks/>
        public string InvoiceNumber;
        
        /// <remarks/>
        public System.DateTime ShipDate;
        
        /// <remarks/>
        public System.DateTime InstallDate;
        
        /// <remarks/>
        public System.DateTime WarrantyDate;
        
        /// <remarks/>
        public int Quantity;
        
        /// <remarks/>
        public string PartStatus;
        
        /// <remarks/>
        public string Comments;
        
        /// <remarks/>
        public System.DateTime ServiceEndDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public string PartRevision;
        
        /// <remarks/>
        public bool AddActivityLog;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AcceptSolutionSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class AcceptSolutionSetupProtocol {
        
        /// <remarks/>
        public string SolutionIDNum;
        
        /// <remarks/>
        public System.DateTime AcceptDate;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AssignSolutionSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class AssignSolutionSetupProtocol {
        
        /// <remarks/>
        public string SolutionIDNum;
        
        /// <remarks/>
        public string NewUser;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public System.DateTime AssignDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("DispatchSolutionSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class DispatchSolutionSetupProtocol {
        
        /// <remarks/>
        public string SolutionIDNum;
        
        /// <remarks/>
        public string Queue;
        
        /// <remarks/>
        public System.DateTime DispatchDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ForwardSolutionSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class ForwardSolutionSetupProtocol {
        
        /// <remarks/>
        public string SolutionIDNum;
        
        /// <remarks/>
        public string NewQueue;
        
        /// <remarks/>
        public System.DateTime ForwardDate;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("MoveSolutionSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class MoveSolutionSetupProtocol {
        
        /// <remarks/>
        public string SolutionIDNum;
        
        /// <remarks/>
        public string NewWipBin;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RejectSolutionSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class RejectSolutionSetupProtocol {
        
        /// <remarks/>
        public string SolutionIDNum;
        
        /// <remarks/>
        public System.DateTime RejectDate;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("YankSolutionSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class YankSolutionSetupProtocol {
        
        /// <remarks/>
        public string SolutionIDNum;
        
        /// <remarks/>
        public string WipBin;
        
        /// <remarks/>
        public System.DateTime YankDate;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateEmployeeSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class CreateEmployeeSetupProtocol {
        
        /// <remarks/>
        public string FirstName;
        
        /// <remarks/>
        public string LastName;
        
        /// <remarks/>
        public string LoginName;
        
        /// <remarks/>
        public string Password;
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public string Email;
        
        /// <remarks/>
        public string Phone;
        
        /// <remarks/>
        public string Pager;
        
        /// <remarks/>
        public string OnlinePrivilegeClass;
        
        /// <remarks/>
        public string OfflinePrivilegeClass;
        
        /// <remarks/>
        public string EmployeeIdentifier;
        
        /// <remarks/>
        public bool IsActive;
        
        /// <remarks/>
        public bool AllowProxy;
        
        /// <remarks/>
        public System.DateTime StartDate;
        
        /// <remarks/>
        public string Supervisor;
        
        /// <remarks/>
        public string WorkGroup;
        
        /// <remarks/>
        public System.DateTime WorkGroupStartDate;
        
        /// <remarks/>
        public System.Double LaborRate;
        
        /// <remarks/>
        public bool IsSupervisor;
        
        /// <remarks/>
        public bool IsFieldEngineer;
        
        /// <remarks/>
        public string NormalBusinessHoursHigh;
        
        /// <remarks/>
        public string NormalBusinessHoursMed;
        
        /// <remarks/>
        public string NormalBusinessHoursLow;
        
        /// <remarks/>
        public string AfterBusinessHoursHigh;
        
        /// <remarks/>
        public string AfterBusinessHoursMed;
        
        /// <remarks/>
        public string AfterBusinessHoursLow;
        
        /// <remarks/>
        public string DefaultWipBinTitle;
        
        /// <remarks/>
        public string ResourceConfig;
        
        /// <remarks/>
        public string DefaultTablespace;
        
        /// <remarks/>
        public string TempTablespace;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateEmployeeResultProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class CreateEmployeeResultProtocol {
        
        /// <remarks/>
        public int UserObjid;
        
        /// <remarks/>
        public int EmployeeObjid;
        
        /// <remarks/>
        public short ReturnCode;
        
        /// <remarks/>
        public string IDNum;
        
        /// <remarks/>
        public int Objid;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateInteractionSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class CreateInteractionSetupProtocol {
        
        /// <remarks/>
        public string Title;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string ContactFirstName;
        
        /// <remarks/>
        public string ContactLastName;
        
        /// <remarks/>
        public string ContactPhone;
        
        /// <remarks/>
        public string ZipCode;
        
        /// <remarks/>
        public string Reason1;
        
        /// <remarks/>
        public string Reason2;
        
        /// <remarks/>
        public string ProductName;
        
        /// <remarks/>
        public string Direction;
        
        /// <remarks/>
        public string InteractionType;
        
        /// <remarks/>
        public string Origin;
        
        /// <remarks/>
        public bool IsDoneInOne;
        
        /// <remarks/>
        public string Result;
        
        /// <remarks/>
        public bool FeeBased;
        
        /// <remarks/>
        public string PayOption;
        
        /// <remarks/>
        public string LeadSource;
        
        /// <remarks/>
        public System.DateTime StartDate;
        
        /// <remarks/>
        public int Duration;
        
        /// <remarks/>
        public int WaitDuration;
        
        /// <remarks/>
        public int EnteredDuration;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool GenerateTimeBombs;
        
        /// <remarks/>
        public AdditionalFieldProtocol[] AdditionalFields;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("DeinstallSitePartSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class DeinstallSitePartSetupProtocol {
        
        /// <remarks/>
        public int SitePartObjid;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime DeinstallDate;
        
        /// <remarks/>
        public bool UseRemove;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("DeleteProductBinSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class DeleteProductBinSetupProtocol {
        
        /// <remarks/>
        public int BinObjid;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime DeleteDate;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("UpdateProductBinSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class UpdateProductBinSetupProtocol {
        
        /// <remarks/>
        public int BinObjid;
        
        /// <remarks/>
        public string BinName;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public int PrimarySupportEmployeeObjid;
        
        /// <remarks/>
        public int SecondarySupportEmployeeObjid;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime UpdateDate;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("CreateProductBinSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class CreateProductBinSetupProtocol {
        
        /// <remarks/>
        public string BinName;
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public int ParentBinObjid;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public int PrimarySupportEmployeeObjid;
        
        /// <remarks/>
        public int SecondarySupportEmployeeObjid;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime CreateDate;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ReinstallSitePartToSiteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class ReinstallSitePartToSiteSetupProtocol {
        
        /// <remarks/>
        public int SitePartObjid;
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime ReinstallDate;
        
        /// <remarks/>
        public bool AddActivityLog;
        
        /// <remarks/>
        public bool UseInstall;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ReinstallSitePartToBinSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class ReinstallSitePartToBinSetupProtocol {
        
        /// <remarks/>
        public int SitePartObjid;
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public int ParentBinObjid;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime ReinstallDate;
        
        /// <remarks/>
        public bool AddActivityLog;
        
        /// <remarks/>
        public bool UseInstall;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ReinstallSitePartToPartSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class ReinstallSitePartToPartSetupProtocol {
        
        /// <remarks/>
        public int SitePartObjid;
        
        /// <remarks/>
        public string SiteIDNum;
        
        /// <remarks/>
        public int ParentSitePartObjid;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public System.DateTime ReinstallDate;
        
        /// <remarks/>
        public bool AddActivityLog;
        
        /// <remarks/>
        public bool UseInstall;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("MoveSitePartToPartSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class MoveSitePartToPartSetupProtocol {
        
        /// <remarks/>
        public int SitePartObjid;
        
        /// <remarks/>
        public System.DateTime MoveDate;
        
        /// <remarks/>
        public int ParentSitePartObjid;
        
        /// <remarks/>
        public bool AddActivityLog;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool InstallAndMove;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("MoveSitePartToBinSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class MoveSitePartToBinSetupProtocol {
        
        /// <remarks/>
        public int SitePartObjid;
        
        /// <remarks/>
        public System.DateTime MoveDate;
        
        /// <remarks/>
        public int ParentBinObjid;
        
        /// <remarks/>
        public bool AddActivityLog;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool InstallAndMove;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("MoveSitePartToSiteSetupProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class MoveSitePartToSiteSetupProtocol {
        
        /// <remarks/>
        public int SitePartObjid;
        
        /// <remarks/>
        public System.DateTime MoveDate;
        
        /// <remarks/>
        public string ParentSiteIDNum;
        
        /// <remarks/>
        public bool AddActivityLog;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public bool InstallAndMove;
        
        /// <remarks/>
        public int DirtyFieldFlags;
        
        /// <remarks/>
        public int ConstructorCue;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ToolkitResultProtocol", "http://www.fchoice.com/schemas/FChoice.WebServices.Clarify.InterfacesToolkitSrv_v" +
"1")]
    public class ToolkitResultProtocol {
        
        /// <remarks/>
        public short ReturnCode;
        
        /// <remarks/>
        public string IDNum;
        
        /// <remarks/>
        public int Objid;
    }
}
