//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Web;
using System.Web.Services;
using Protocol = FChoice.WebServices.Clarify.Client.Protocols.SupportToolkitSrv;
using FChoice.WebServices.Clarify.Client;

namespace FChoice.WebServices.Clarify.Client.Support
{
	public class SupportToolkitWS
	{
		private Protocol.SupportToolkitSrv toolkitProtocol;
		
		public SupportToolkitWS(ClarifySessionWS session)
		{
			toolkitProtocol = new Protocol.SupportToolkitSrv();
			toolkitProtocol.Url = new Uri( session.BaseUri, "SupportToolkitSrv.asmx" ).ToString();
			toolkitProtocol.AuthenticationHeaderValue = new Protocol.AuthenticationHeader();
			
			toolkitProtocol.AuthenticationHeaderValue.SessionID = session.SessionToken;
		}
		
		public Protocol.GetSubcaseTimeAndExpensesResultProtocol GetSubcaseTimeAndExpenses(String subcaseIDNum)
		{
			return toolkitProtocol.GetSubcaseTimeAndExpenses( subcaseIDNum );
		}
		
		public Protocol.GetSubcaseTimeAndExpensesResultProtocol GetSubcaseTimeAndExpenses(GetSubcaseTimeAndExpensesSetupWS setupParam)
		{
			return toolkitProtocol.GetSubcaseTimeAndExpenses( setupParam.ToProtocol() );
		}
		
		public Protocol.GetCaseTimeAndExpensesResultProtocol GetCaseTimeAndExpenses(String caseIDNum)
		{
			return toolkitProtocol.GetCaseTimeAndExpenses( caseIDNum );
		}
		
		public Protocol.GetCaseTimeAndExpensesResultProtocol GetCaseTimeAndExpenses(GetCaseTimeAndExpensesSetupWS setupParam)
		{
			return toolkitProtocol.GetCaseTimeAndExpenses( setupParam.ToProtocol() );
		}
		
		public Protocol.LogSubcaseEmailResultProtocol LogSubcaseEmail(String subcaseIDNum)
		{
			return toolkitProtocol.LogSubcaseEmail( subcaseIDNum );
		}
		
		public Protocol.LogSubcaseEmailResultProtocol LogSubcaseEmail(LogSubcaseEmailSetupWS setupParam)
		{
			return toolkitProtocol.LogSubcaseEmail( setupParam.ToProtocol() );
		}
		
		public Protocol.LogCaseEmailResultProtocol LogCaseEmail(String caseIDNum)
		{
			return toolkitProtocol.LogCaseEmail( caseIDNum );
		}
		
		public Protocol.LogCaseEmailResultProtocol LogCaseEmail(LogCaseEmailSetupWS setupParam)
		{
			return toolkitProtocol.LogCaseEmail( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol UnrelateCaseFromParentCase(String caseIDNum)
		{
			return toolkitProtocol.UnrelateCaseFromParentCase( caseIDNum );
		}
		
		public Protocol.ToolkitResultProtocol UnrelateCaseFromParentCase(UnrelateCaseFromParentCaseSetupWS setupParam)
		{
			return toolkitProtocol.UnrelateCaseFromParentCase( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol RelateCaseToParentCase(String caseIDNum, String parentCaseIDNum)
		{
			return toolkitProtocol.RelateCaseToParentCase( caseIDNum, parentCaseIDNum );
		}
		
		public Protocol.ToolkitResultProtocol RelateCaseToParentCase(RelateCaseToParentCaseSetupWS setupParam)
		{
			return toolkitProtocol.RelateCaseToParentCase( setupParam.ToProtocol() );
		}
		
		public Protocol.LogSubcaseNoteResultProtocol LogSubcaseNote(String subcaseIDNum)
		{
			return toolkitProtocol.LogSubcaseNote( subcaseIDNum );
		}
		
		public Protocol.LogSubcaseNoteResultProtocol LogSubcaseNote(LogSubcaseNoteSetupWS setupParam)
		{
			return toolkitProtocol.LogSubcaseNote( setupParam.ToProtocol() );
		}
		
		public Protocol.LogCaseNoteResultProtocol LogCaseNote(String caseIDNum)
		{
			return toolkitProtocol.LogCaseNote( caseIDNum );
		}
		
		public Protocol.LogCaseNoteResultProtocol LogCaseNote(LogCaseNoteSetupWS setupParam)
		{
			return toolkitProtocol.LogCaseNote( setupParam.ToProtocol() );
		}
		
		public Protocol.LogSubcaseResearchResultProtocol LogSubcaseResearch(String subcaseIDNum, System.Int32 researchDuration)
		{
			return toolkitProtocol.LogSubcaseResearch( subcaseIDNum, researchDuration );
		}
		
		public Protocol.LogSubcaseResearchResultProtocol LogSubcaseResearch(LogSubcaseResearchSetupWS setupParam)
		{
			return toolkitProtocol.LogSubcaseResearch( setupParam.ToProtocol() );
		}
		
		public Protocol.LogCaseResearchResultProtocol LogCaseResearch(String caseIDNum, System.Int32 researchDuration)
		{
			return toolkitProtocol.LogCaseResearch( caseIDNum, researchDuration );
		}
		
		public Protocol.LogCaseResearchResultProtocol LogCaseResearch(LogCaseResearchSetupWS setupParam)
		{
			return toolkitProtocol.LogCaseResearch( setupParam.ToProtocol() );
		}
		
		public Protocol.LogSubcasePhoneResultProtocol LogSubcasePhone(String subcaseIDNum, String contactFirstName, String contactLastName, String contactPhone)
		{
			return toolkitProtocol.LogSubcasePhone( subcaseIDNum, contactFirstName, contactLastName, contactPhone );
		}
		
		public Protocol.LogSubcasePhoneResultProtocol LogSubcasePhone(LogSubcasePhoneSetupWS setupParam)
		{
			return toolkitProtocol.LogSubcasePhone( setupParam.ToProtocol() );
		}
		
		public Protocol.LogCasePhoneResultProtocol LogCasePhone(String caseIDNum, String contactFirstName, String contactLastName, String contactPhone)
		{
			return toolkitProtocol.LogCasePhone( caseIDNum, contactFirstName, contactLastName, contactPhone );
		}
		
		public Protocol.LogCasePhoneResultProtocol LogCasePhone(LogCasePhoneSetupWS setupParam)
		{
			return toolkitProtocol.LogCasePhone( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol ReopenSubcase(String subcaseIDNum)
		{
			return toolkitProtocol.ReopenSubcase( subcaseIDNum );
		}
		
		public Protocol.ToolkitResultProtocol ReopenSubcase(ReopenSubcaseSetupWS setupParam)
		{
			return toolkitProtocol.ReopenSubcase( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol ReopenCase(String caseIDNum)
		{
			return toolkitProtocol.ReopenCase( caseIDNum );
		}
		
		public Protocol.ToolkitResultProtocol ReopenCase(ReopenCaseSetupWS setupParam)
		{
			return toolkitProtocol.ReopenCase( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol UpdateSubcase(String subcaseIDNum)
		{
			return toolkitProtocol.UpdateSubcase( subcaseIDNum );
		}
		
		public Protocol.ToolkitResultProtocol UpdateSubcase(UpdateSubcaseSetupWS setupParam)
		{
			return toolkitProtocol.UpdateSubcase( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol UpdateCase(String caseIDNum)
		{
			return toolkitProtocol.UpdateCase( caseIDNum );
		}
		
		public Protocol.ToolkitResultProtocol UpdateCase(UpdateCaseSetupWS setupParam)
		{
			return toolkitProtocol.UpdateCase( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol AssignSubcase(String subcaseIDNum)
		{
			return toolkitProtocol.AssignSubcase( subcaseIDNum );
		}
		
		public Protocol.ToolkitResultProtocol AssignSubcase(AssignSubcaseSetupWS setupParam)
		{
			return toolkitProtocol.AssignSubcase( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol AssignCase(String caseIDNum)
		{
			return toolkitProtocol.AssignCase( caseIDNum );
		}
		
		public Protocol.ToolkitResultProtocol AssignCase(AssignCaseSetupWS setupParam)
		{
			return toolkitProtocol.AssignCase( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol RejectSubcase(String subcaseIDNum)
		{
			return toolkitProtocol.RejectSubcase( subcaseIDNum );
		}
		
		public Protocol.ToolkitResultProtocol RejectSubcase(RejectSubcaseSetupWS setupParam)
		{
			return toolkitProtocol.RejectSubcase( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol RejectCase(String caseIDNum)
		{
			return toolkitProtocol.RejectCase( caseIDNum );
		}
		
		public Protocol.ToolkitResultProtocol RejectCase(RejectCaseSetupWS setupParam)
		{
			return toolkitProtocol.RejectCase( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol AcceptSubcase(String subcaseIDNum)
		{
			return toolkitProtocol.AcceptSubcase( subcaseIDNum );
		}
		
		public Protocol.ToolkitResultProtocol AcceptSubcase(AcceptSubcaseSetupWS setupParam)
		{
			return toolkitProtocol.AcceptSubcase( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol AcceptCase(String caseIDNum)
		{
			return toolkitProtocol.AcceptCase( caseIDNum );
		}
		
		public Protocol.ToolkitResultProtocol AcceptCase(AcceptCaseSetupWS setupParam)
		{
			return toolkitProtocol.AcceptCase( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol MoveSubcase(String subcaseIDNum, String newWipBin)
		{
			return toolkitProtocol.MoveSubcase( subcaseIDNum, newWipBin );
		}
		
		public Protocol.ToolkitResultProtocol MoveSubcase(MoveSubcaseSetupWS setupParam)
		{
			return toolkitProtocol.MoveSubcase( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol MoveCase(String caseIDNum, String newWipBin)
		{
			return toolkitProtocol.MoveCase( caseIDNum, newWipBin );
		}
		
		public Protocol.ToolkitResultProtocol MoveCase(MoveCaseSetupWS setupParam)
		{
			return toolkitProtocol.MoveCase( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol FulfillCommitment(Int32 logObjid)
		{
			return toolkitProtocol.FulfillCommitment( logObjid );
		}
		
		public Protocol.ToolkitResultProtocol FulfillCommitment(FulfillCommitmentSetupWS setupParam)
		{
			return toolkitProtocol.FulfillCommitment( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol UpdateSubcaseCommitment(String subcaseIDNum, DateTime commitmentDate, Int32 commitmentObjid)
		{
			return toolkitProtocol.UpdateSubcaseCommitment( subcaseIDNum, commitmentDate, commitmentObjid );
		}
		
		public Protocol.ToolkitResultProtocol UpdateSubcaseCommitment(UpdateSubcaseCommitmentSetupWS setupParam)
		{
			return toolkitProtocol.UpdateSubcaseCommitment( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol UpdateCaseCommitment(String caseIDNum, DateTime commitmentDate, Int32 commitmentObjid)
		{
			return toolkitProtocol.UpdateCaseCommitment( caseIDNum, commitmentDate, commitmentObjid );
		}
		
		public Protocol.ToolkitResultProtocol UpdateCaseCommitment(UpdateCaseCommitmentSetupWS setupParam)
		{
			return toolkitProtocol.UpdateCaseCommitment( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol LogSubcaseCommitment(String subcaseIDNum, String title, System.Int32 priorWarning, String contactFirstName, String contactLastName, String contactPhone)
		{
			return toolkitProtocol.LogSubcaseCommitment( subcaseIDNum, title, priorWarning, contactFirstName, contactLastName, contactPhone );
		}
		
		public Protocol.ToolkitResultProtocol LogSubcaseCommitment(LogSubcaseCommitmentSetupWS setupParam)
		{
			return toolkitProtocol.LogSubcaseCommitment( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol LogCaseCommitment(String caseIDNum, String title, System.Int32 priorWarning, String contactFirstName, String contactLastName, String contactPhone)
		{
			return toolkitProtocol.LogCaseCommitment( caseIDNum, title, priorWarning, contactFirstName, contactLastName, contactPhone );
		}
		
		public Protocol.ToolkitResultProtocol LogCaseCommitment(LogCaseCommitmentSetupWS setupParam)
		{
			return toolkitProtocol.LogCaseCommitment( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol YankSubcase(String subcaseIDNum)
		{
			return toolkitProtocol.YankSubcase( subcaseIDNum );
		}
		
		public Protocol.ToolkitResultProtocol YankSubcase(YankSubcaseSetupWS setupParam)
		{
			return toolkitProtocol.YankSubcase( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol YankCase(String caseIDNum)
		{
			return toolkitProtocol.YankCase( caseIDNum );
		}
		
		public Protocol.ToolkitResultProtocol YankCase(YankCaseSetupWS setupParam)
		{
			return toolkitProtocol.YankCase( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol InitialResponse(String caseIDNum)
		{
			return toolkitProtocol.InitialResponse( caseIDNum );
		}
		
		public Protocol.ToolkitResultProtocol InitialResponse(InitialResponseSetupWS setupParam)
		{
			return toolkitProtocol.InitialResponse( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol ForwardSubcase(String subcaseIDNum, String newQueue)
		{
			return toolkitProtocol.ForwardSubcase( subcaseIDNum, newQueue );
		}
		
		public Protocol.ToolkitResultProtocol ForwardSubcase(ForwardSubcaseSetupWS setupParam)
		{
			return toolkitProtocol.ForwardSubcase( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol ForwardCase(String caseIDNum, String newQueue)
		{
			return toolkitProtocol.ForwardCase( caseIDNum, newQueue );
		}
		
		public Protocol.ToolkitResultProtocol ForwardCase(ForwardCaseSetupWS setupParam)
		{
			return toolkitProtocol.ForwardCase( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol DispatchSubcase(String subcaseIDNum, String queue)
		{
			return toolkitProtocol.DispatchSubcase( subcaseIDNum, queue );
		}
		
		public Protocol.ToolkitResultProtocol DispatchSubcase(DispatchSubcaseSetupWS setupParam)
		{
			return toolkitProtocol.DispatchSubcase( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol DispatchCase(String caseIDNum, String queue)
		{
			return toolkitProtocol.DispatchCase( caseIDNum, queue );
		}
		
		public Protocol.ToolkitResultProtocol DispatchCase(DispatchCaseSetupWS setupParam)
		{
			return toolkitProtocol.DispatchCase( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol CreateSubcase(String caseIDNum)
		{
			return toolkitProtocol.CreateSubcase( caseIDNum );
		}
		
		public Protocol.ToolkitResultProtocol CreateSubcase(CreateSubcaseSetupWS setupParam)
		{
			return toolkitProtocol.CreateSubcase( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol CreateCase(String siteIDNum, String contactFirstName, String contactLastName, String contactPhone)
		{
			return toolkitProtocol.CreateCase( siteIDNum, contactFirstName, contactLastName, contactPhone );
		}
		
		public Protocol.ToolkitResultProtocol CreateCase(CreateCaseSetupWS setupParam)
		{
			return toolkitProtocol.CreateCase( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol CreateCaseObjid()
		{
			return toolkitProtocol.CreateCaseObjid(  );
		}
		
		public Protocol.ToolkitResultProtocol CreateCaseObjid(CreateCaseObjidSetupWS setupParam)
		{
			return toolkitProtocol.CreateCaseObjid( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol CloseSubcase(String subcaseIDNum)
		{
			return toolkitProtocol.CloseSubcase( subcaseIDNum );
		}
		
		public Protocol.ToolkitResultProtocol CloseSubcase(CloseSubcaseSetupWS setupParam)
		{
			return toolkitProtocol.CloseSubcase( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol CloseCase(String caseIDNum)
		{
			return toolkitProtocol.CloseCase( caseIDNum );
		}
		
		public Protocol.ToolkitResultProtocol CloseCase(CloseCaseSetupWS setupParam)
		{
			return toolkitProtocol.CloseCase( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol ChangeSubcaseStatus(String subcaseIDNum)
		{
			return toolkitProtocol.ChangeSubcaseStatus( subcaseIDNum );
		}
		
		public Protocol.ToolkitResultProtocol ChangeSubcaseStatus(ChangeSubcaseStatusSetupWS setupParam)
		{
			return toolkitProtocol.ChangeSubcaseStatus( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol ChangeCaseStatus(String caseIDNum)
		{
			return toolkitProtocol.ChangeCaseStatus( caseIDNum );
		}
		
		public Protocol.ToolkitResultProtocol ChangeCaseStatus(ChangeCaseStatusSetupWS setupParam)
		{
			return toolkitProtocol.ChangeCaseStatus( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol ChangeCaseSite(String caseIDNum, String siteIDNum)
		{
			return toolkitProtocol.ChangeCaseSite( caseIDNum, siteIDNum );
		}
		
		public Protocol.ToolkitResultProtocol ChangeCaseSite(ChangeCaseSiteSetupWS setupParam)
		{
			return toolkitProtocol.ChangeCaseSite( setupParam.ToProtocol() );
		}
		
		public Protocol.ToolkitResultProtocol ChangeCaseContact(String caseIDNum, String contactFirstName, String contactLastName, String contactPhone)
		{
			return toolkitProtocol.ChangeCaseContact( caseIDNum, contactFirstName, contactLastName, contactPhone );
		}
		
		public Protocol.ToolkitResultProtocol ChangeCaseContact(ChangeCaseContactSetupWS setupParam)
		{
			return toolkitProtocol.ChangeCaseContact( setupParam.ToProtocol() );
		}
		
	}
}
